Index: src/Text.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#text.today=Today\r\n#text.month=Month;\r\n#text.year=Year;\r\n#\r\n#label.titulo.menu.cliente=MENU CLIENTE
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- src/Text.properties	(revision 94d56b93f5cc2a5d5537a2f6b203d7f05233f991)
+++ src/Text.properties	(date 1609536767411)
@@ -1,5 +1,5 @@
-#text.today=Today
-#text.month=Month;
-#text.year=Year;
-#
-#label.titulo.menu.cliente=MENU CLIENTE
\ No newline at end of file
+text.today=Today
+text.month=Month;
+text.year=Year;
+
+label.titulo.menu.cliente=MENU CLIENTE
\ No newline at end of file
Index: src/com/company/MainInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n//\r\n//package com.company;\r\n//\r\n//\r\n//import com.company.gui.Interface;\r\n//\r\n//public class MainInterface {\r\n//\r\n//    public static void main(String[] args) {\r\n//        Interface sistema = new Interface();\r\n//        sistema.setVisible(true);\r\n//    }\r\n//\r\n//}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/MainInterface.java	(revision 94d56b93f5cc2a5d5537a2f6b203d7f05233f991)
+++ src/com/company/MainInterface.java	(date 1609536767458)
@@ -1,16 +1,16 @@
-//
-//
-//package com.company;
-//
-//
-//import com.company.gui.Interface;
-//
-//public class MainInterface {
-//
-//    public static void main(String[] args) {
-//        Interface sistema = new Interface();
-//        sistema.setVisible(true);
-//    }
-//
-//}
+
+
+package com.company;
+
+
+import com.company.gui.Interface;
+
+public class MainInterface {
+
+    public static void main(String[] args) {
+        Interface sistema = new Interface();
+        sistema.setVisible(true);
+    }
+
+}
 
Index: src/com/company/gui/JLinkButton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//package com.company.gui;\r\n//\r\n//import javax.swing.*;\r\n//import javax.swing.plaf.ComponentUI;\r\n//import javax.swing.plaf.metal.MetalButtonUI;\r\n//import java.awt.*;\r\n//import java.net.URL;\r\n//\r\n//public class JLinkButton extends JButton {\r\n//  private static final String uiString = \"LinkButtonUI\";\r\n//\r\n//  public static final int ALWAYS_UNDERLINE = 0;\r\n//\r\n//  public static final int HOVER_UNDERLINE = 1;\r\n//\r\n//  public static final int NEVER_UNDERLINE = 2;\r\n//\r\n//  public static final int SYSTEM_DEFAULT = 3;\r\n//\r\n//  private int linkBehavior;\r\n//\r\n//  private Color linkColor;\r\n//\r\n//  private Color colorPressed;\r\n//\r\n//  private Color visitedLinkColor;\r\n//\r\n//  private Color disabledLinkColor;\r\n//\r\n//  private URL buttonURL;\r\n//\r\n//  private Action defaultAction;\r\n//\r\n//  private boolean isLinkVisited;\r\n//\r\n//  public static void main(String[] a) {\r\n//    JFrame f = new JFrame();\r\n//    f.getContentPane().setLayout(new GridLayout(0,2));\r\n//    f.getContentPane().add(new JLinkButton(\"www.java2s.com\"));\r\n//    f.getContentPane().add(new JLinkButton(\"www.java2s.com/ExampleCode/CatalogExampleCode.htm\"));\r\n//    f.setSize(600, 200);\r\n//    f.setVisible(true);\r\n//  }\r\n//\r\n//  public JLinkButton() {\r\n//    this(null, null, null);\r\n//  }\r\n//\r\n//  public JLinkButton(Action action) {\r\n//    this();\r\n//    setAction(action);\r\n//  }\r\n//\r\n//  public JLinkButton(Icon icon) {\r\n//    this(null, icon, null);\r\n//  }\r\n//\r\n//  public JLinkButton(String s) {\r\n//    this(s, null, null);\r\n//  }\r\n//\r\n//  public JLinkButton(URL url) {\r\n//    this(null, null, url);\r\n//  }\r\n//\r\n//  public JLinkButton(String s, URL url) {\r\n//    this(s, null, url);\r\n//  }\r\n//\r\n//  public JLinkButton(Icon icon, URL url) {\r\n//    this(null, icon, url);\r\n//  }\r\n//\r\n//  public JLinkButton(String text, Icon icon, URL url) {\r\n//    super(text, icon);\r\n//    linkBehavior = SYSTEM_DEFAULT;\r\n//    linkColor = Color.blue;\r\n//    colorPressed = Color.red;\r\n//    visitedLinkColor = new Color(128, 0, 128);\r\n//    if (text == null && url != null)\r\n//      setText(url.toExternalForm());\r\n//    setLinkURL(url);\r\n//    setCursor(Cursor.getPredefinedCursor(12));\r\n//    setBorderPainted(false);\r\n//    setContentAreaFilled(false);\r\n//    setRolloverEnabled(true);\r\n//    addActionListener(defaultAction);\r\n//  }\r\n//\r\n//  public void updateUI() {\r\n//    setUI(BasicLinkButtonUI.createUI(this));\r\n//  }\r\n//\r\n//  private void setDefault() {\r\n//    UIManager.getDefaults().put(\"LinkButtonUI\", \"BasicLinkButtonUI\");\r\n//  }\r\n//\r\n//  public String getUIClassID() {\r\n//    return \"LinkButtonUI\";\r\n//  }\r\n//\r\n//  protected void setupToolTipText() {\r\n//    String tip = null;\r\n//    if (buttonURL != null)\r\n//      tip = buttonURL.toExternalForm();\r\n//    setToolTipText(tip);\r\n//  }\r\n//\r\n//  public void setLinkBehavior(int bnew) {\r\n//    checkLinkBehaviour(bnew);\r\n//    int old = linkBehavior;\r\n//    linkBehavior = bnew;\r\n//    firePropertyChange(\"linkBehavior\", old, bnew);\r\n//    repaint();\r\n//  }\r\n//\r\n//  private void checkLinkBehaviour(int beha) {\r\n//    if (beha != ALWAYS_UNDERLINE && beha != HOVER_UNDERLINE\r\n//        && beha != NEVER_UNDERLINE && beha != SYSTEM_DEFAULT)\r\n//      throw new IllegalArgumentException(\"Not a legal LinkBehavior\");\r\n//    else\r\n//      return;\r\n//  }\r\n//\r\n//  public int getLinkBehavior() {\r\n//    return linkBehavior;\r\n//  }\r\n//\r\n//  public void setLinkColor(Color color) {\r\n//    Color colorOld = linkColor;\r\n//    linkColor = color;\r\n//    firePropertyChange(\"linkColor\", colorOld, color);\r\n//    repaint();\r\n//  }\r\n//\r\n//  public Color getLinkColor() {\r\n//    return linkColor;\r\n//  }\r\n//\r\n//  public void setActiveLinkColor(Color colorNew) {\r\n//    Color colorOld = colorPressed;\r\n//    colorPressed = colorNew;\r\n//    firePropertyChange(\"activeLinkColor\", colorOld, colorNew);\r\n//    repaint();\r\n//  }\r\n//\r\n//  public Color getActiveLinkColor() {\r\n//    return colorPressed;\r\n//  }\r\n//\r\n//  public void setDisabledLinkColor(Color color) {\r\n//    Color colorOld = disabledLinkColor;\r\n//    disabledLinkColor = color;\r\n//    firePropertyChange(\"disabledLinkColor\", colorOld, color);\r\n//    if (!isEnabled())\r\n//      repaint();\r\n//  }\r\n//\r\n//  public Color getDisabledLinkColor() {\r\n//    return disabledLinkColor;\r\n//  }\r\n//\r\n//  public void setVisitedLinkColor(Color colorNew) {\r\n//    Color colorOld = visitedLinkColor;\r\n//    visitedLinkColor = colorNew;\r\n//    firePropertyChange(\"visitedLinkColor\", colorOld, colorNew);\r\n//    repaint();\r\n//  }\r\n//\r\n//  public Color getVisitedLinkColor() {\r\n//    return visitedLinkColor;\r\n//  }\r\n//\r\n//  public URL getLinkURL() {\r\n//    return buttonURL;\r\n//  }\r\n//\r\n//  public void setLinkURL(URL url) {\r\n//    URL urlOld = buttonURL;\r\n//    buttonURL = url;\r\n//    setupToolTipText();\r\n//    firePropertyChange(\"linkURL\", urlOld, url);\r\n//    revalidate();\r\n//    repaint();\r\n//  }\r\n//\r\n//  public void setLinkVisited(boolean flagNew) {\r\n//    boolean flagOld = isLinkVisited;\r\n//    isLinkVisited = flagNew;\r\n//    firePropertyChange(\"linkVisited\", flagOld, flagNew);\r\n//    repaint();\r\n//  }\r\n//\r\n//  public boolean isLinkVisited() {\r\n//    return isLinkVisited;\r\n//  }\r\n//\r\n//  public void setDefaultAction(Action actionNew) {\r\n//    Action actionOld = defaultAction;\r\n//    defaultAction = actionNew;\r\n//    firePropertyChange(\"defaultAction\", actionOld, actionNew);\r\n//  }\r\n//\r\n//  public Action getDefaultAction() {\r\n//    return defaultAction;\r\n//  }\r\n//\r\n//  protected String paramString() {\r\n//    String str;\r\n//    if (linkBehavior == ALWAYS_UNDERLINE)\r\n//      str = \"ALWAYS_UNDERLINE\";\r\n//    else if (linkBehavior == HOVER_UNDERLINE)\r\n//      str = \"HOVER_UNDERLINE\";\r\n//    else if (linkBehavior == NEVER_UNDERLINE)\r\n//      str = \"NEVER_UNDERLINE\";\r\n//    else\r\n//      str = \"SYSTEM_DEFAULT\";\r\n//    String colorStr = linkColor == null ? \"\" : linkColor.toString();\r\n//    String colorPressStr = colorPressed == null ? \"\" : colorPressed\r\n//        .toString();\r\n//    String disabledLinkColorStr = disabledLinkColor == null ? \"\"\r\n//        : disabledLinkColor.toString();\r\n//    String visitedLinkColorStr = visitedLinkColor == null ? \"\"\r\n//        : visitedLinkColor.toString();\r\n//    String buttonURLStr = buttonURL == null ? \"\" : buttonURL.toString();\r\n//    String isLinkVisitedStr = isLinkVisited ? \"true\" : \"false\";\r\n//    return super.paramString() + \",linkBehavior=\" + str + \",linkURL=\"\r\n//        + buttonURLStr + \",linkColor=\" + colorStr + \",activeLinkColor=\"\r\n//        + colorPressStr + \",disabledLinkColor=\" + disabledLinkColorStr\r\n//        + \",visitedLinkColor=\" + visitedLinkColorStr\r\n//        + \",linkvisitedString=\" + isLinkVisitedStr;\r\n//  }\r\n//}\r\n//\r\n//class BasicLinkButtonUI extends MetalButtonUI {\r\n//  private static final BasicLinkButtonUI ui = new BasicLinkButtonUI();\r\n//\r\n//  public BasicLinkButtonUI() {\r\n//  }\r\n//\r\n//  public static ComponentUI createUI(JComponent jcomponent) {\r\n//    return ui;\r\n//  }\r\n//\r\n//  protected void paintText(Graphics g, JComponent com, Rectangle rect,\r\n//      String s) {\r\n//    JLinkButton bn = (JLinkButton) com;\r\n//    ButtonModel bnModel = bn.getModel();\r\n//    Color color = bn.getForeground();\r\n//    Object obj = null;\r\n//    if (bnModel.isEnabled()) {\r\n//      if (bnModel.isPressed())\r\n//        bn.setForeground(bn.getActiveLinkColor());\r\n//      else if (bn.isLinkVisited())\r\n//        bn.setForeground(bn.getVisitedLinkColor());\r\n//\r\n//      else\r\n//        bn.setForeground(bn.getLinkColor());\r\n//    } else {\r\n//      if (bn.getDisabledLinkColor() != null)\r\n//        bn.setForeground(bn.getDisabledLinkColor());\r\n//    }\r\n//    super.paintText(g, com, rect, s);\r\n//    int behaviour = bn.getLinkBehavior();\r\n//    boolean drawLine = false;\r\n//    if (behaviour == JLinkButton.HOVER_UNDERLINE) {\r\n//      if (bnModel.isRollover())\r\n//        drawLine = true;\r\n//    } else if (behaviour == JLinkButton.ALWAYS_UNDERLINE || behaviour == JLinkButton.SYSTEM_DEFAULT)\r\n//      drawLine = true;\r\n//    if (!drawLine)\r\n//      return;\r\n//    FontMetrics fm = g.getFontMetrics();\r\n//    int x = rect.x + getTextShiftOffset();\r\n//    int y = (rect.y + fm.getAscent() + fm.getDescent() + getTextShiftOffset()) - 1;\r\n//    if (bnModel.isEnabled()) {\r\n//      g.setColor(bn.getForeground());\r\n//      g.drawLine(x, y, (x + rect.width) - 1, y);\r\n//    } else {\r\n//      g.setColor(bn.getBackground().brighter());\r\n//      g.drawLine(x, y, (x + rect.width) - 1, y);\r\n//    }\r\n//  }\r\n//}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/gui/JLinkButton.java	(revision 94d56b93f5cc2a5d5537a2f6b203d7f05233f991)
+++ src/com/company/gui/JLinkButton.java	(date 1609536767442)
@@ -1,284 +1,284 @@
-//package com.company.gui;
-//
-//import javax.swing.*;
-//import javax.swing.plaf.ComponentUI;
-//import javax.swing.plaf.metal.MetalButtonUI;
-//import java.awt.*;
-//import java.net.URL;
-//
-//public class JLinkButton extends JButton {
-//  private static final String uiString = "LinkButtonUI";
-//
-//  public static final int ALWAYS_UNDERLINE = 0;
-//
-//  public static final int HOVER_UNDERLINE = 1;
-//
-//  public static final int NEVER_UNDERLINE = 2;
-//
-//  public static final int SYSTEM_DEFAULT = 3;
-//
-//  private int linkBehavior;
-//
-//  private Color linkColor;
-//
-//  private Color colorPressed;
-//
-//  private Color visitedLinkColor;
-//
-//  private Color disabledLinkColor;
-//
-//  private URL buttonURL;
-//
-//  private Action defaultAction;
-//
-//  private boolean isLinkVisited;
-//
-//  public static void main(String[] a) {
-//    JFrame f = new JFrame();
-//    f.getContentPane().setLayout(new GridLayout(0,2));
-//    f.getContentPane().add(new JLinkButton("www.java2s.com"));
-//    f.getContentPane().add(new JLinkButton("www.java2s.com/ExampleCode/CatalogExampleCode.htm"));
-//    f.setSize(600, 200);
-//    f.setVisible(true);
-//  }
-//
-//  public JLinkButton() {
-//    this(null, null, null);
-//  }
-//
-//  public JLinkButton(Action action) {
-//    this();
-//    setAction(action);
-//  }
-//
-//  public JLinkButton(Icon icon) {
-//    this(null, icon, null);
-//  }
-//
-//  public JLinkButton(String s) {
-//    this(s, null, null);
-//  }
-//
-//  public JLinkButton(URL url) {
-//    this(null, null, url);
-//  }
-//
-//  public JLinkButton(String s, URL url) {
-//    this(s, null, url);
-//  }
-//
-//  public JLinkButton(Icon icon, URL url) {
-//    this(null, icon, url);
-//  }
-//
-//  public JLinkButton(String text, Icon icon, URL url) {
-//    super(text, icon);
-//    linkBehavior = SYSTEM_DEFAULT;
-//    linkColor = Color.blue;
-//    colorPressed = Color.red;
-//    visitedLinkColor = new Color(128, 0, 128);
-//    if (text == null && url != null)
-//      setText(url.toExternalForm());
-//    setLinkURL(url);
-//    setCursor(Cursor.getPredefinedCursor(12));
-//    setBorderPainted(false);
-//    setContentAreaFilled(false);
-//    setRolloverEnabled(true);
-//    addActionListener(defaultAction);
-//  }
-//
-//  public void updateUI() {
-//    setUI(BasicLinkButtonUI.createUI(this));
-//  }
-//
-//  private void setDefault() {
-//    UIManager.getDefaults().put("LinkButtonUI", "BasicLinkButtonUI");
-//  }
-//
-//  public String getUIClassID() {
-//    return "LinkButtonUI";
-//  }
-//
-//  protected void setupToolTipText() {
-//    String tip = null;
-//    if (buttonURL != null)
-//      tip = buttonURL.toExternalForm();
-//    setToolTipText(tip);
-//  }
-//
-//  public void setLinkBehavior(int bnew) {
-//    checkLinkBehaviour(bnew);
-//    int old = linkBehavior;
-//    linkBehavior = bnew;
-//    firePropertyChange("linkBehavior", old, bnew);
-//    repaint();
-//  }
-//
-//  private void checkLinkBehaviour(int beha) {
-//    if (beha != ALWAYS_UNDERLINE && beha != HOVER_UNDERLINE
-//        && beha != NEVER_UNDERLINE && beha != SYSTEM_DEFAULT)
-//      throw new IllegalArgumentException("Not a legal LinkBehavior");
-//    else
-//      return;
-//  }
-//
-//  public int getLinkBehavior() {
-//    return linkBehavior;
-//  }
-//
-//  public void setLinkColor(Color color) {
-//    Color colorOld = linkColor;
-//    linkColor = color;
-//    firePropertyChange("linkColor", colorOld, color);
-//    repaint();
-//  }
-//
-//  public Color getLinkColor() {
-//    return linkColor;
-//  }
-//
-//  public void setActiveLinkColor(Color colorNew) {
-//    Color colorOld = colorPressed;
-//    colorPressed = colorNew;
-//    firePropertyChange("activeLinkColor", colorOld, colorNew);
-//    repaint();
-//  }
-//
-//  public Color getActiveLinkColor() {
-//    return colorPressed;
-//  }
-//
-//  public void setDisabledLinkColor(Color color) {
-//    Color colorOld = disabledLinkColor;
-//    disabledLinkColor = color;
-//    firePropertyChange("disabledLinkColor", colorOld, color);
-//    if (!isEnabled())
-//      repaint();
-//  }
-//
-//  public Color getDisabledLinkColor() {
-//    return disabledLinkColor;
-//  }
-//
-//  public void setVisitedLinkColor(Color colorNew) {
-//    Color colorOld = visitedLinkColor;
-//    visitedLinkColor = colorNew;
-//    firePropertyChange("visitedLinkColor", colorOld, colorNew);
-//    repaint();
-//  }
-//
-//  public Color getVisitedLinkColor() {
-//    return visitedLinkColor;
-//  }
-//
-//  public URL getLinkURL() {
-//    return buttonURL;
-//  }
-//
-//  public void setLinkURL(URL url) {
-//    URL urlOld = buttonURL;
-//    buttonURL = url;
-//    setupToolTipText();
-//    firePropertyChange("linkURL", urlOld, url);
-//    revalidate();
-//    repaint();
-//  }
-//
-//  public void setLinkVisited(boolean flagNew) {
-//    boolean flagOld = isLinkVisited;
-//    isLinkVisited = flagNew;
-//    firePropertyChange("linkVisited", flagOld, flagNew);
-//    repaint();
-//  }
-//
-//  public boolean isLinkVisited() {
-//    return isLinkVisited;
-//  }
-//
-//  public void setDefaultAction(Action actionNew) {
-//    Action actionOld = defaultAction;
-//    defaultAction = actionNew;
-//    firePropertyChange("defaultAction", actionOld, actionNew);
-//  }
-//
-//  public Action getDefaultAction() {
-//    return defaultAction;
-//  }
-//
-//  protected String paramString() {
-//    String str;
-//    if (linkBehavior == ALWAYS_UNDERLINE)
-//      str = "ALWAYS_UNDERLINE";
-//    else if (linkBehavior == HOVER_UNDERLINE)
-//      str = "HOVER_UNDERLINE";
-//    else if (linkBehavior == NEVER_UNDERLINE)
-//      str = "NEVER_UNDERLINE";
-//    else
-//      str = "SYSTEM_DEFAULT";
-//    String colorStr = linkColor == null ? "" : linkColor.toString();
-//    String colorPressStr = colorPressed == null ? "" : colorPressed
-//        .toString();
-//    String disabledLinkColorStr = disabledLinkColor == null ? ""
-//        : disabledLinkColor.toString();
-//    String visitedLinkColorStr = visitedLinkColor == null ? ""
-//        : visitedLinkColor.toString();
-//    String buttonURLStr = buttonURL == null ? "" : buttonURL.toString();
-//    String isLinkVisitedStr = isLinkVisited ? "true" : "false";
-//    return super.paramString() + ",linkBehavior=" + str + ",linkURL="
-//        + buttonURLStr + ",linkColor=" + colorStr + ",activeLinkColor="
-//        + colorPressStr + ",disabledLinkColor=" + disabledLinkColorStr
-//        + ",visitedLinkColor=" + visitedLinkColorStr
-//        + ",linkvisitedString=" + isLinkVisitedStr;
-//  }
-//}
-//
-//class BasicLinkButtonUI extends MetalButtonUI {
-//  private static final BasicLinkButtonUI ui = new BasicLinkButtonUI();
-//
-//  public BasicLinkButtonUI() {
-//  }
-//
-//  public static ComponentUI createUI(JComponent jcomponent) {
-//    return ui;
-//  }
-//
-//  protected void paintText(Graphics g, JComponent com, Rectangle rect,
-//      String s) {
-//    JLinkButton bn = (JLinkButton) com;
-//    ButtonModel bnModel = bn.getModel();
-//    Color color = bn.getForeground();
-//    Object obj = null;
-//    if (bnModel.isEnabled()) {
-//      if (bnModel.isPressed())
-//        bn.setForeground(bn.getActiveLinkColor());
-//      else if (bn.isLinkVisited())
-//        bn.setForeground(bn.getVisitedLinkColor());
-//
-//      else
-//        bn.setForeground(bn.getLinkColor());
-//    } else {
-//      if (bn.getDisabledLinkColor() != null)
-//        bn.setForeground(bn.getDisabledLinkColor());
-//    }
-//    super.paintText(g, com, rect, s);
-//    int behaviour = bn.getLinkBehavior();
-//    boolean drawLine = false;
-//    if (behaviour == JLinkButton.HOVER_UNDERLINE) {
-//      if (bnModel.isRollover())
-//        drawLine = true;
-//    } else if (behaviour == JLinkButton.ALWAYS_UNDERLINE || behaviour == JLinkButton.SYSTEM_DEFAULT)
-//      drawLine = true;
-//    if (!drawLine)
-//      return;
-//    FontMetrics fm = g.getFontMetrics();
-//    int x = rect.x + getTextShiftOffset();
-//    int y = (rect.y + fm.getAscent() + fm.getDescent() + getTextShiftOffset()) - 1;
-//    if (bnModel.isEnabled()) {
-//      g.setColor(bn.getForeground());
-//      g.drawLine(x, y, (x + rect.width) - 1, y);
-//    } else {
-//      g.setColor(bn.getBackground().brighter());
-//      g.drawLine(x, y, (x + rect.width) - 1, y);
-//    }
-//  }
-//}
+package com.company.gui;
+
+import javax.swing.*;
+import javax.swing.plaf.ComponentUI;
+import javax.swing.plaf.metal.MetalButtonUI;
+import java.awt.*;
+import java.net.URL;
+
+public class JLinkButton extends JButton {
+  private static final String uiString = "LinkButtonUI";
+
+  public static final int ALWAYS_UNDERLINE = 0;
+
+  public static final int HOVER_UNDERLINE = 1;
+
+  public static final int NEVER_UNDERLINE = 2;
+
+  public static final int SYSTEM_DEFAULT = 3;
+
+  private int linkBehavior;
+
+  private Color linkColor;
+
+  private Color colorPressed;
+
+  private Color visitedLinkColor;
+
+  private Color disabledLinkColor;
+
+  private URL buttonURL;
+
+  private Action defaultAction;
+
+  private boolean isLinkVisited;
+
+  public static void main(String[] a) {
+    JFrame f = new JFrame();
+    f.getContentPane().setLayout(new GridLayout(0,2));
+    f.getContentPane().add(new JLinkButton("www.java2s.com"));
+    f.getContentPane().add(new JLinkButton("www.java2s.com/ExampleCode/CatalogExampleCode.htm"));
+    f.setSize(600, 200);
+    f.setVisible(true);
+  }
+
+  public JLinkButton() {
+    this(null, null, null);
+  }
+
+  public JLinkButton(Action action) {
+    this();
+    setAction(action);
+  }
+
+  public JLinkButton(Icon icon) {
+    this(null, icon, null);
+  }
+
+  public JLinkButton(String s) {
+    this(s, null, null);
+  }
+
+  public JLinkButton(URL url) {
+    this(null, null, url);
+  }
+
+  public JLinkButton(String s, URL url) {
+    this(s, null, url);
+  }
+
+  public JLinkButton(Icon icon, URL url) {
+    this(null, icon, url);
+  }
+
+  public JLinkButton(String text, Icon icon, URL url) {
+    super(text, icon);
+    linkBehavior = SYSTEM_DEFAULT;
+    linkColor = Color.blue;
+    colorPressed = Color.red;
+    visitedLinkColor = new Color(128, 0, 128);
+    if (text == null && url != null)
+      setText(url.toExternalForm());
+    setLinkURL(url);
+    setCursor(Cursor.getPredefinedCursor(12));
+    setBorderPainted(false);
+    setContentAreaFilled(false);
+    setRolloverEnabled(true);
+    addActionListener(defaultAction);
+  }
+
+  public void updateUI() {
+    setUI(BasicLinkButtonUI.createUI(this));
+  }
+
+  private void setDefault() {
+    UIManager.getDefaults().put("LinkButtonUI", "BasicLinkButtonUI");
+  }
+
+  public String getUIClassID() {
+    return "LinkButtonUI";
+  }
+
+  protected void setupToolTipText() {
+    String tip = null;
+    if (buttonURL != null)
+      tip = buttonURL.toExternalForm();
+    setToolTipText(tip);
+  }
+
+  public void setLinkBehavior(int bnew) {
+    checkLinkBehaviour(bnew);
+    int old = linkBehavior;
+    linkBehavior = bnew;
+    firePropertyChange("linkBehavior", old, bnew);
+    repaint();
+  }
+
+  private void checkLinkBehaviour(int beha) {
+    if (beha != ALWAYS_UNDERLINE && beha != HOVER_UNDERLINE
+        && beha != NEVER_UNDERLINE && beha != SYSTEM_DEFAULT)
+      throw new IllegalArgumentException("Not a legal LinkBehavior");
+    else
+      return;
+  }
+
+  public int getLinkBehavior() {
+    return linkBehavior;
+  }
+
+  public void setLinkColor(Color color) {
+    Color colorOld = linkColor;
+    linkColor = color;
+    firePropertyChange("linkColor", colorOld, color);
+    repaint();
+  }
+
+  public Color getLinkColor() {
+    return linkColor;
+  }
+
+  public void setActiveLinkColor(Color colorNew) {
+    Color colorOld = colorPressed;
+    colorPressed = colorNew;
+    firePropertyChange("activeLinkColor", colorOld, colorNew);
+    repaint();
+  }
+
+  public Color getActiveLinkColor() {
+    return colorPressed;
+  }
+
+  public void setDisabledLinkColor(Color color) {
+    Color colorOld = disabledLinkColor;
+    disabledLinkColor = color;
+    firePropertyChange("disabledLinkColor", colorOld, color);
+    if (!isEnabled())
+      repaint();
+  }
+
+  public Color getDisabledLinkColor() {
+    return disabledLinkColor;
+  }
+
+  public void setVisitedLinkColor(Color colorNew) {
+    Color colorOld = visitedLinkColor;
+    visitedLinkColor = colorNew;
+    firePropertyChange("visitedLinkColor", colorOld, colorNew);
+    repaint();
+  }
+
+  public Color getVisitedLinkColor() {
+    return visitedLinkColor;
+  }
+
+  public URL getLinkURL() {
+    return buttonURL;
+  }
+
+  public void setLinkURL(URL url) {
+    URL urlOld = buttonURL;
+    buttonURL = url;
+    setupToolTipText();
+    firePropertyChange("linkURL", urlOld, url);
+    revalidate();
+    repaint();
+  }
+
+  public void setLinkVisited(boolean flagNew) {
+    boolean flagOld = isLinkVisited;
+    isLinkVisited = flagNew;
+    firePropertyChange("linkVisited", flagOld, flagNew);
+    repaint();
+  }
+
+  public boolean isLinkVisited() {
+    return isLinkVisited;
+  }
+
+  public void setDefaultAction(Action actionNew) {
+    Action actionOld = defaultAction;
+    defaultAction = actionNew;
+    firePropertyChange("defaultAction", actionOld, actionNew);
+  }
+
+  public Action getDefaultAction() {
+    return defaultAction;
+  }
+
+  protected String paramString() {
+    String str;
+    if (linkBehavior == ALWAYS_UNDERLINE)
+      str = "ALWAYS_UNDERLINE";
+    else if (linkBehavior == HOVER_UNDERLINE)
+      str = "HOVER_UNDERLINE";
+    else if (linkBehavior == NEVER_UNDERLINE)
+      str = "NEVER_UNDERLINE";
+    else
+      str = "SYSTEM_DEFAULT";
+    String colorStr = linkColor == null ? "" : linkColor.toString();
+    String colorPressStr = colorPressed == null ? "" : colorPressed
+        .toString();
+    String disabledLinkColorStr = disabledLinkColor == null ? ""
+        : disabledLinkColor.toString();
+    String visitedLinkColorStr = visitedLinkColor == null ? ""
+        : visitedLinkColor.toString();
+    String buttonURLStr = buttonURL == null ? "" : buttonURL.toString();
+    String isLinkVisitedStr = isLinkVisited ? "true" : "false";
+    return super.paramString() + ",linkBehavior=" + str + ",linkURL="
+        + buttonURLStr + ",linkColor=" + colorStr + ",activeLinkColor="
+        + colorPressStr + ",disabledLinkColor=" + disabledLinkColorStr
+        + ",visitedLinkColor=" + visitedLinkColorStr
+        + ",linkvisitedString=" + isLinkVisitedStr;
+  }
+}
+
+class BasicLinkButtonUI extends MetalButtonUI {
+  private static final BasicLinkButtonUI ui = new BasicLinkButtonUI();
+
+  public BasicLinkButtonUI() {
+  }
+
+  public static ComponentUI createUI(JComponent jcomponent) {
+    return ui;
+  }
+
+  protected void paintText(Graphics g, JComponent com, Rectangle rect,
+      String s) {
+    JLinkButton bn = (JLinkButton) com;
+    ButtonModel bnModel = bn.getModel();
+    Color color = bn.getForeground();
+    Object obj = null;
+    if (bnModel.isEnabled()) {
+      if (bnModel.isPressed())
+        bn.setForeground(bn.getActiveLinkColor());
+      else if (bn.isLinkVisited())
+        bn.setForeground(bn.getVisitedLinkColor());
+
+      else
+        bn.setForeground(bn.getLinkColor());
+    } else {
+      if (bn.getDisabledLinkColor() != null)
+        bn.setForeground(bn.getDisabledLinkColor());
+    }
+    super.paintText(g, com, rect, s);
+    int behaviour = bn.getLinkBehavior();
+    boolean drawLine = false;
+    if (behaviour == JLinkButton.HOVER_UNDERLINE) {
+      if (bnModel.isRollover())
+        drawLine = true;
+    } else if (behaviour == JLinkButton.ALWAYS_UNDERLINE || behaviour == JLinkButton.SYSTEM_DEFAULT)
+      drawLine = true;
+    if (!drawLine)
+      return;
+    FontMetrics fm = g.getFontMetrics();
+    int x = rect.x + getTextShiftOffset();
+    int y = (rect.y + fm.getAscent() + fm.getDescent() + getTextShiftOffset()) - 1;
+    if (bnModel.isEnabled()) {
+      g.setColor(bn.getForeground());
+      g.drawLine(x, y, (x + rect.width) - 1, y);
+    } else {
+      g.setColor(bn.getBackground().brighter());
+      g.drawLine(x, y, (x + rect.width) - 1, y);
+    }
+  }
+}
Index: src/com/company/gui/Interface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n//\r\n//\r\n//package com.company.gui;\r\n//\r\n//import com.company.Sistema;\r\n//import com.company.gui.util.DateLabelFormatter;\r\n//\r\n//import org.jdatepicker.impl.JDatePanelImpl;\r\n//import org.jdatepicker.impl.JDatePickerImpl;\r\n//import org.jdatepicker.impl.UtilDateModel;\r\n//\r\n//import java.awt.*;\r\n//import java.awt.event.*;\r\n//import java.text.ParseException;\r\n//import java.util.Enumeration;\r\n//import java.util.Properties;\r\n//import java.util.ResourceBundle;\r\n//\r\n//import javax.swing.*;\r\n//import javax.swing.text.MaskFormatter;\r\n//\r\n//public class Interface extends JFrame {\r\n//    private static final String LOGIN_CARD = \"LOGIN\";\r\n//    private static final String RESTAURANTE_CARD = \"RESTAURANTE\";\r\n//    private static final String CLIENTE_CARD = \"CLIENTE\";\r\n//    private static final String MENUCLIENTE_CARD = \"MENU CLIENTE\";\r\n//    private static final String MCLIREST_CARD = \"MENU CLIENTE - CONSULTAR RESTAURANTES\";\r\n//    private static final String MCLICOMENTARIOS_CARD = \"MENU CLIENTE - COMENTÁRIOS\";\r\n//    private static final String MCLIATDADOS_CARD = \"MENU CLIENTE - ACTUALIZAR DADOS\";\r\n//    private static final String MCLIHISRES_CARD = \"MENU CLIENTE - HISTÓRICO DE RESERVAS\";\r\n//    private static final String MCLIMRESCOMPONTRESE_CARD = \"MENU CLIENTE - HISTÓRICO DE RESERVAS: COMENTAR\";\r\n//    private static final String MCLIRESACT_CARD = \"MENU CLIENTE - RESERVAS ACTIVAS\";\r\n//    private static final String MCLIFAZERRES_CARD = \"MENU CLIENTE - FAZER RESERVAS\";\r\n//    private static final String MCLIFAZERRESP_CARD = \"MENU CLIENTE - FAZER RESERVAS PRESENCIAL\";\r\n//    private static final String MCLIFAZERRESTA_CARD = \"MENU CLIENTE - FAZER RESERVAS TAKE-AWAY\";\r\n//    private static final String MCLIRESERVAS_CARD = \"MENU CLIENTE - RESERVAS\";\r\n//    private static final String MCLIMRESTFORDRESTS_CARD = \"MENU CLIENTE - MENU RESTAURANTES\";\r\n//    private static final String MCLIMRESTFRESTPONT_CARD = \"MENU CLIENTE - MENU RESTAURANTES - PONTUAÇÃO\";\r\n//    private static final String MCLIMRESTFORDRESTVALOR_CARD = \"MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS\";\r\n//    private static final String MCLIMRESTFORDRESTVALORCARTA_CARD = \"MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS - CARTA\";\r\n//    private static final String MCLIMRESTFORDRESTVALORPDIA_CARD = \"MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS - PRATO DO DIA\";\r\n//    private static final String MCLIMRESTFRESTHFUNC_CARD = \"MENU CLIENTE - MENU RESTAURANTES - HORÁRIO FUNCIONAMENTO\";\r\n//    private static final String MCLIMRESTFRESTLOT_CARD = \"MENU CLIENTE - MENU RESTAURANTES - LOTAÇÃO\";\r\n//    private static final String MCLIMRESTFRESTCID_CARD = \"MENU CLIENTE - MENU RESTAURANTES - CIDADE\";\r\n//\r\n//\r\n//    private static final String MENURESTAURANTE_CARD = \"MENU RESTAURANTE\";\r\n//    private static final String MRESTADICIONARPRATO_CARD = \"ADICIONAR PRATO\";\r\n//    private static final String MRESTACTUALIZARPRATO_CARD = \"ACTUALIZAR PRATO DO DIA\";\r\n//    private static final String MRESTACTUALIZARDADOS_CARD = \"MENU RESTAURANTE - ACTUALIZAR DADOS\";\r\n//    private static final String MRESTRESERV_CARD = \"MENU RESTAURANTE - HISTÓRICO DE RESERVAS\";\r\n//    private static final String MRESTCOMENTARIOS_CARD = \"MENU RESTAURANTE - COMENTÁRIOS\";\r\n//    private static final int LARGURA_LOGIN = 400;\r\n//    private static final int ALTURA_LOGIN = 180;\r\n//    private static final int LARGURA_PADRAO = 500;\r\n//    private static final int ALTURA_PADRAO = 300;\r\n//    private boolean passwordValido;\r\n//    private boolean confirmarPasswordValido;\r\n//    private Sistema sistema = new Sistema();\r\n//    private MaskFormatter mascaraTelemovel;\r\n//\r\n//\r\n//    public Interface() {\r\n//\r\n//        try {\r\n//            mascaraTelemovel = new MaskFormatter(\"#########\");\r\n//        } catch (ParseException e) {\r\n//            e.printStackTrace();\r\n//        }\r\n//\r\n//        ImageIcon logo = new ImageIcon(\"logo3.png\");\r\n//        this.setIconImage(logo.getImage());\r\n//\r\n//\r\n//        this.setTitle(\"RESERVAS DE RESTAURANTES\");\r\n//        this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n//        this.setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n//        Container contentor = this.getContentPane();\r\n//        contentor.setLayout(new CardLayout());\r\n//\r\n//        /////// SUPERPAINEIS////////\r\n//        JPanel loginSuperPanel = new JPanel();\r\n//        loginSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel regNovoCliSuperPanel = new JPanel();\r\n//        regNovoCliSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel registarNovoRestSuperPanel = new JPanel();\r\n//        registarNovoRestSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliSuperPanel = new JPanel();\r\n//        mCliSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliRestSuperPanel = new JPanel();\r\n//        mCliRestSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliComentariosSuperPanel = new JPanel();\r\n//        mCliComentariosSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliAtDadosSuperPanel = new JPanel();\r\n//        mCliAtDadosSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliHistResSuperPanel = new JPanel();\r\n//        mCliHistResSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliMResComPontReseSuperPanel = new JPanel();\r\n//        mCliMResComPontReseSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliResActSuperPanel = new JPanel();\r\n//        mCliResActSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliFazerResSuperPanel = new JPanel();\r\n//        mCliFazerResSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliFazerResPSuperPanel = new JPanel();\r\n//        mCliFazerResPSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliFazerResTASuperPanel = new JPanel();\r\n//        mCliFazerResTASuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliReservasMReseSuperPanel = new JPanel();\r\n//        mCliReservasMReseSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliMRestFOrdRestsSuperPanel = new JPanel();\r\n//        mCliMRestFOrdRestsSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliMRestFRestPontSuperPanel = new JPanel();\r\n//        mCliMRestFRestPontSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliMRestFOrdRestValorSuperPanel = new JPanel();\r\n//        mCliMRestFOrdRestValorSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliMRestFOrdRestValorCartaSuperPanel = new JPanel();\r\n//        mCliMRestFOrdRestValorCartaSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliMRestFOrdRestValorPDiaSuperPanel = new JPanel();\r\n//        mCliMRestFOrdRestValorPDiaSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliMRestFRestHFuncSuperPanel = new JPanel();\r\n//        mCliMRestFRestHFuncSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliMRestFRestLotSuperPanel = new JPanel();\r\n//        mCliMRestFRestLotSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mCliMRestFRestCidSuperPanel = new JPanel();\r\n//        mCliMRestFRestCidSuperPanel.setLayout(new BorderLayout());\r\n//\r\n//\r\n//        JPanel mRestSuperPanel = new JPanel();\r\n//        mRestSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mRestAdPratoSuperPanel = new JPanel();\r\n//        mRestAdPratoSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mRestAtPratoDiaSuperPanel = new JPanel();\r\n//        mRestAtPratoDiaSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mRestAtDadosSuperPanel = new JPanel();\r\n//        mRestAtDadosSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mRestReservasSuperPanel = new JPanel();\r\n//        mRestReservasSuperPanel.setLayout(new BorderLayout());\r\n//        JPanel mRestComentariosSuperPanel = new JPanel();\r\n//        mRestComentariosSuperPanel.setLayout(new BorderLayout());\r\n//\r\n//\r\n//        construirPanelLogin(this, contentor, loginSuperPanel);\r\n//\r\n//        construirPanelCliente(this, contentor, loginSuperPanel, regNovoCliSuperPanel);\r\n//\r\n//        construirPanelRestaurante(this, contentor, loginSuperPanel, registarNovoRestSuperPanel);\r\n//\r\n//        construirPanelMenuCliente(this, contentor, loginSuperPanel, mCliSuperPanel);\r\n//\r\n//        ////PROBLEMA - não aceita this\r\n//        construirPanelMRest(contentor, loginSuperPanel, mRestSuperPanel);\r\n//\r\n//        construirPanelMRestAdPrato(this, contentor, loginSuperPanel, mRestAdPratoSuperPanel);\r\n//\r\n//        construirPanelMRestAtPratoDia(this, contentor, loginSuperPanel, mRestAtPratoDiaSuperPanel);\r\n//\r\n//        construirPanelMRestAtDados(this, contentor, loginSuperPanel, mRestAtDadosSuperPanel);\r\n//\r\n//        construirPanelMRestReservas(this, contentor, loginSuperPanel, mRestReservasSuperPanel);\r\n//\r\n//        construirPanelMRestComentarios(this, contentor, loginSuperPanel, mRestComentariosSuperPanel);\r\n//\r\n//        //construirPanelMCliRestaurantes(this, contentor, loginSuperPanel, mCliRestSuperPanel);\r\n//\r\n//        construirPanelMCliComentarios(this, contentor, loginSuperPanel, mCliComentariosSuperPanel);\r\n//\r\n//        construirPanelMCliAtDados(this, contentor, loginSuperPanel, mCliAtDadosSuperPanel);\r\n//\r\n//        construirPanelMCliHistRes(this, contentor, loginSuperPanel, mCliHistResSuperPanel);\r\n//\r\n//        construirPanelMCliResAct(this, contentor, loginSuperPanel, mCliResActSuperPanel);\r\n//\r\n//        construirPanelMCliFazerRes(this, contentor, loginSuperPanel, mCliFazerResSuperPanel);\r\n//\r\n//        construirPanelMCliFazerResP(this, contentor, loginSuperPanel, mCliFazerResPSuperPanel);\r\n//\r\n//        construirPanelMCliFazerResTA(this, contentor, loginSuperPanel, mCliFazerResTASuperPanel);\r\n//\r\n//        construirPanelReservasMCliMRese(this, contentor, loginSuperPanel, mCliReservasMReseSuperPanel);\r\n//\r\n//        construirPanelMCliMResComPonReservas(this, contentor, loginSuperPanel, mCliMResComPontReseSuperPanel);\r\n//\r\n//        construirPanelMCliMRestFOrdRests(this, contentor, loginSuperPanel, mCliMRestFOrdRestsSuperPanel);\r\n//\r\n//        construirPanelMCliMRestFRestPont(this, contentor, loginSuperPanel, mCliMRestFRestPontSuperPanel);\r\n//\r\n//        construirPanelMCliMRestFOrdRestValor(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorSuperPanel);\r\n//\r\n//        construirPanelMCliMRestFOrdRestValorCarta(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorCartaSuperPanel);\r\n//\r\n//        construirPanelMCliMRestFOrdRestValorPDia(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorPDiaSuperPanel);\r\n//\r\n//        construirPanelMCliMRestFRestHFunc(this, contentor, loginSuperPanel, mCliMRestFRestHFuncSuperPanel);\r\n//\r\n//        construirPanelMCliMRestFRestLot(this, contentor, loginSuperPanel, mCliMRestFRestLotSuperPanel);\r\n//\r\n//        construirPanelMCliMRestFRestCid(this, contentor, loginSuperPanel, mCliMRestFRestCidSuperPanel);\r\n//\r\n//\r\n//        contentor.add(loginSuperPanel, LOGIN_CARD);\r\n//        contentor.add(regNovoCliSuperPanel, CLIENTE_CARD);\r\n//        contentor.add(registarNovoRestSuperPanel, RESTAURANTE_CARD);\r\n//        contentor.add(mCliSuperPanel, MENUCLIENTE_CARD);\r\n//        contentor.add(mRestSuperPanel, MENURESTAURANTE_CARD);\r\n//        contentor.add(mRestAdPratoSuperPanel, MRESTADICIONARPRATO_CARD);\r\n//        contentor.add(mRestAtPratoDiaSuperPanel, MRESTACTUALIZARPRATO_CARD);\r\n//        contentor.add(mRestAtDadosSuperPanel, MRESTACTUALIZARDADOS_CARD);\r\n//        contentor.add(mRestReservasSuperPanel, MRESTRESERV_CARD);\r\n//        contentor.add(mRestComentariosSuperPanel, MRESTCOMENTARIOS_CARD);\r\n//        contentor.add(mCliRestSuperPanel, MCLIREST_CARD);\r\n//        contentor.add(mCliComentariosSuperPanel, MCLICOMENTARIOS_CARD);\r\n//        contentor.add(mCliAtDadosSuperPanel, MCLIATDADOS_CARD);\r\n//        contentor.add(mCliHistResSuperPanel, MCLIHISRES_CARD);\r\n//        contentor.add(mCliResActSuperPanel, MCLIRESACT_CARD);\r\n//        contentor.add(mCliFazerResSuperPanel, MCLIFAZERRES_CARD);\r\n//        contentor.add(mCliFazerResPSuperPanel, MCLIFAZERRESP_CARD);\r\n//        contentor.add(mCliFazerResTASuperPanel, MCLIFAZERRESTA_CARD);\r\n//        contentor.add(mCliReservasMReseSuperPanel, MCLIRESERVAS_CARD);\r\n//        contentor.add(mCliMResComPontReseSuperPanel, MCLIMRESCOMPONTRESE_CARD);\r\n//        contentor.add(mCliMRestFOrdRestsSuperPanel, MCLIMRESTFORDRESTS_CARD);\r\n//        contentor.add(mCliMRestFRestPontSuperPanel, MCLIMRESTFRESTPONT_CARD);\r\n//        contentor.add(mCliMRestFOrdRestValorSuperPanel, MCLIMRESTFORDRESTVALOR_CARD);\r\n//        contentor.add(mCliMRestFOrdRestValorCartaSuperPanel, MCLIMRESTFORDRESTVALORCARTA_CARD);\r\n//        contentor.add(mCliMRestFOrdRestValorPDiaSuperPanel, MCLIMRESTFORDRESTVALORPDIA_CARD);\r\n//        contentor.add(mCliMRestFRestHFuncSuperPanel, MCLIMRESTFRESTHFUNC_CARD);\r\n//        contentor.add(mCliMRestFRestLotSuperPanel, MCLIMRESTFRESTLOT_CARD);\r\n//        contentor.add(mCliMRestFRestCidSuperPanel, MCLIMRESTFRESTCID_CARD);\r\n//\r\n//    }\r\n//\r\n//\r\n//    private void construirPanelLogin(Interface janela, Container contentor, JPanel loginSuperPanel) {\r\n//        ////Criação dos subpaineis norte, centro e sul\r\n//        JPanel norteLoginSubPanel = new JPanel();\r\n//        JPanel centroLoginSubPanel = new JPanel();\r\n//        JPanel sulLoginSubPanel = new JPanel();\r\n//\r\n//        JButton ptEnLoginButton = new JButton(\"PT/EN\");\r\n//        ptEnLoginButton.setSize(15, 5);\r\n//        JButton loginButton = new JButton(LOGIN_CARD);\r\n//        loginButton.setSize(15, 5);\r\n//        JButton clienteNovoButton = new JLinkButton(\"Novo Cliente\");\r\n//        JButton restauranteNovoButton = new JLinkButton(\"Novo Restaurante\");\r\n//\r\n//        JLabel titleLoginLabel = new JLabel(\"LOGIN\");\r\n//        JLabel usernameLoginLabel = new JLabel(\"Username\");\r\n//        JLabel passwordLoginLabel = new JLabel(\"Password\");\r\n//\r\n//        JTextField usernameLoginText = new JTextField(20);\r\n//\r\n//        JPasswordField passwordLoginField = new JPasswordField(20);\r\n//\r\n/////Layout dos subPaineis north, centro e south\r\n//        norteLoginSubPanel.setLayout(new BorderLayout());\r\n//        centroLoginSubPanel.setLayout(new BorderLayout());\r\n//        sulLoginSubPanel.setLayout(new BorderLayout());\r\n//\r\n////Adicionar subPaineis no superpainel Login\r\n//        loginSuperPanel.add(norteLoginSubPanel, BorderLayout.NORTH);\r\n//        loginSuperPanel.add(centroLoginSubPanel, BorderLayout.CENTER);\r\n//        loginSuperPanel.add(sulLoginSubPanel, BorderLayout.SOUTH);\r\n//\r\n///// Criação dos subpaineis nos subpaineis norte, centro e sul\r\n//        JPanel norteLoginSSPanelTitle = new JPanel();\r\n//        JPanel centroLoginSSPanelForm = new JPanel();\r\n//        JPanel centroLoginSSPanelButton = new JPanel();\r\n//        JPanel sulLoginSSPanelLinks = new JPanel();\r\n//\r\n////Layout dos subpaineis dos subpaineis norte, centro e sul\r\n//        norteLoginSubPanel.add(norteLoginSSPanelTitle, BorderLayout.CENTER);\r\n//        norteLoginSubPanel.add(ptEnLoginButton, BorderLayout.EAST);\r\n//        norteLoginSSPanelTitle.setLayout(new FlowLayout());\r\n//        norteLoginSSPanelTitle.add(titleLoginLabel);\r\n//\r\n//        centroLoginSubPanel.add(centroLoginSSPanelForm, BorderLayout.NORTH);\r\n//        centroLoginSSPanelForm.setLayout(new GridLayout(2, 2));\r\n//        centroLoginSSPanelForm.add(usernameLoginLabel);\r\n//        centroLoginSSPanelForm.add(usernameLoginText);\r\n//        centroLoginSSPanelForm.add(passwordLoginLabel);\r\n//        centroLoginSSPanelForm.add(passwordLoginField);\r\n//        centroLoginSubPanel.add(centroLoginSSPanelButton, BorderLayout.SOUTH);\r\n//        centroLoginSSPanelButton.setLayout(new FlowLayout());\r\n//        centroLoginSSPanelButton.add(loginButton);\r\n//\r\n//        sulLoginSubPanel.add(sulLoginSSPanelLinks);\r\n//        sulLoginSSPanelLinks.setLayout(new BorderLayout());\r\n//        sulLoginSSPanelLinks.add(clienteNovoButton, BorderLayout.EAST);\r\n//        sulLoginSSPanelLinks.add(restauranteNovoButton, BorderLayout.WEST);\r\n//\r\n//\r\n//        clienteNovoButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, CLIENTE_CARD);\r\n//            janela.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos\r\n//            // no actionlistener)\r\n//        });\r\n//\r\n//        restauranteNovoButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, RESTAURANTE_CARD);\r\n//            janela.setSize(LARGURA_PADRAO, 350);\r\n//            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos\r\n//            // no actionlistener)\r\n//        });\r\n//    }\r\n//\r\n//    ////////////////////NOVO CLIENTE/////////////////////////\r\n//    private void construirPanelCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoClienteSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteNovoClienteSubPanel = new JPanel();\r\n//        norteNovoClienteSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroNovoClienteSubPanel = new JPanel();\r\n//        JPanel sulNovoClienteSubPanel = new JPanel();\r\n//\r\n//        JLabel registarNovoClienteLabel = new JLabel(\"NOVO CLIENTE\");\r\n//        registarNovoClienteLabel.setForeground(Color.BLUE);\r\n//        JLabel nomeClienteLabel = new JLabel(\"Nome\");\r\n//        //nomeClienteLabel.setBounds(50,80,100,20);\r\n//        JLabel emailClienteLabel = new JLabel(\"E-mail\");\r\n//        JLabel moradaClienteLabel = new JLabel(\"Morada\");\r\n//        JLabel telemovelClienteLabel = new JLabel(\"Telemóvel\");\r\n//        JLabel usernameClienteLabel = new JLabel(\"Username\");\r\n//        JLabel passwordClienteLabel = new JLabel(\"Password \");\r\n//        JLabel confirmarPasswordClienteLabel = new JLabel(\"Confirmar password \");\r\n//\r\n//        JTextField nomeClienteText = new JTextField(20);\r\n//        nomeClienteText.setMargin(new Insets(3, 3, 3, 3));\r\n//        //nomeClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));\r\n//        JTextField emailClienteText = new JTextField(20);\r\n//        //emailClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));\r\n//        JTextField moradaClienteText = new JTextField(20);\r\n//        JTextField telemovelClienteText = new JFormattedTextField(mascaraTelemovel);\r\n//        telemovelClienteText.setColumns(20);\r\n//        JTextField usernameClienteText = new JTextField(20);\r\n//\r\n//        JPasswordField passwordClienteField = new JPasswordField(20);\r\n//        JPasswordField confirmarPassawordClienteField = new JPasswordField(20);\r\n//\r\n//        JButton ptEnNovoClienteButton = new JButton(\"PT/EN\");\r\n//        JButton cancelarClienteButton = new JButton(\"CANCELAR\");\r\n//        JButton registarClienteButton = new JButton(\"REGISTAR\");\r\n//\r\n//        //todo não deu certo\r\n//        //Define as máscaras\r\n//        MaskFormatter mascaraTelCliente = null;\r\n//\r\n//        try {\r\n//            mascaraTelCliente = new MaskFormatter(\"(##)####-####\");\r\n//\r\n//        } catch (ParseException excp) {\r\n//            System.err.println(\"Erro na formatação: \" + excp.getMessage());\r\n//            System.exit(-1);\r\n//        }\r\n//\r\n//        //Seta as máscaras nos objetos JFormattedTextField\r\n//        JFormattedTextField telClienteT = new JFormattedTextField(mascaraTelCliente);\r\n//        //telClienteT.setBounds(150,80,100,20);\r\n//\r\n//\r\n//        registarNovoClienteSuperPanel.add(norteNovoClienteSubPanel, \"North\");\r\n//        registarNovoClienteSuperPanel.add(centroNovoClienteSubPanel, \"Center\");\r\n//        registarNovoClienteSuperPanel.add(sulNovoClienteSubPanel, \"South\");\r\n//\r\n//        JPanel norteNovoClienteSSPanel = new JPanel();\r\n//        norteNovoClienteSSPanel.setLayout(new FlowLayout());\r\n//        norteNovoClienteSSPanel.add(registarNovoClienteLabel);\r\n//        norteNovoClienteSubPanel.add(norteNovoClienteSSPanel, BorderLayout.CENTER);\r\n//        norteNovoClienteSubPanel.add(ptEnNovoClienteButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroNovoClienteSSPanelForm = new JPanel();\r\n//        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));\r\n//        centroNovoClienteSubPanel.add(centroNovoClienteSSPanelForm);\r\n//        centroNovoClienteSSPanelForm.add(nomeClienteLabel);\r\n//        centroNovoClienteSSPanelForm.add(nomeClienteText);\r\n//        centroNovoClienteSSPanelForm.add(emailClienteLabel);\r\n//        centroNovoClienteSSPanelForm.add(emailClienteText);\r\n//        centroNovoClienteSSPanelForm.add(moradaClienteLabel);\r\n//        centroNovoClienteSSPanelForm.add(moradaClienteText);\r\n//        centroNovoClienteSSPanelForm.add(telemovelClienteLabel);\r\n//        centroNovoClienteSSPanelForm.add(telemovelClienteText);\r\n//        centroNovoClienteSSPanelForm.add(usernameClienteLabel);\r\n//        centroNovoClienteSSPanelForm.add(usernameClienteText);\r\n//        centroNovoClienteSSPanelForm.add(passwordClienteLabel);\r\n//        centroNovoClienteSSPanelForm.add(passwordClienteField);\r\n//        centroNovoClienteSSPanelForm.add(confirmarPasswordClienteLabel);\r\n//        centroNovoClienteSSPanelForm.add(confirmarPassawordClienteField);\r\n//\r\n//        sulNovoClienteSubPanel.setLayout(new FlowLayout());\r\n//        sulNovoClienteSubPanel.add(cancelarClienteButton);\r\n//        sulNovoClienteSubPanel.add(registarClienteButton);\r\n//\r\n//\r\n//        registarClienteButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//\r\n//        cancelarClienteButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n//\r\n//        });\r\n//    }\r\n//\r\n//\r\n//    ////// MENU CLIENTE//////////\r\n//    private void construirPanelMenuCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliSuperPanel) {\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMenuClienteSubPanel = new JPanel();\r\n//        norteMenuClienteSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMenuClienteSubPanel = new JPanel();\r\n//        JPanel sulMenuClienteSubPanel = new JPanel();\r\n//\r\n//        JLabel registarNovoClienteLabel = new JLabel(\"MENU CLIENTE\");\r\n//        registarNovoClienteLabel.setForeground(Color.BLUE);\r\n//\r\n//        JButton ptEnMenuClienteButton = new JButton(\"PT/EN\");\r\n//        ////\r\n//        JButton restaurantesMCliButton = new JButton(\"RESTAURANTES\");\r\n//        JButton comentariosMCliButton = new JButton(\"COMENTÁRIOS\");\r\n//        JButton reservasMCliButton = new JButton(\"RESERVAS\");\r\n//\r\n//        JButton atualDadosMCliButton = new JButton(\"ACTUALIZAR DADOS\");\r\n//\r\n//        ///\r\n//        //JButton cancelarMenuClienteButton = new JButton(\"CANCELAR\");\r\n//        JButton logoutMenuClienteButton = new JButton(\"LOGOUT\");\r\n//\r\n//        mCliSuperPanel.add(norteMenuClienteSubPanel, \"North\");\r\n//        mCliSuperPanel.add(centroMenuClienteSubPanel, \"Center\");\r\n//        mCliSuperPanel.add(sulMenuClienteSubPanel, \"South\");\r\n//\r\n//        JPanel norteClienteSubPanel = new JPanel();\r\n//        norteClienteSubPanel.setLayout(new FlowLayout());\r\n//        norteClienteSubPanel.add(registarNovoClienteLabel);\r\n//        norteMenuClienteSubPanel.add(norteClienteSubPanel, BorderLayout.CENTER);\r\n//        norteMenuClienteSubPanel.add(ptEnMenuClienteButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroNovoClienteSSPanelForm = new JPanel();\r\n//        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));\r\n//        centroMenuClienteSubPanel.add(centroNovoClienteSSPanelForm);\r\n//        centroNovoClienteSSPanelForm.add(restaurantesMCliButton);\r\n//        centroNovoClienteSSPanelForm.add(comentariosMCliButton);\r\n//        centroNovoClienteSSPanelForm.add(reservasMCliButton);\r\n//\r\n//        centroNovoClienteSSPanelForm.add(atualDadosMCliButton);\r\n//\r\n//        sulMenuClienteSubPanel.setLayout(new FlowLayout());\r\n//        sulMenuClienteSubPanel.add(logoutMenuClienteButton);\r\n//\r\n//        comentariosMCliButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLICOMENTARIOS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        restaurantesMCliButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        reservasMCliButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIRESERVAS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        atualDadosMCliButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIATDADOS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//\r\n//        logoutMenuClienteButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(400, 180);\r\n//        });\r\n//\r\n//    }\r\n//\r\n//\r\n//    ////// MENU CLIENTE – MENU RESERVAS//////////\r\n//    private void construirPanelReservasMCliMRese\r\n//    (Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliReservasMReseSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMReseSubPanel = new JPanel();\r\n//        norteMCliMReseSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMReseSubPanel = new JPanel();\r\n//        JPanel sulMCliMReseSubPanel = new JPanel();\r\n//\r\n//        JLabel registarNovoMCliMReseLabel = new JLabel(\"MENU CLIENTE - RESERVAS\");\r\n//        registarNovoMCliMReseLabel.setForeground(Color.BLUE);\r\n//\r\n//        JButton ptEnMCliMReseButton = new JButton(\"PT/EN\");\r\n//        JButton histReseComPonMCliMReseButton = new JButton(\"HISTÓRICO\");\r\n//        JButton ReservasActMCliMReseButton = new JButton(\"RESERVAS ACTIVAS\");\r\n//        JButton fazerReservasMCliMReseButton = new JButton(\"FAZER RESERVAS\");\r\n//        JButton voltarMCliMReseButton = new JButton(\"MENU CLIENTE\");\r\n//\r\n//        JButton logoutMCliMReseButton = new JButton(\"LOGOUT\");\r\n//\r\n//        mCliReservasMReseSuperPanel.add(norteMCliMReseSubPanel, \"North\");\r\n//        mCliReservasMReseSuperPanel.add(centroMCliMReseSubPanel, \"Center\");\r\n//        mCliReservasMReseSuperPanel.add(sulMCliMReseSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMReseSSPanel = new JPanel();\r\n//        norteMCliMReseSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMReseSSPanel.add(registarNovoMCliMReseLabel);\r\n//        norteMCliMReseSubPanel.add(norteMCliMReseSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMReseSubPanel.add(ptEnMCliMReseButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroNovoMCliMReseSSPanel = new JPanel();\r\n//        centroNovoMCliMReseSSPanel.setLayout(new GridLayout(7, 2));\r\n//        centroMCliMReseSubPanel.add(centroNovoMCliMReseSSPanel);\r\n//\r\n//        centroNovoMCliMReseSSPanel.add(histReseComPonMCliMReseButton);\r\n//        centroNovoMCliMReseSSPanel.add(ReservasActMCliMReseButton);\r\n//        centroNovoMCliMReseSSPanel.add(fazerReservasMCliMReseButton);\r\n//\r\n//        sulMCliMReseSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMReseSubPanel.add(logoutMCliMReseButton);\r\n//        sulMCliMReseSubPanel.add(voltarMCliMReseButton);\r\n//\r\n//\r\n//        histReseComPonMCliMReseButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIHISRES_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        ReservasActMCliMReseButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIRESACT_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        fazerReservasMCliMReseButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIFAZERRES_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        voltarMCliMReseButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        logoutMCliMReseButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(400, 180);\r\n//        });\r\n//\r\n//    }\r\n//\r\n//\r\n//    //////MENU CLIENTE – RESERVAS - HISTÓRICO//////////\r\n//\r\n//    private void construirPanelMCliHistRes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliHistResSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliHistResSubPanel = new JPanel();\r\n//        norteMCliHistResSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliHistResSubPanel = new JPanel();\r\n//        JPanel sulMCliHistResSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliTitHistResLabel = new JLabel(\"MENU CLIENTE - HISTÓRICO DE RESERVAS\");\r\n//\r\n//        JLabel mCliIdHistResLabel = new JLabel(\"ID\");\r\n//\r\n//        String[] mCliIdHistRes = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"};\r\n//        JComboBox arrayMCliIdHistResCBox = new JComboBox(mCliIdHistRes);\r\n//\r\n////todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, comentar e pontuar\r\n//        String[] nomeColunasMCliHistRes = new String[]{\r\n//                \"ID\", \"DATA\", \"RESTAURANTE\"\r\n//        };\r\n//\r\n//        Object[][] data = new Object[][]{\r\n//                {\"ID\", \"DATA\", \"RESTAURANTE\"},\r\n//                {1, \"dd/MM/yyy\", \"A\"},\r\n//                {1, \"dd/MM/yyy\", \"B\"},\r\n//                {3, \"dd/MM/yyy\", \"C\"},\r\n//        };\r\n//        //criação da tabela\r\n//        JTable tabelaMCliHistRes = new JTable(data, nomeColunasMCliHistRes);\r\n//\r\n//        JButton ptEnMCliRestButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliHistResButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton comentarMCliHistResButton = new JButton(\"COMENTAR\");\r\n//        JButton retornarMCliHistResButton = new JButton(\"VOLTAR\");\r\n//\r\n//        mCliHistResSuperPanel.add(norteMCliHistResSubPanel, \"North\");\r\n//        mCliHistResSuperPanel.add(centroMCliHistResSubPanel, \"Center\");\r\n//        mCliHistResSuperPanel.add(sulMCliHistResSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliHistResSSPanel = new JPanel();\r\n//        norteMCliHistResSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliHistResSSPanel.add(mCliTitHistResLabel);\r\n//        norteMCliHistResSubPanel.add(norteMCliHistResSSPanel, BorderLayout.CENTER);\r\n//        norteMCliHistResSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliHistResSSPanel = new JPanel();\r\n//        centroMCliHistResSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliHistResSSPanel1 = new JPanel();\r\n//        centroMCliHistResSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel1, BorderLayout.WEST);\r\n//\r\n//        centroMCliHistResSSPanel.add(tabelaMCliHistRes);\r\n//        centroMCliHistResSSPanel1.add(mCliIdHistResLabel);\r\n//        centroMCliHistResSSPanel1.add(arrayMCliIdHistResCBox);\r\n//\r\n//        sulMCliHistResSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliHistResSubPanel.add(voltarMCliHistResButton);\r\n//        sulMCliHistResSubPanel.add(retornarMCliHistResButton);\r\n//        sulMCliHistResSubPanel.add(comentarMCliHistResButton);\r\n//\r\n//        retornarMCliHistResButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIRESERVAS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        //todo falta ativar este botão\r\n//        comentarMCliHistResButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESCOMPONTRESE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        voltarMCliHistResButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//    }\r\n//\r\n//    //todo espaço para escrever comentário pode ter barra de rolagem? ativar o botão OK\r\n//    /////////// MENU CLIENTE - MENU RESERVA - HISTÓRICO DE RESERVAS - COMENTAR UMA RESERVA///////\r\n//    private void construirPanelMCliMResComPonReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMResComPontReseSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliRestComPonReseSubPanel = new JPanel();\r\n//        norteMCliRestComPonReseSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliRestComPonReseSubPanel = new JPanel();\r\n//        JPanel sulMCliRestComPonReseSubPanel = new JPanel();\r\n//\r\n//        JRadioButton umPont = new JRadioButton(\"1\");\r\n//        JRadioButton doisPont = new JRadioButton(\"2\");\r\n//        JRadioButton tresPont = new JRadioButton(\"3\");\r\n//        JRadioButton quatroPont = new JRadioButton(\"4\");\r\n//        JRadioButton cincoPont = new JRadioButton(\"5\");\r\n//\r\n//        JLabel mCliRestComPonReseLabel = new JLabel(\"MENU CLIENTE – HISTÓRICO DE RESERVAS - COMENTAR\");\r\n//        JLabel restMCliMReseComPonLabel = new JLabel(\"RESTAURANTE\");\r\n//        JLabel dataMCliMReseComPonLabel = new JLabel(\"DATA DA RESERVA\");\r\n//        JLabel pontMCliRestComPonReseLabel = new JLabel(\"ATRIBUIR PONTUAÇÃO:\");\r\n//\r\n//        JTextField restMCliMReseComPonText = new JTextField(20);\r\n//        JTextField dataMCliMReseComPonText = new JTextField(8);\r\n//        JTextArea novoComMCliMReseComPonTextA = new JTextArea(5, 50);\r\n//        //novoComMCliMReseComPonTextA.setSize(100, 80);\r\n//\r\n//        ButtonGroup group = new ButtonGroup();\r\n//        group.add(umPont);\r\n//        group.add(doisPont);\r\n//        group.add(tresPont);\r\n//        group.add(quatroPont);\r\n//        group.add(cincoPont);\r\n//\r\n//        JButton ptEnMCliRestComPonReseButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliRestComPonReseButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton okMCliRestComPonReseButton = new JButton(\"OK\");\r\n//        JButton retornarMCliRestComPonReseButton = new JButton(\"VOLTAR\");\r\n//\r\n//        mCliMResComPontReseSuperPanel.add(norteMCliRestComPonReseSubPanel, \"North\");\r\n//        mCliMResComPontReseSuperPanel.add(centroMCliRestComPonReseSubPanel, \"Center\");\r\n//        mCliMResComPontReseSuperPanel.add(sulMCliRestComPonReseSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliRestComPonReseSSPanel = new JPanel();\r\n//        norteMCliRestComPonReseSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliRestComPonReseSSPanel.add(mCliRestComPonReseLabel);\r\n//        norteMCliRestComPonReseSubPanel.add(norteMCliRestComPonReseSSPanel, BorderLayout.CENTER);\r\n//        norteMCliRestComPonReseSubPanel.add(ptEnMCliRestComPonReseButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliRestComPonReseSSPanel = new JPanel();\r\n//        centroMCliRestComPonReseSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliRestComPonReseSSPanel1 = new JPanel();\r\n//        centroMCliRestComPonReseSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel1, BorderLayout.CENTER);\r\n//\r\n//        JPanel centroMCliRestComPonReseSSPanel2 = new JPanel();\r\n//        centroMCliRestComPonReseSSPanel2.setLayout(new GridLayout(1, 1));\r\n//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel2);\r\n//\r\n//        JPanel centroMCliRestComPonReseSSPanel3 = new JPanel();\r\n//        centroMCliRestComPonReseSSPanel3.setLayout(new BorderLayout());\r\n//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel3, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliRestComPonReseSSPanel4 = new JPanel();\r\n//        centroMCliRestComPonReseSSPanel4.setLayout(new BorderLayout());\r\n//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel4, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliRestComPonReseSSPanel5 = new JPanel();\r\n//        centroMCliRestComPonReseSSPanel5.setLayout(new BorderLayout());\r\n//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel5, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliRestComPonReseSSPanel6 = new JPanel();\r\n//        centroMCliRestComPonReseSSPanel6.setLayout(new BorderLayout());\r\n//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel6, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliRestComPonReseSSPanel7 = new JPanel();\r\n//        centroMCliRestComPonReseSSPanel7.setLayout(new BorderLayout());\r\n//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel7, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliRestComPonReseSSPanel8 = new JPanel();\r\n//        centroMCliRestComPonReseSSPanel8.setLayout(new GridLayout(1, 2));\r\n//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel8);\r\n//        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonLabel);\r\n//        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonText);\r\n//        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonLabel);\r\n//        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonText);\r\n//        centroMCliRestComPonReseSSPanel1.add(novoComMCliMReseComPonTextA);\r\n//\r\n//        centroMCliRestComPonReseSSPanel2.add(pontMCliRestComPonReseLabel);\r\n//        centroMCliRestComPonReseSSPanel3.add(umPont);\r\n//        centroMCliRestComPonReseSSPanel4.add(doisPont);\r\n//        centroMCliRestComPonReseSSPanel5.add(tresPont);\r\n//        centroMCliRestComPonReseSSPanel6.add(quatroPont);\r\n//        centroMCliRestComPonReseSSPanel7.add(cincoPont);\r\n//\r\n//        sulMCliRestComPonReseSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliRestComPonReseSubPanel.add(voltarMCliRestComPonReseButton);\r\n//        sulMCliRestComPonReseSubPanel.add(retornarMCliRestComPonReseButton);\r\n//        sulMCliRestComPonReseSubPanel.add(okMCliRestComPonReseButton);\r\n//\r\n//        retornarMCliRestComPonReseButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIRESERVAS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//        voltarMCliRestComPonReseButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        //todo ver os encaminhamentos\r\n//        okMCliRestComPonReseButton.addActionListener(e -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(500, 180);\r\n//        });\r\n//    }\r\n//\r\n//\r\n//    ////////////////////NOVO RESTAURANTE/////////////////////////\r\n//    private void construirPanelRestaurante(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoRestauranteSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteNovoRestauranteSubPanel = new JPanel();\r\n//        norteNovoRestauranteSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroNovoRestauranteSubPanel = new JPanel();\r\n//        centroNovoRestauranteSubPanel.setLayout(new FlowLayout());\r\n//        JPanel sulNovoRestauranteSubPanel = new JPanel();\r\n//\r\n//        JLabel registarNovoRestauranteLabel = new JLabel(\"NOVO RESTAURANTE\");\r\n//        registarNovoRestauranteLabel.setForeground(Color.RED);\r\n//        JLabel nomeRestauranteLabel = new JLabel(\"Nome\");\r\n//        JLabel emailRestauranteLabel = new JLabel(\"E-mail\");\r\n//        JLabel moradaRestauranteLabel = new JLabel(\"Morada\");\r\n//        JLabel cidadeRestauranteLabel = new JLabel(\"Cidade\");\r\n//        JLabel telemovelRestauranteLabel = new JLabel(\"Telemóvel\");\r\n/////////////////////////\r\n//        JLabel lotacaoRestauranteLabel = new JLabel(\"Lotação:\");\r\n//        JLabel esplanadaRestauranteLabel = new JLabel(\"Esplanada\");\r\n//        JLabel zonaInteriorLabel = new JLabel(\"Zona Interior:\");\r\n//        JLabel zonaInteriorNFumRestauranteLabel = new JLabel(\"Ñ Fumadores\");\r\n//        JLabel zonaInteriorFumRestauranteLabel = new JLabel(\"Fumadores\");\r\n//        JLabel horariosRestauranteLabel = new JLabel(\"Horários:\");\r\n//        JLabel horariosAlmocoRestauranteLabel = new JLabel(\"Almoço:\");\r\n//        JLabel horarioAlmocoInicioRestauranteLabel = new JLabel(\"Início\");\r\n//        JLabel horarioAlmocoFimRestauranteLabel = new JLabel(\"Fim\");\r\n//        JLabel horariosJantarRestauranteLabel = new JLabel(\"Jantar:\");\r\n//        JLabel horarioJantarInicioRestauranteLabel = new JLabel(\"Início\");\r\n//        JLabel horarioJantarFimRestauranteLabel = new JLabel(\"Fim\");\r\n////////////////////////////////////\r\n//\r\n//\r\n//        JLabel usernameRestauranteLabel = new JLabel(\"Username\");\r\n//        JLabel passwordRestauranteLabel = new JLabel(\"Password \");\r\n//        JLabel confirmarPasswordRestauranteLabel = new JLabel(\"Confirmar password \");\r\n//\r\n//        JTextField nomeRestauranteText = new JTextField(18);\r\n//        nomeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField emailRestauranteText = new JTextField(18);\r\n//        emailRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField moradaRestauranteText = new JTextField(20);\r\n//        moradaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField cidadeRestauranteText = new JTextField(15);\r\n//        cidadeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField telemovelRestauranteText = new JFormattedTextField(mascaraTelemovel);\r\n//        telemovelRestauranteText.setColumns(8);\r\n//        telemovelRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        ////////\r\n//        JTextField esplanadaRestauranteText = new JTextField(3);\r\n//        esplanadaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField zonaInteriorNFumRestauranteText = new JTextField(3);\r\n//        zonaInteriorNFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField zonaInteriorFumRestauranteText = new JTextField(3);\r\n//        zonaInteriorFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField horarioAlmocoInicioRestauranteText = new JTextField(3);\r\n//        horarioAlmocoInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField horarioAlmocoFimRestauranteText = new JTextField(3);\r\n//        horarioAlmocoFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField horarioJantarInicioRestauranteText = new JTextField(3);\r\n//        horarioJantarInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField horarioJantarFimRestauranteText = new JTextField(3);\r\n//        horarioJantarFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        ///////\r\n//        JTextField usernameRestauranteText = new JTextField(20);\r\n//        usernameRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//\r\n//        JPasswordField passwordRestauranteField = new JPasswordField(15);\r\n//        passwordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JPasswordField confirmarPasswordRestauranteField = new JPasswordField(15);\r\n//        confirmarPasswordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//\r\n//        JButton ptEnNovoRestauranteButton = new JButton(\"PT/EN\");\r\n//        JButton cancelarRestauranteButton = new JButton(\"CANCELAR\");\r\n//        JButton registarRestauranteButton = new JButton(\"REGISTAR\");\r\n//\r\n//        registarNovoRestauranteSuperPanel.add(norteNovoRestauranteSubPanel, \"North\");\r\n//        registarNovoRestauranteSuperPanel.add(centroNovoRestauranteSubPanel, \"Center\");\r\n//        registarNovoRestauranteSuperPanel.add(sulNovoRestauranteSubPanel, \"South\");\r\n//\r\n////        JPanel norteSupMRestSubPanel = new JPanel();\r\n////        norteSupMRestSubPanel.setLayout(new FlowLayout());\r\n////        norteNovoRestauranteSubPanel.add(norteSupMRestSubPanel, BorderLayout.CENTER);\r\n////        norteSupMRestSubPanel.add(registarNovoRestauranteLabel);\r\n////        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);\r\n//\r\n//        JPanel norteNovoRestSSPanel = new JPanel();\r\n//        norteNovoRestSSPanel.setLayout(new FlowLayout());\r\n//        norteNovoRestSSPanel.add(registarNovoRestauranteLabel);\r\n//        norteNovoRestauranteSubPanel.add(norteNovoRestSSPanel, BorderLayout.CENTER);\r\n//        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroNovoRestSSPanelForm1 = new JPanel();\r\n//        centroNovoRestSSPanelForm1.setLayout(new FlowLayout());\r\n//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm1);\r\n//        JPanel centroNovoRestSSPanelForm2 = new JPanel();\r\n//        centroNovoRestSSPanelForm2.setLayout(new FlowLayout());\r\n//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2, BorderLayout.CENTER);\r\n//        JPanel centroNovoRestSSPanelForm2A = new JPanel();\r\n//        centroNovoRestSSPanelForm2A.setLayout(new FlowLayout());\r\n//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2A, BorderLayout.CENTER);\r\n//        JPanel centroNovoRestSSPanelForm3 = new JPanel();\r\n//        //centroNovoRestSSPanelForm3.setLayout(new FlowLayout());\r\n//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm3, BorderLayout.CENTER);\r\n//\r\n//        JPanel centroNovoRestSSPanelForm4 = new JPanel();\r\n//        centroNovoRestSSPanelForm4.setLayout(new FlowLayout());\r\n//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm4, BorderLayout.CENTER);\r\n//\r\n//        JPanel centroNovoRestSSPanelForm5 = new JPanel();\r\n//        centroNovoRestSSPanelForm5.setLayout(new FlowLayout());\r\n//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm5, BorderLayout.CENTER);\r\n//\r\n//        JPanel centroNovoRestSSPanelForm6 = new JPanel();\r\n//        centroNovoRestSSPanelForm6.setLayout(new FlowLayout());\r\n//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm6, BorderLayout.CENTER);\r\n//\r\n//        centroNovoRestSSPanelForm1.add(nomeRestauranteLabel);\r\n//        centroNovoRestSSPanelForm1.add(nomeRestauranteText);\r\n//        centroNovoRestSSPanelForm1.add(emailRestauranteLabel);\r\n//        centroNovoRestSSPanelForm1.add(emailRestauranteText);\r\n//        centroNovoRestSSPanelForm2.add(moradaRestauranteLabel);\r\n//        centroNovoRestSSPanelForm2.add(moradaRestauranteText);\r\n//        centroNovoRestSSPanelForm2A.add(cidadeRestauranteLabel);\r\n//        centroNovoRestSSPanelForm2A.add(cidadeRestauranteText);\r\n//        centroNovoRestSSPanelForm2A.add(telemovelRestauranteLabel);\r\n//        centroNovoRestSSPanelForm2A.add(telemovelRestauranteText);\r\n//        /////\r\n//        centroNovoRestSSPanelForm3.add(lotacaoRestauranteLabel);\r\n//        centroNovoRestSSPanelForm3.add(esplanadaRestauranteLabel);\r\n//        centroNovoRestSSPanelForm3.add(esplanadaRestauranteText);\r\n//        centroNovoRestSSPanelForm3.add(zonaInteriorLabel);\r\n//        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteLabel);\r\n//        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteText);\r\n//        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteLabel);\r\n//        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteText);\r\n//\r\n//        centroNovoRestSSPanelForm4.add(horariosRestauranteLabel);\r\n//        centroNovoRestSSPanelForm4.add(horariosAlmocoRestauranteLabel);\r\n//        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteLabel);\r\n//        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteText);\r\n//        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteLabel);\r\n//        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteText);\r\n//        centroNovoRestSSPanelForm4.add(horariosJantarRestauranteLabel);\r\n//        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteLabel);\r\n//        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteText);\r\n//        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteLabel);\r\n//        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteText);\r\n//\r\n//        //\r\n//        centroNovoRestSSPanelForm5.add(usernameRestauranteLabel);\r\n//        centroNovoRestSSPanelForm5.add(usernameRestauranteText);\r\n//\r\n//        centroNovoRestSSPanelForm6.add(passwordRestauranteLabel);\r\n//        centroNovoRestSSPanelForm6.add(passwordRestauranteField);\r\n//        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteLabel);\r\n//        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteField);\r\n//\r\n//\r\n//        sulNovoRestauranteSubPanel.setLayout(new FlowLayout());\r\n//        sulNovoRestauranteSubPanel.add(cancelarRestauranteButton);\r\n//        sulNovoRestauranteSubPanel.add(registarRestauranteButton);\r\n//\r\n//        cancelarRestauranteButton.addActionListener(e -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(500, 180);\r\n//        });\r\n//\r\n//        registarRestauranteButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENURESTAURANTE_CARD);\r\n//            this.setSize(500, 300);\r\n//\r\n//        });\r\n//    }\r\n//\r\n//    //////MENU RESTAURANTE////////\r\n//    private void construirPanelMRest(Container contentor, JPanel loginSuperPanel, JPanel menuRestauranteSuperPanel) {\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMenuRestauranteSubPanel = new JPanel();\r\n//        norteMenuRestauranteSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMenuRestauranteSubPanel = new JPanel();\r\n//        JPanel sulMenuRestauranteSubPanel = new JPanel();\r\n//\r\n//        JLabel registarNovoRestauranteLabel = new JLabel(\"MENU RESTAURANTE\");\r\n//        registarNovoRestauranteLabel.setForeground(Color.RED);\r\n//\r\n//        JButton ptEnMenuRestauranteButton = new JButton(\"PT/EN\");\r\n//        ////\r\n//        JButton mRestAdicionarPratoButton = new JButton(\"ADICIONAR PRATO\");\r\n//        JButton mRestActualizarPratoDiaButton = new JButton(\"ACTUALIZAR PRATO DO DIA\");\r\n//        JButton mRestActualizarDadosButton = new JButton(\"ACTUALIZAR DADOS\");\r\n//        JButton mRestReservasButton = new JButton(\"RESERVAS\");\r\n//        JButton mRestConsultarComentariosButton = new JButton(\"COMENTÁRIOS\");\r\n//        JButton pontuacaoMedia = new JButton(\"PONTUAÇÃO MÉDIA\");\r\n//\r\n//\r\n//        ///\r\n//        //JButton cancelarMenuRestauranteButton = new JButton(\"CANCELAR\");\r\n//        JButton logoutMenuRestauranteButton = new JButton(\"LOGOUT\");\r\n//\r\n//        menuRestauranteSuperPanel.add(norteMenuRestauranteSubPanel, \"North\");\r\n//        menuRestauranteSuperPanel.add(centroMenuRestauranteSubPanel, \"Center\");\r\n//        menuRestauranteSuperPanel.add(sulMenuRestauranteSubPanel, \"South\");\r\n//\r\n//        JPanel norteMenuRestauranteSSPanel = new JPanel();\r\n//        norteMenuRestauranteSSPanel.setLayout(new FlowLayout());\r\n//        norteMenuRestauranteSSPanel.add(registarNovoRestauranteLabel);\r\n//        norteMenuRestauranteSubPanel.add(norteMenuRestauranteSSPanel, BorderLayout.CENTER);\r\n//        norteMenuRestauranteSubPanel.add(ptEnMenuRestauranteButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroNovoRestauranteSSPanelForm = new JPanel();\r\n//        centroNovoRestauranteSSPanelForm.setLayout(new GridLayout(7, 1));\r\n//        centroMenuRestauranteSubPanel.add(centroNovoRestauranteSSPanelForm);\r\n//        centroNovoRestauranteSSPanelForm.add(mRestAdicionarPratoButton);\r\n//        centroNovoRestauranteSSPanelForm.add(mRestActualizarPratoDiaButton);\r\n//        centroNovoRestauranteSSPanelForm.add(mRestActualizarDadosButton);\r\n//        centroNovoRestauranteSSPanelForm.add(mRestReservasButton);\r\n//        centroNovoRestauranteSSPanelForm.add(mRestConsultarComentariosButton);\r\n//        centroNovoRestauranteSSPanelForm.add(pontuacaoMedia);\r\n//\r\n//        sulMenuRestauranteSubPanel.setLayout(new FlowLayout());\r\n//        //sulMenuRestauranteSubPanel.add(cancelarMenuRestauranteButton);\r\n//        sulMenuRestauranteSubPanel.add(logoutMenuRestauranteButton);\r\n//\r\n////        cancelarMenuRestauranteButton.addActionListener(a -> {\r\n////           CardLayout cl = (CardLayout) contentor.getLayout();\r\n////           cl.show(contentor, LOGIN_CARD);\r\n////            this.setSize(500, 300);\r\n////\r\n////       });\r\n//        mRestAdicionarPratoButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MRESTADICIONARPRATO_CARD);\r\n//            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n//        });\r\n//\r\n//        mRestActualizarPratoDiaButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MRESTACTUALIZARPRATO_CARD);\r\n//            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n//        });\r\n//\r\n//        mRestReservasButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MRESTRESERV_CARD);\r\n//            this.setSize(LARGURA_PADRAO, 350);\r\n//        });\r\n//\r\n//        mRestActualizarDadosButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MRESTACTUALIZARDADOS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, 350);\r\n//        });\r\n//\r\n////        mRestReservasButton.addActionListener(a -> {\r\n////            CardLayout cl = (CardLayout) contentor.getLayout();\r\n////            cl.show(contentor, MRESTCOMENTARIOS_CARD);\r\n////            this.setSize(LARGURA_PADRAO, 350);\r\n////      });\r\n//\r\n//        mRestConsultarComentariosButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MRESTCOMENTARIOS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, 350);\r\n//        });\r\n//\r\n//        logoutMenuRestauranteButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n//        });\r\n//    }\r\n//\r\n//    ///////////MENU RESTAURANTE - ADICIONAR PRATO//////////////////////\r\n//    private void construirPanelMRestAdPrato(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAdPratoSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteAdPratoSubPanel = new JPanel();\r\n//        norteAdPratoSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroAdPratoSubPanel = new JPanel();\r\n//        JPanel sulAdPratoSubPanel = new JPanel();\r\n//\r\n//        JLabel adPratoLabel = new JLabel(\"ADICIONAR PRATO\");\r\n//        JLabel nomePratoLabel = new JLabel(\"Nome Prato\");\r\n//        JLabel descricaoPratoLabel = new JLabel(\"Descrição\");\r\n//        JLabel precoPratoLabel = new JLabel(\"Preço\");\r\n//\r\n//        JTextField nomePratoText = new JTextField(20);\r\n//        JTextField descricaoPratoText = new JTextField(20);\r\n//        JTextField precoPratoText = new JTextField(10);\r\n//\r\n//\r\n//        JButton ptEnAdPratoButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMenuRestAdPratoButton = new JButton(\"MENU RESTAURANTE\");\r\n//        JButton confirmarAdPratoButton = new JButton(\"CONFIRMAR\");\r\n//\r\n//\r\n//        JComboBox tipoPratoAd = new JComboBox();\r\n//        tipoPratoAd.addItem(\"Carta\");\r\n//        tipoPratoAd.addItem(\"Prato do dia\");\r\n//\r\n//\r\n//        mRestAdPratoSuperPanel.add(norteAdPratoSubPanel, \"North\");\r\n//        mRestAdPratoSuperPanel.add(centroAdPratoSubPanel, \"Center\");\r\n//        mRestAdPratoSuperPanel.add(sulAdPratoSubPanel, \"South\");\r\n//\r\n//        JPanel norteAdPratoSSPanel = new JPanel();\r\n//        norteAdPratoSSPanel.setLayout(new FlowLayout());\r\n//        norteAdPratoSSPanel.add(adPratoLabel);\r\n//        norteAdPratoSubPanel.add(norteAdPratoSSPanel, BorderLayout.CENTER);\r\n//        norteAdPratoSubPanel.add(ptEnAdPratoButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroAdPratoSSPanelForm = new JPanel();\r\n//        centroAdPratoSSPanelForm.setLayout(new GridLayout(5, 2));\r\n//        centroAdPratoSubPanel.add(centroAdPratoSSPanelForm);\r\n//        centroAdPratoSubPanel.add(tipoPratoAd);\r\n//        centroAdPratoSSPanelForm.add(nomePratoLabel);\r\n//        centroAdPratoSSPanelForm.add(nomePratoText);\r\n//        centroAdPratoSSPanelForm.add(descricaoPratoLabel);\r\n//        centroAdPratoSSPanelForm.add(descricaoPratoText);\r\n//        centroAdPratoSSPanelForm.add(precoPratoLabel);\r\n//        centroAdPratoSSPanelForm.add(precoPratoText);\r\n//\r\n//        sulAdPratoSubPanel.setLayout(new FlowLayout());\r\n//        sulAdPratoSubPanel.add(voltarMenuRestAdPratoButton);\r\n//        sulAdPratoSubPanel.add(confirmarAdPratoButton);\r\n//\r\n//\r\n//        voltarMenuRestAdPratoButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENURESTAURANTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//\r\n//        confirmarAdPratoButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENURESTAURANTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//\r\n//    }\r\n//\r\n//    /////////MENU RESTAURANTE – ACTUALIZAR PRATO//////////////////////\r\n//    private void construirPanelMRestAtPratoDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtPratoSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteAtPratoSubPanel = new JPanel();\r\n//        norteAtPratoSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroAtPratoSubPanel = new JPanel();\r\n//        JPanel sulAtPratoSubPanel = new JPanel();\r\n//\r\n//        JLabel atPratoLabel = new JLabel(\"ACTUALIZAR PRATO DO DIA\");\r\n//        JLabel atNomePratoLabel = new JLabel(\"Nome Prato\");\r\n//        JLabel atDescricaoPratoLabel = new JLabel(\"Descrição\");\r\n//        JLabel atPrecoPratoLabel = new JLabel(\"Preço\");\r\n//\r\n//        JTextField atNomePratoText = new JTextField(20);\r\n//        JTextField atDescricaoPratoText = new JTextField(20);\r\n//        JTextField atPrecoPratoText = new JTextField(10);\r\n//\r\n//        JButton ptEnAtPratoButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMenuRestAtPratoButton = new JButton(\"MENU RESTAURANTE\");\r\n//        JButton confirmarAtPratoButton = new JButton(\"CONFIRMAR\");\r\n//\r\n//        mRestAtPratoSuperPanel.add(norteAtPratoSubPanel, \"North\");\r\n//        mRestAtPratoSuperPanel.add(centroAtPratoSubPanel, \"Center\");\r\n//        mRestAtPratoSuperPanel.add(sulAtPratoSubPanel, \"South\");\r\n//\r\n//        JPanel norteAtPratoSSPanel = new JPanel();\r\n//        norteAtPratoSSPanel.setLayout(new FlowLayout());\r\n//        norteAtPratoSSPanel.add(atPratoLabel);\r\n//        norteAtPratoSubPanel.add(norteAtPratoSSPanel, BorderLayout.CENTER);\r\n//        norteAtPratoSubPanel.add(ptEnAtPratoButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroAtPratoSSPanelForm = new JPanel();\r\n//        centroAtPratoSSPanelForm.setLayout(new GridLayout(3, 2));\r\n//        centroAtPratoSubPanel.add(centroAtPratoSSPanelForm);\r\n//        //centroAtPratoSSPanelForm.add(atPratoLabel);\r\n//        centroAtPratoSSPanelForm.add(atNomePratoLabel);\r\n//        centroAtPratoSSPanelForm.add(atNomePratoText);\r\n//        centroAtPratoSSPanelForm.add(atDescricaoPratoLabel);\r\n//        centroAtPratoSSPanelForm.add(atDescricaoPratoText);\r\n//        centroAtPratoSSPanelForm.add(atPrecoPratoLabel);\r\n//        centroAtPratoSSPanelForm.add(atPrecoPratoText);\r\n//\r\n//        sulAtPratoSubPanel.setLayout(new FlowLayout());\r\n//        sulAtPratoSubPanel.add(voltarMenuRestAtPratoButton);\r\n//        sulAtPratoSubPanel.add(confirmarAtPratoButton);\r\n//\r\n//\r\n//        voltarMenuRestAtPratoButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENURESTAURANTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//        confirmarAtPratoButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENURESTAURANTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//    }\r\n//\r\n//    ///////////////////MENU RESTAURANTE - ACTUALIZAR DADOS /////////////////////////\r\n//    private void construirPanelMRestAtDados(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtDadosSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMRestAtDadosSubPanel = new JPanel();\r\n//        norteMRestAtDadosSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMRestAtDadosSubPanel = new JPanel();\r\n//        JPanel sulMRestAtDadosSubPanel = new JPanel();\r\n//\r\n//        JLabel atDadosRestLabel = new JLabel(\"ACTUALIZAR DADOS\");\r\n//        JLabel nomeAtDadosRestLabel = new JLabel(\"Nome\");\r\n//        JLabel emailAtDadosRestLabel = new JLabel(\"E-mail\");\r\n//        JLabel moradaAtDadosRestLabel = new JLabel(\"Morada\");\r\n//        JLabel cidadeAtDadosRestLabel = new JLabel(\"Cidade\");\r\n//        JLabel telemovelAtDadosRestLabel = new JLabel(\"Telemóvel\");\r\n/////////////////////////\r\n//        JLabel lotacaoAtDadosRestLabel = new JLabel(\"Lotação:\");\r\n//        JLabel esplanadaAtDadosRestLabel = new JLabel(\"Esplanada\");\r\n//        JLabel zonaInteriorAtDadosRestLabel = new JLabel(\"Zona Interior:\");\r\n//        JLabel zonaInteriorNFumAtDadosRestLabel = new JLabel(\"Ñ Fumadores\");\r\n//        JLabel zonaInteriorFumAtDadosRestLabel = new JLabel(\"Fumadores\");\r\n//        JLabel horariosAtDadosRestLabel = new JLabel(\"Horários:\");\r\n//        JLabel horariosAlmocoAtDadosRestLabel = new JLabel(\"Almoço:\");\r\n//        JLabel horarioAlmocoInicioAtDadosRestLabel = new JLabel(\"Início\");\r\n//        JLabel horarioAlmocoFimAtDadosRestLabel = new JLabel(\"Fim\");\r\n//        JLabel horariosJantarAtDadosRestLabel = new JLabel(\"Jantar:\");\r\n//        JLabel horarioJantarInicioAtDadosRestLabel = new JLabel(\"Início\");\r\n//        JLabel horarioJantarFimAtDadosRestLabel = new JLabel(\"Fim\");\r\n//        JLabel usernameAtDadosRestLabel = new JLabel(\"Username\");\r\n//        JLabel passwordAtDadosRestLabel = new JLabel(\"Password\");\r\n//        JLabel confirmarPasswordAtDadosRestLabel = new JLabel(\"Confirmar password \");\r\n//\r\n//        JTextField nomeAtDadosRestText = new JTextField(18);\r\n//        nomeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField emailAtDadosRestText = new JTextField(18);\r\n//        emailAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField moradaAtDadosRestText = new JTextField(20);\r\n//        moradaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField cidadeAtDadosRestText = new JTextField(15);\r\n//        cidadeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField telemovelAtDadosRestText = new JFormattedTextField(mascaraTelemovel);\r\n//        telemovelAtDadosRestText.setColumns(8);\r\n//        telemovelAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//\r\n//        //JTextField lotacaoAtDadosRestText = new JTextField(5);\r\n//        JTextField esplanadaAtDadosRestText = new JTextField(3);\r\n//        esplanadaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField zonaInteriorNFumAtDadosRestText = new JTextField(3);\r\n//        zonaInteriorNFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField zonaInteriorFumAtDadosRestText = new JTextField(3);\r\n//        zonaInteriorFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField horarioAlmocoInicioAtDadosRestText = new JTextField(3);\r\n//        horarioAlmocoInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField horarioAlmocoFimAtDadosRestText = new JTextField(3);\r\n//        horarioAlmocoFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField horarioJantarInicioAtDadosRestText = new JTextField(3);\r\n//        horarioJantarInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JTextField horarioJantarFimAtDadosRestText = new JTextField(3);\r\n//        horarioJantarFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        ///////\r\n//        JTextField usernameAtDadosRestText = new JTextField(20);\r\n//        usernameAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//\r\n//        JPasswordField passwordAtDadosRestField = new JPasswordField(15);\r\n//        passwordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//        JPasswordField confirmarPasswordAtDadosRestField = new JPasswordField(15);\r\n//        confirmarPasswordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n//\r\n//        JButton ptEnAtDadosRestButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMenuRestAtDadosRestButton = new JButton(\"MENU RESTAURANTE\");\r\n//        JButton atDadosRestButton = new JButton(\"ACTUALIZAR\");\r\n//\r\n//        mRestAtDadosSuperPanel.add(norteMRestAtDadosSubPanel, \"North\");\r\n//        mRestAtDadosSuperPanel.add(centroMRestAtDadosSubPanel, \"Center\");\r\n//        mRestAtDadosSuperPanel.add(sulMRestAtDadosSubPanel, \"South\");\r\n//\r\n//        JPanel norteAtDadosRestSSPanel = new JPanel();\r\n//        norteAtDadosRestSSPanel.setLayout(new FlowLayout());\r\n//        norteAtDadosRestSSPanel.add(atDadosRestLabel);\r\n//        norteMRestAtDadosSubPanel.add(norteAtDadosRestSSPanel, BorderLayout.CENTER);\r\n//        norteMRestAtDadosSubPanel.add(ptEnAtDadosRestButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroAtDadosRestSSPanelForm1 = new JPanel();\r\n//        centroAtDadosRestSSPanelForm1.setLayout(new FlowLayout());\r\n//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroAtDadosRestSSPanelForm2 = new JPanel();\r\n//        centroAtDadosRestSSPanelForm2.setLayout(new FlowLayout());\r\n//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2, BorderLayout.WEST);\r\n//\r\n//        JPanel centroAtDadosRestSSPanelForm2A = new JPanel();\r\n//        centroAtDadosRestSSPanelForm2A.setLayout(new FlowLayout());\r\n//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2A, BorderLayout.WEST);\r\n//\r\n//        JPanel centroAtDadosRestSSPanelForm3 = new JPanel();\r\n//        //centroAtDadosRestSSPanelForm3.setLayout(new FlowLayout());\r\n//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm3, BorderLayout.WEST);\r\n//\r\n//        JPanel centroAtDadosRestSSPanelForm4 = new JPanel();\r\n//        centroAtDadosRestSSPanelForm4.setLayout(new FlowLayout());\r\n//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm4, BorderLayout.WEST);\r\n//\r\n//        JPanel centroAtDadosRestSSPanelForm5 = new JPanel();\r\n//        centroAtDadosRestSSPanelForm5.setLayout(new FlowLayout());\r\n//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm5, BorderLayout.WEST);\r\n//\r\n//        JPanel centroAtDadosRestSSPanelForm6 = new JPanel();\r\n//        centroAtDadosRestSSPanelForm6.setLayout(new FlowLayout());\r\n//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm6, BorderLayout.WEST);\r\n//\r\n//        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestText);\r\n//        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestText);\r\n//\r\n//        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestText);\r\n//        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestText);\r\n//        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestText);\r\n//\r\n//        centroAtDadosRestSSPanelForm3.add(lotacaoAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestText);\r\n//        centroAtDadosRestSSPanelForm3.add(zonaInteriorAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestText);\r\n//        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestText);\r\n//\r\n//\r\n//        centroAtDadosRestSSPanelForm4.add(horariosAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm4.add(horariosAlmocoAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestText);\r\n//        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestText);\r\n//        centroAtDadosRestSSPanelForm4.add(horariosJantarAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestText);\r\n//        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestText);\r\n//\r\n//        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestText);\r\n//\r\n//        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestField);\r\n//        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestLabel);\r\n//        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestField);\r\n//\r\n//        sulMRestAtDadosSubPanel.setLayout(new FlowLayout());\r\n//        sulMRestAtDadosSubPanel.add(voltarMenuRestAtDadosRestButton);\r\n//        sulMRestAtDadosSubPanel.add(atDadosRestButton);\r\n//\r\n//        voltarMenuRestAtDadosRestButton.addActionListener(e -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENURESTAURANTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        atDadosRestButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENURESTAURANTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//\r\n//    }\r\n//\r\n//    //////MENU RESTAURANTE – HISTÓRICO DE RESERVAS//////////\r\n//    private void construirPanelMRestReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestReservasSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMRestReservasSubPanel = new JPanel();\r\n//        norteMRestReservasSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMRestReservasSubPanel = new JPanel();\r\n//        JPanel sulMRestReservasSubPanel = new JPanel();\r\n//\r\n//        JLabel mRestReservasLabel = new JLabel(\"HISTÓRICO DE RESERVAS\");\r\n//        JLabel usernameMRestReservasLabel = new JLabel(\"Username\");\r\n//        //JLabel filtrarTipomRestResLabel = new JLabel(\"Escolha a opção em que a lista será mostrada:\");\r\n//        JLabel filtrarDataInicioMRestReservasLabel = new JLabel(\"De\");\r\n//        JLabel filtrarDataFimMRestReservasLabel = new JLabel(\"Até\");\r\n//\r\n//\r\n//        JTextField usernameMRestReservasText = new JTextField(20);\r\n//\r\n//        JCheckBox cem = new JCheckBox(\"Até 100\");\r\n//        cem.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox duzentos = new JCheckBox(\"100-200\");\r\n//        duzentos.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox trezentos = new JCheckBox(\"200-300\");\r\n//        trezentos.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox quatrocentos = new JCheckBox(\"+ de 300\");\r\n//        quatrocentos.setMnemonic(KeyEvent.VK_C);\r\n//\r\n//\r\n//        JRadioButton filtrarIntervDatasMRestResRButton = new JRadioButton(\"DATAS\");\r\n//        //todo verificar a questão do calendário\r\n//        JRadioButton filtrarTipomRestResRButton = new JRadioButton(\"TIPO\");\r\n//        JRadioButton filtrarIntervValmRestResRButton = new JRadioButton(\"VALORES\");\r\n//        JRadioButton filtrarClientemRestResRButton = new JRadioButton(\"CLIENTE\");\r\n//\r\n//        ButtonGroup group = new ButtonGroup();\r\n//        group.add(filtrarIntervDatasMRestResRButton);\r\n//        group.add(filtrarTipomRestResRButton);\r\n//        group.add(filtrarIntervValmRestResRButton);\r\n//        group.add(filtrarClientemRestResRButton);\r\n//\r\n//        JComboBox<String> filtrosTipoMRestReservasJCBox = new JComboBox<>();\r\n//        filtrosTipoMRestReservasJCBox.addItem(\"\");\r\n//        filtrosTipoMRestReservasJCBox.addItem(\"Presencial\");\r\n//        filtrosTipoMRestReservasJCBox.addItem(\"Take-Away\");\r\n//\r\n//        JButton ptEnMRestReservasButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMRestReservasButton = new JButton(\"MENU RESTAURANTE\");\r\n//        JButton okMRestReservasButton = new JButton(\"OK\");\r\n//\r\n//        //Adição do calendário\r\n//        UtilDateModel model1 = new UtilDateModel();\r\n//        UtilDateModel model2 = new UtilDateModel();\r\n//\r\n//        ResourceBundle b = ResourceBundle.getBundle(\"Text\");\r\n//\r\n//        Properties p = convertResourceBundleToProperties(b);\r\n//        JDatePanelImpl datePanel = new JDatePanelImpl(model1, p);\r\n//        JDatePickerImpl datePicker1 = new JDatePickerImpl(datePanel, new DateLabelFormatter());\r\n//\r\n//        JDatePanelImpl datePanel1 = new JDatePanelImpl(model2, p);\r\n//        JDatePickerImpl datePicker2 = new JDatePickerImpl(datePanel1, new DateLabelFormatter());\r\n//\r\n//        mRestReservasSuperPanel.add(norteMRestReservasSubPanel, \"North\");\r\n//        mRestReservasSuperPanel.add(centroMRestReservasSubPanel, \"Center\");\r\n//        mRestReservasSuperPanel.add(sulMRestReservasSubPanel, \"South\");\r\n//\r\n//        JPanel norteMRestReservasSSPanel = new JPanel();\r\n//        norteMRestReservasSSPanel.setLayout(new FlowLayout());\r\n//        norteMRestReservasSSPanel.add(mRestReservasLabel);\r\n//        norteMRestReservasSubPanel.add(norteMRestReservasSSPanel, BorderLayout.CENTER);\r\n//        norteMRestReservasSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMRestReservasSSPanel = new JPanel();\r\n//        centroMRestReservasSSPanel.setLayout(new FlowLayout());\r\n//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMRestReservasSSPanel1 = new JPanel();\r\n//        centroMRestReservasSSPanel1.setLayout(new FlowLayout());\r\n//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMRestReservasSSPanel2 = new JPanel();\r\n//        centroMRestReservasSSPanel2.setLayout(new FlowLayout());\r\n//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMRestReservasSSPanel2A = new JPanel();\r\n//        centroMRestReservasSSPanel2A.setLayout(new GridLayout(1, 1));\r\n//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2A, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMRestReservasSSPanel3 = new JPanel();\r\n//        centroMRestReservasSSPanel3.setLayout(new FlowLayout());\r\n//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel3, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMRestReservasSSPanel4 = new JPanel();\r\n//        centroMRestReservasSSPanel4.setLayout(new FlowLayout());\r\n//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel4, BorderLayout.WEST);\r\n//\r\n//        centroMRestReservasSSPanel.add(filtrarIntervDatasMRestResRButton);\r\n//        centroMRestReservasSSPanel1.add(filtrarDataInicioMRestReservasLabel);\r\n//        centroMRestReservasSSPanel1.add(datePicker1);\r\n//        centroMRestReservasSSPanel1.add(filtrarDataFimMRestReservasLabel);\r\n//        centroMRestReservasSSPanel1.add(datePicker2);\r\n//\r\n//        centroMRestReservasSSPanel2.add(filtrarTipomRestResRButton);\r\n//        centroMRestReservasSSPanel2A.add(filtrosTipoMRestReservasJCBox);\r\n//\r\n//        centroMRestReservasSSPanel3.add(filtrarIntervValmRestResRButton);\r\n//        centroMRestReservasSSPanel3.add(cem);\r\n//        centroMRestReservasSSPanel3.add(duzentos);\r\n//        centroMRestReservasSSPanel3.add(trezentos);\r\n//        centroMRestReservasSSPanel3.add(quatrocentos);\r\n//\r\n//        centroMRestReservasSSPanel4.add(filtrarClientemRestResRButton);\r\n//        centroMRestReservasSSPanel4.add(usernameMRestReservasLabel);\r\n//        centroMRestReservasSSPanel4.add(usernameMRestReservasText);\r\n//\r\n//        sulMRestReservasSubPanel.setLayout(new FlowLayout());\r\n//        sulMRestReservasSubPanel.add(voltarMRestReservasButton);\r\n//        sulMRestReservasSubPanel.add(okMRestReservasButton);\r\n//\r\n//\r\n//        voltarMRestReservasButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENURESTAURANTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//\r\n//        //todo ver os encaminhamentos\r\n//        okMRestReservasButton.addActionListener(e -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(500, 180);\r\n//        });\r\n//    }\r\n//\r\n//    /**\r\n//     * Convert ResourceBundle into a Properties object.\r\n//     *\r\n//     * @param resource a resource bundle to convert.\r\n//     * @return Properties a properties version of the resource bundle.\r\n//     */\r\n//\r\n//\r\n//////////COMENTEI AQUI NOVAMENTE////////////////////\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//    private static Properties convertResourceBundleToProperties(ResourceBundle resource) {\r\n//        Properties properties = new Properties();\r\n//        Enumeration<String> keys = resource.getKeys();\r\n//        while (keys.hasMoreElements()) {\r\n//            String key = keys.nextElement();\r\n//            properties.put(key, resource.getString(key));\r\n//        }\r\n//        return properties;\r\n//    }\r\n//\r\n//\r\n//    //////MENU RESTAURANTE – COMENTÁRIOS//////////\r\n//    private void construirPanelMRestComentarios(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestComentariosSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMRestComentariosSubPanel = new JPanel();\r\n//        norteMRestComentariosSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMRestComentariosSubPanel = new JPanel();\r\n//        JPanel sulMRestComentariosSubPanel = new JPanel();\r\n//\r\n//        JLabel mRestComentariosLabel = new JLabel(\"COMENTÁRIOS RECEBIDOS\");\r\n//\r\n//\r\n//        String[] nomeColunasMRestComentarios = new String[]{\r\n//                \"USERNAME\", \"COMENTÁRIO\", \"PONTUAÇÃO\"\r\n//        };\r\n//\r\n//        //todo exemplo a verificar\r\n//        Object[][] dados = new Object[][]{\r\n//                {\"USERNAME\", \"COMENTÁRIO\", \"PONTUAÇÃO\"},\r\n//                {\"Nuno\", \"Muito bom\", 4.0},\r\n//                {\"Manuel\", \"Excelente\", 5.0},\r\n//                {\"André\", \"Pouco espaço interno\", 3.0},\r\n//        };\r\n//        //criação da tabela\r\n//        JTable tabela = new JTable(dados, nomeColunasMRestComentarios);\r\n//\r\n////        JPopupMenu popupMenu = new JPopupMenu();\r\n////        JMenuItem menuItemAdd = new JMenuItem(\"Responder\");\r\n//\r\n//        JButton ptEnMRestReservasButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMRestComentariosButton = new JButton(\"MENU RESTAURANTE\");\r\n//        JButton responderMRestComentariosButton = new JButton(\"OK\");\r\n//\r\n//        mRestComentariosSuperPanel.add(norteMRestComentariosSubPanel, \"North\");\r\n//        mRestComentariosSuperPanel.add(centroMRestComentariosSubPanel, \"Center\");\r\n//        mRestComentariosSuperPanel.add(sulMRestComentariosSubPanel, \"South\");\r\n//\r\n//        JPanel norteMRestComentariosSSPanel = new JPanel();\r\n//        norteMRestComentariosSSPanel.setLayout(new FlowLayout());\r\n//        norteMRestComentariosSSPanel.add(mRestComentariosLabel);\r\n//        norteMRestComentariosSubPanel.add(norteMRestComentariosSSPanel, BorderLayout.CENTER);\r\n//        norteMRestComentariosSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMRestReservasSSPanel1 = new JPanel();\r\n//        centroMRestReservasSSPanel1.setLayout(new FlowLayout());\r\n//        centroMRestComentariosSubPanel.add(tabela, BorderLayout.WEST);\r\n//\r\n//        sulMRestComentariosSubPanel.setLayout(new FlowLayout());\r\n//        sulMRestComentariosSubPanel.add(voltarMRestComentariosButton);\r\n//        sulMRestComentariosSubPanel.add(responderMRestComentariosButton);\r\n//\r\n//\r\n//        voltarMRestComentariosButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENURESTAURANTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//\r\n//        //todo ver os encaminhamentos para responder comentário\r\n//        responderMRestComentariosButton.addActionListener(e -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(500, 180);\r\n//        });\r\n//\r\n//    }\r\n//\r\n//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS//////////\r\n//    private void construirPanelMCliMRestFOrdRests(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestsSuperPanel) {\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMRestFOrdRestsSubPanel = new JPanel();\r\n//        norteMCliMRestFOrdRestsSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMRestFOrdRestsSubPanel = new JPanel();\r\n//        JPanel sulMCliMRestFOrdRestsSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMRestFOrdRestsLabel = new JLabel(\"MENU CLIENTE - PESQUISAR RESTAURANTES\");\r\n//\r\n//        JLabel fMCliMRestFOrdRestsLabel = new JLabel(\"FILTRAR:\");\r\n//        JButton fhoraFMCliMRestFOrdRestsButton = new JButton(\"HORA DE FUNCIONAMENTO\");\r\n//        JButton fLotMCliMRestFOrdRestsButton = new JButton(\"LOTAÇÃO\");\r\n//        JButton fCidCliMRestFOrdRestsButton = new JButton(\"CIDADE\");\r\n//\r\n//        JLabel fOrdMCliMRestsFOrdRestLabel = new JLabel(\"FILTRAR/ORDENAR:\");\r\n//        JButton fOrdPontCliMRestFOrdRestsButton = new JButton(\"PONTUAÇÃO\");\r\n//        JButton fOrdValoresMCliMRestFOrdRestsButton = new JButton(\"VALORES MÉDIOS DOS PRATOS\");\r\n//\r\n//        JButton ptEnMCliMRestFOrdRestsButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMRestsFOrdRestButton = new JButton(\"MENU CLIENTE\");\r\n//\r\n//        mCliMRestFOrdRestsSuperPanel.add(norteMCliMRestFOrdRestsSubPanel, \"North\");\r\n//        mCliMRestFOrdRestsSuperPanel.add(centroMCliMRestFOrdRestsSubPanel, \"Center\");\r\n//        mCliMRestFOrdRestsSuperPanel.add(sulMCliMRestFOrdRestsSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMRestFOrdRestsSSPanel = new JPanel();\r\n//        norteMCliMRestFOrdRestsSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMRestFOrdRestsSSPanel.add(mCliMRestFOrdRestsLabel);\r\n//        norteMCliMRestFOrdRestsSubPanel.add(norteMCliMRestFOrdRestsSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMRestFOrdRestsSubPanel.add(ptEnMCliMRestFOrdRestsButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMRestFOrdRestsSSPanel = new JPanel();\r\n//        centroMCliMRestFOrdRestsSSPanel.setLayout(new GridLayout(8, 1));\r\n//        centroMCliMRestFOrdRestsSubPanel.add(centroMCliMRestFOrdRestsSSPanel);\r\n//\r\n//        centroMCliMRestFOrdRestsSSPanel.add(fMCliMRestFOrdRestsLabel);\r\n//        centroMCliMRestFOrdRestsSSPanel.add(fhoraFMCliMRestFOrdRestsButton);\r\n//        centroMCliMRestFOrdRestsSSPanel.add(fLotMCliMRestFOrdRestsButton);\r\n//        centroMCliMRestFOrdRestsSSPanel.add(fCidCliMRestFOrdRestsButton);\r\n//        centroMCliMRestFOrdRestsSSPanel.add(fOrdMCliMRestsFOrdRestLabel);\r\n//        centroMCliMRestFOrdRestsSSPanel.add(fOrdPontCliMRestFOrdRestsButton);\r\n//        centroMCliMRestFOrdRestsSSPanel.add(fOrdValoresMCliMRestFOrdRestsButton);\r\n//\r\n//        sulMCliMRestFOrdRestsSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMRestFOrdRestsSubPanel.add(voltarMCliMRestsFOrdRestButton);\r\n//\r\n//        fhoraFMCliMRestFOrdRestsButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFRESTHFUNC_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        fLotMCliMRestFOrdRestsButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFRESTLOT_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        fCidCliMRestFOrdRestsButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFRESTCID_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        fOrdPontCliMRestFOrdRestsButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFRESTPONT_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        fOrdValoresMCliMRestFOrdRestsButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTVALOR_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        voltarMCliMRestsFOrdRestButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//    }\r\n//\r\n//    //////MENU RESTAURANTE – RESTAURANTES – FILTRAR POR PONTUAÇÃO//////////\r\n//    private void construirPanelMCliMRestFRestPont(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestPontSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMRestFRestPontSubPanel = new JPanel();\r\n//        norteMCliMRestFRestPontSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMRestFRestPontSubPanel = new JPanel();\r\n//        JPanel sulMCliMRestFRestPontSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMRestsFRestPontLabel = new JLabel(\"MENU CLIENTE - PESQUISAR RESTAURANTES\");\r\n//        JLabel mCliMRestFRestPontLabel = new JLabel(\"PONTUAÇÃO\");\r\n//\r\n//        JCheckBox umMCliMRestFRestPont = new JCheckBox(\"1 - Péssimo\");\r\n//        umMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox doisMCliMRestFRestPont = new JCheckBox(\"2 - Ruim\");\r\n//        doisMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox tresMCliMRestFRestPont = new JCheckBox(\"3 - Regular\");\r\n//        tresMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox quatroMCliMRestFRestPont = new JCheckBox(\"4 - Bom\");\r\n//        quatroMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox cincoMCliMRestFRestPont = new JCheckBox(\"5 - Muito Bom\");\r\n//        cincoMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);\r\n//\r\n//        JButton ptEnMCliMRestFRestPontButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMRestFRestPontButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retonarMCliMRestFRestPontButton = new JButton(\"VOLTAR\");\r\n//\r\n//        mCliMRestFRestPontSuperPanel.add(norteMCliMRestFRestPontSubPanel, \"North\");\r\n//        mCliMRestFRestPontSuperPanel.add(centroMCliMRestFRestPontSubPanel, \"Center\");\r\n//        mCliMRestFRestPontSuperPanel.add(sulMCliMRestFRestPontSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMRestFRestPontSSPanel = new JPanel();\r\n//        norteMCliMRestFRestPontSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMRestFRestPontSSPanel.add(mCliMRestsFRestPontLabel);\r\n//        norteMCliMRestFRestPontSubPanel.add(norteMCliMRestFRestPontSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMRestFRestPontSubPanel.add(ptEnMCliMRestFRestPontButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMRestFRestPontSSPanel = new JPanel();\r\n//        centroMCliMRestFRestPontSSPanel.setLayout(new GridLayout(6, 1));\r\n//        centroMCliMRestFRestPontSubPanel.add(centroMCliMRestFRestPontSSPanel);\r\n//\r\n//        centroMCliMRestFRestPontSSPanel.add(mCliMRestFRestPontLabel);\r\n//        centroMCliMRestFRestPontSSPanel.add(umMCliMRestFRestPont);\r\n//        centroMCliMRestFRestPontSSPanel.add(doisMCliMRestFRestPont);\r\n//        centroMCliMRestFRestPontSSPanel.add(tresMCliMRestFRestPont);\r\n//        centroMCliMRestFRestPontSSPanel.add(quatroMCliMRestFRestPont);\r\n//        centroMCliMRestFRestPontSSPanel.add(cincoMCliMRestFRestPont);\r\n//\r\n//        sulMCliMRestFRestPontSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMRestFRestPontSubPanel.add(voltarMCliMRestFRestPontButton);\r\n//        sulMCliMRestFRestPontSubPanel.add(retonarMCliMRestFRestPontButton);\r\n//\r\n//        umMCliMRestFRestPont.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        doisMCliMRestFRestPont.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        tresMCliMRestFRestPont.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        quatroMCliMRestFRestPont.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        cincoMCliMRestFRestPont.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        retonarMCliMRestFRestPontButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        voltarMCliMRestFRestPontButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//\r\n//    }\r\n//\r\n//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS – VALORES MÉDIOS DOS PRATOS//////////\r\n//    private void construirPanelMCliMRestFOrdRestValor(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMRestFOrdRestValorSubPanel = new JPanel();\r\n//        norteMCliMRestFOrdRestValorSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMRestFOrdRestValorSubPanel = new JPanel();\r\n//        JPanel sulMCliMRestFOrdRestValorSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMRestFOrdRestsValorLabel = new JLabel(\"MENU CLIENTE - PESQUISAR RESTAURANTES\");\r\n//        JLabel mCliMRestFOrdRestValorLabel = new JLabel(\"VALORES MÉDIOS DOS PRATOS\");\r\n//\r\n//        JRadioButton fOrdValoresCartaMCliMRestFOrdRestValorRButton = new JRadioButton(\"CARTA\");\r\n//        JRadioButton fOrdValoresPDiaMCliMRestFOrdRestValorRButton = new JRadioButton(\"PRATOS DO DIA\");\r\n//\r\n//        ButtonGroup group = new ButtonGroup();\r\n//        group.add(fOrdValoresCartaMCliMRestFOrdRestValorRButton);\r\n//        group.add(fOrdValoresPDiaMCliMRestFOrdRestValorRButton);\r\n//\r\n//        JButton ptEnMCliMRestFOrdRestValorButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMRestFOrdRestValorutton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMRestFOrdRestValorButton = new JButton(\"VOLTAR\");\r\n//\r\n//        mCliMRestFOrdRestValorSuperPanel.add(norteMCliMRestFOrdRestValorSubPanel, \"North\");\r\n//        mCliMRestFOrdRestValorSuperPanel.add(centroMCliMRestFOrdRestValorSubPanel, \"Center\");\r\n//        mCliMRestFOrdRestValorSuperPanel.add(sulMCliMRestFOrdRestValorSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMRestFOrdRestValorSSPanel = new JPanel();\r\n//        norteMCliMRestFOrdRestValorSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMRestFOrdRestValorSSPanel.add(mCliMRestFOrdRestsValorLabel);\r\n//        norteMCliMRestFOrdRestValorSubPanel.add(norteMCliMRestFOrdRestValorSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMRestFOrdRestValorSubPanel.add(ptEnMCliMRestFOrdRestValorButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMRestFOrdRestValorSSPanel = new JPanel();\r\n//        centroMCliMRestFOrdRestValorSSPanel.setLayout(new GridLayout(3, 1));\r\n//        centroMCliMRestFOrdRestValorSubPanel.add(centroMCliMRestFOrdRestValorSSPanel);\r\n//\r\n//        JPanel centroMCliMRestFOrdRestValorSSPanel1 = new JPanel();\r\n//        centroMCliMRestFOrdRestValorSSPanel1.setLayout(new GridBagLayout());\r\n//        centroMCliMRestFOrdRestValorSubPanel.add(centroMCliMRestFOrdRestValorSSPanel1);\r\n//\r\n//        centroMCliMRestFOrdRestValorSSPanel.add(mCliMRestFOrdRestValorLabel);\r\n//        centroMCliMRestFOrdRestValorSSPanel.add(fOrdValoresCartaMCliMRestFOrdRestValorRButton);\r\n//        centroMCliMRestFOrdRestValorSSPanel.add(fOrdValoresPDiaMCliMRestFOrdRestValorRButton);\r\n//\r\n//        sulMCliMRestFOrdRestValorSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMRestFOrdRestValorSubPanel.add(voltarMCliMRestFOrdRestValorutton);\r\n//        sulMCliMRestFOrdRestValorSubPanel.add(retornarMCliMRestFOrdRestValorButton);\r\n//\r\n//\r\n//        fOrdValoresCartaMCliMRestFOrdRestValorRButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTVALORCARTA_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//\r\n//        fOrdValoresPDiaMCliMRestFOrdRestValorRButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTVALORPDIA_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//        retornarMCliMRestFOrdRestValorButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//        voltarMCliMRestFOrdRestValorutton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//    }\r\n//\r\n//\r\n//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTRAR POR VALORES MÉDIOS DOS PRATOS - CARTA//////////\r\n//    private void construirPanelMCliMRestFOrdRestValorCarta(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorCartaSuperPanel) {\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMRestFOrdRestValorCartaSubPanel = new JPanel();\r\n//        norteMCliMRestFOrdRestValorCartaSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMRestFOrdRestValorCartaSubPanel = new JPanel();\r\n//        JPanel sulMCliMRestFOrdRestValorCartaSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMRestFOrdRestsValorCartaLabel = new JLabel(\"MENU CLIENTE - PESQUISAR RESTAURANTES\");\r\n//        JLabel mCliMRestFOrdRestValorCartaLabel = new JLabel(\"VALORES MÉDIOS DOS PRATOS - CARTA\");\r\n//        JCheckBox dezMCliMRestFOrdRestValorCartaCBox = new JCheckBox(\">10€\");\r\n//        dezMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox dezVinteMCliMRestFOrdRestValorCartaCBox = new JCheckBox(\"10€-20€\");\r\n//        dezVinteMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox vinteTrintaMCliMRestFOrdRestValorCartaCBox = new JCheckBox(\"20€-30€\");\r\n//        vinteTrintaMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox trintaQuarentaMCliMRestFOrdRestValorCartaCBox = new JCheckBox(\"30€-40€\");\r\n//        trintaQuarentaMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox quarentaMaisMCliMRestFOrdRestValorCartaCBox = new JCheckBox(\"<40€\");\r\n//        quarentaMaisMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);\r\n//\r\n//        JButton ptEnMCliMRestFOrdRestValorCartaButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMRestFOrdRestValorCartaButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMRestFOrdRestValorCartaButton = new JButton(\"VOLTAR\");\r\n//\r\n//\r\n//        mCliMRestFOrdRestValorCartaSuperPanel.add(norteMCliMRestFOrdRestValorCartaSubPanel, \"North\");\r\n//        mCliMRestFOrdRestValorCartaSuperPanel.add(centroMCliMRestFOrdRestValorCartaSubPanel, \"Center\");\r\n//        mCliMRestFOrdRestValorCartaSuperPanel.add(sulMCliMRestFOrdRestValorCartaSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMRestFOrdRestValorCartaSSPanel = new JPanel();\r\n//        norteMCliMRestFOrdRestValorCartaSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMRestFOrdRestValorCartaSSPanel.add(mCliMRestFOrdRestsValorCartaLabel);\r\n//        norteMCliMRestFOrdRestValorCartaSubPanel.add(norteMCliMRestFOrdRestValorCartaSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMRestFOrdRestValorCartaSubPanel.add(ptEnMCliMRestFOrdRestValorCartaButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMRestFOrdRestValorCartaSSPanel = new JPanel();\r\n//        centroMCliMRestFOrdRestValorCartaSSPanel.setLayout(new GridLayout(1, 2));\r\n//        centroMCliMRestFOrdRestValorCartaSubPanel.add(centroMCliMRestFOrdRestValorCartaSSPanel);\r\n//\r\n//        JPanel centroMCliMRestFOrdRestValorCartaSSPanel1 = new JPanel();\r\n//        centroMCliMRestFOrdRestValorCartaSSPanel1.setLayout(new GridBagLayout());\r\n//        centroMCliMRestFOrdRestValorCartaSubPanel.add(centroMCliMRestFOrdRestValorCartaSSPanel1);\r\n//\r\n//        centroMCliMRestFOrdRestValorCartaSSPanel.add(mCliMRestFOrdRestValorCartaLabel);\r\n//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(dezMCliMRestFOrdRestValorCartaCBox);\r\n//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(dezVinteMCliMRestFOrdRestValorCartaCBox);\r\n//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(vinteTrintaMCliMRestFOrdRestValorCartaCBox);\r\n//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(trintaQuarentaMCliMRestFOrdRestValorCartaCBox);\r\n//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(quarentaMaisMCliMRestFOrdRestValorCartaCBox);\r\n//\r\n//        sulMCliMRestFOrdRestValorCartaSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMRestFOrdRestValorCartaSubPanel.add(voltarMCliMRestFOrdRestValorCartaButton);\r\n//        sulMCliMRestFOrdRestValorCartaSubPanel.add(retornarMCliMRestFOrdRestValorCartaButton);\r\n//\r\n//        dezMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        dezVinteMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        vinteTrintaMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        trintaQuarentaMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        quarentaMaisMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        retornarMCliMRestFOrdRestValorCartaButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        voltarMCliMRestFOrdRestValorCartaButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//    }\r\n//\r\n//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTRAR POR VALORES MÉDIOS DOS PRATOS – PRATO DO DIA//////////\r\n//    private void construirPanelMCliMRestFOrdRestValorPDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorPDiaSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();\r\n//        norteMCliMRestFOrdRestValorPDiaSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();\r\n//        JPanel sulMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();\r\n//        JLabel mCliMRestFOrdRestsValorPDiaLabel = new JLabel(\"MENU CLIENTE - PESQUISAR RESTAURANTES\");\r\n//        JLabel mCliMRestFOrdRestValorMedPDiaLabel = new JLabel(\"VALORES MÉDIOS DOS PRATOS – PRATO DO DIA\");\r\n//\r\n//        JCheckBox dezMCliMRestFOrdRestValorPDiaCBox = new JCheckBox(\">10€\");\r\n//        dezMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox dezVinteMCliMRestFOrdRestValorPDiaCBox = new JCheckBox(\"10€-20€\");\r\n//        dezVinteMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox vinteTrintaMCliMRestFOrdRestValorPDiaCBox = new JCheckBox(\"20€-30€\");\r\n//        vinteTrintaMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox trintaQuarentaMCliMRestFOrdRestValorPDiaCBox = new JCheckBox(\"30€-40€\");\r\n//        trintaQuarentaMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox quarentaMaisMCliMRestFOrdRestValorPDiaCBox = new JCheckBox(\"<40€\");\r\n//        quarentaMaisMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);\r\n//\r\n//        JButton ptEnMCliMRestFOrdRestValorPDiaButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMRestFOrdRestValorPDiaButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMRestFOrdRestValorPDiaButton = new JButton(\"VOLTAR\");\r\n//\r\n//        mCliMRestFOrdRestValorPDiaSuperPanel.add(norteMCliMRestFOrdRestValorPDiaSubPanel, \"North\");\r\n//        mCliMRestFOrdRestValorPDiaSuperPanel.add(centroMCliMRestFOrdRestValorPDiaSubPanel, \"Center\");\r\n//        mCliMRestFOrdRestValorPDiaSuperPanel.add(sulMCliMRestFOrdRestValorPDiaSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMRestFOrdRestValorPDiaSSPanel = new JPanel();\r\n//        norteMCliMRestFOrdRestValorPDiaSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMRestFOrdRestValorPDiaSSPanel.add(mCliMRestFOrdRestsValorPDiaLabel);\r\n//        norteMCliMRestFOrdRestValorPDiaSubPanel.add(norteMCliMRestFOrdRestValorPDiaSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMRestFOrdRestValorPDiaSubPanel.add(ptEnMCliMRestFOrdRestValorPDiaButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMRestFOrdRestValorPDiaSSPanel = new JPanel();\r\n//        centroMCliMRestFOrdRestValorPDiaSSPanel.setLayout(new GridLayout(1, 2));\r\n//        centroMCliMRestFOrdRestValorPDiaSubPanel.add(centroMCliMRestFOrdRestValorPDiaSSPanel);\r\n//\r\n//        JPanel centroMCliMRestFOrdRestValorPDiaSSPanel1 = new JPanel();\r\n//        centroMCliMRestFOrdRestValorPDiaSSPanel1.setLayout(new GridBagLayout());\r\n//        centroMCliMRestFOrdRestValorPDiaSubPanel.add(centroMCliMRestFOrdRestValorPDiaSSPanel1);\r\n//\r\n//        centroMCliMRestFOrdRestValorPDiaSSPanel.add(mCliMRestFOrdRestValorMedPDiaLabel);\r\n//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(dezMCliMRestFOrdRestValorPDiaCBox);\r\n//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(dezVinteMCliMRestFOrdRestValorPDiaCBox);\r\n//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(vinteTrintaMCliMRestFOrdRestValorPDiaCBox);\r\n//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(trintaQuarentaMCliMRestFOrdRestValorPDiaCBox);\r\n//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(quarentaMaisMCliMRestFOrdRestValorPDiaCBox);\r\n//\r\n//        sulMCliMRestFOrdRestValorPDiaSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMRestFOrdRestValorPDiaSubPanel.add(voltarMCliMRestFOrdRestValorPDiaButton);\r\n//        sulMCliMRestFOrdRestValorPDiaSubPanel.add(retornarMCliMRestFOrdRestValorPDiaButton);\r\n//\r\n//        dezMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        dezVinteMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        vinteTrintaMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        trintaQuarentaMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        quarentaMaisMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        retornarMCliMRestFOrdRestValorPDiaButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//        voltarMCliMRestFOrdRestValorPDiaButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//    }\r\n//\r\n//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS – HORÁRIO DE FUNCIONAMENTO//////////\r\n//    private void construirPanelMCliMRestFRestHFunc(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestHFuncSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMRestFRestHFuncSubPanel = new JPanel();\r\n//        norteMCliMRestFRestHFuncSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMRestFRestHFuncSubPanel = new JPanel();\r\n//        JPanel sulMCliMRestFRestHFuncSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMRestsFRestsHFuncLabel = new JLabel(\"MENU CLIENTE - PESQUISAR RESTAURANTES\");\r\n//        JLabel mCliMRestFRestHFuncLabel = new JLabel(\"HORÁRIOS DE FUNCIONAMENTO\");\r\n//\r\n//        JLabel fHoraMCliMRestFRestHFuncLabel = new JLabel(\"HORA\");\r\n//        JLabel fDataMCliMRestFRestHFuncLabel = new JLabel(\"DATA\");\r\n//\r\n////Calendário\r\n//        UtilDateModel modelMCliMRestFRestHFun = new UtilDateModel();\r\n//\r\n//        ResourceBundle b = ResourceBundle.getBundle(\"Text\");\r\n//\r\n//        Properties p = convertResourceBundleToProperties(b);\r\n//        JDatePanelImpl datePanelMCliMRestFRestHFun = new JDatePanelImpl(modelMCliMRestFRestHFun, p);\r\n//        JDatePickerImpl datePickerMCliMRestFRestHFun = new JDatePickerImpl(datePanelMCliMRestFRestHFun, new DateLabelFormatter());\r\n//\r\n////TODO ver melhor forma de apresentar para conseguir selecionar\r\n//        String[] fHoraMCliMRestFRestHFun = {\"\", \"11h\", \"11h30\", \"12h\", \"12h30\", \"13h\", \"13h30\", \"14h\", \"14h30\", \"15h\", \"15h30\", \"19h\", \"19h30\", \"20h\", \"20h30\", \"21h\", \"21h30\", \"22h\", \"22h30\"};\r\n//        JComboBox arrayfHoraFMCliMRestFRestHFuncJCBox = new JComboBox(fHoraMCliMRestFRestHFun);\r\n//\r\n//        JButton ptEnMCliMRestFRestHFuncButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMRestFRestHFuncButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMRestFRestHFuncButton = new JButton(\"VOLTAR\");\r\n//\r\n//\r\n//        mCliMRestFRestHFuncSuperPanel.add(norteMCliMRestFRestHFuncSubPanel, \"North\");\r\n//        mCliMRestFRestHFuncSuperPanel.add(centroMCliMRestFRestHFuncSubPanel, \"Center\");\r\n//        mCliMRestFRestHFuncSuperPanel.add(sulMCliMRestFRestHFuncSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMRestFRestHFuncSSPanel = new JPanel();\r\n//        norteMCliMRestFRestHFuncSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMRestFRestHFuncSSPanel.add(mCliMRestsFRestsHFuncLabel);\r\n//        norteMCliMRestFRestHFuncSubPanel.add(norteMCliMRestFRestHFuncSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMRestFRestHFuncSubPanel.add(ptEnMCliMRestFRestHFuncButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMRestFRestHFuncSSPanel = new JPanel();\r\n//        centroMCliMRestFRestHFuncSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel);\r\n//\r\n//        JPanel centroMCliMRestFRestHFuncSSPanel1 = new JPanel();\r\n//        centroMCliMRestFRestHFuncSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel1);\r\n//\r\n//        JPanel centroMCliMRestFRestHFuncSSPanel2 = new JPanel();\r\n//        centroMCliMRestFRestHFuncSSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel2);\r\n//\r\n//        JPanel centroMCliMRestFRestHFuncSSPanel3 = new JPanel();\r\n//        centroMCliMRestFRestHFuncSSPanel3.setLayout(new FlowLayout());\r\n//        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel3);\r\n//\r\n//        centroMCliMRestFRestHFuncSSPanel.add(mCliMRestFRestHFuncLabel);\r\n//        centroMCliMRestFRestHFuncSSPanel1.add(fDataMCliMRestFRestHFuncLabel);\r\n//        centroMCliMRestFRestHFuncSSPanel1.add(datePickerMCliMRestFRestHFun);\r\n//        centroMCliMRestFRestHFuncSSPanel2.add(fHoraMCliMRestFRestHFuncLabel);\r\n//        centroMCliMRestFRestHFuncSSPanel2.add(arrayfHoraFMCliMRestFRestHFuncJCBox);\r\n//\r\n//        sulMCliMRestFRestHFuncSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMRestFRestHFuncSubPanel.add(voltarMCliMRestFRestHFuncButton);\r\n//        sulMCliMRestFRestHFuncSubPanel.add(retornarMCliMRestFRestHFuncButton);\r\n//\r\n//        //todo faltar ver botões\r\n//        retornarMCliMRestFRestHFuncButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        voltarMCliMRestFRestHFuncButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//    }\r\n//\r\n//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS - LOTAÇÃO//////////\r\n//    private void construirPanelMCliMRestFRestLot(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestLotSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMRestFRestLotSubPanel = new JPanel();\r\n//        norteMCliMRestFRestLotSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMRestFRestLotSubPanel = new JPanel();\r\n//        JPanel sulMCliMRestFRestLotSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMRestsFRestsLotLabel = new JLabel(\"MENU CLIENTE - PESQUISAR RESTAURANTES\");\r\n//        JLabel mCliMRestFRestLotLabel = new JLabel(\"LOTAÇÃO\");\r\n//        JLabel dataMCliMRestFRestLotLabel = new JLabel(\"DATA\");\r\n//\r\n//        //todo exemplo a verificar (HÁ FORMA MELHOR?)\r\n//        String[] nomeColunasMCliMRestFRestLot = new String[]{\r\n//                \"RESTAURANTE”, “ZONA\", \"TOTAL\", \"DISPONÍVEIS\"\r\n//        };\r\n//\r\n//        Object[][] dadosMCliMRestFRestLot = new Object[][]{\r\n//                {\"RESTAURANTE”, “ZONA\", \"TOTAL\", \"DISPONÍVEIS\"},\r\n//                {\"A\", \"Esplanada\", 20, 5},\r\n//                {\"B\", \"Interior Ñ Fumadores\", 20, 10},\r\n//                {\"C\", \"Interior Fumadores\", 5, 2},\r\n//        };\r\n//\r\n//        //criação da tabela\r\n//        JTable tabelaMCliMRestFRestLot = new JTable(dadosMCliMRestFRestLot, nomeColunasMCliMRestFRestLot);\r\n//\r\n//\r\n////Calendário\r\n//        UtilDateModel modelMCliMRestFRestLot = new UtilDateModel();\r\n//\r\n//        ResourceBundle b = ResourceBundle.getBundle(\"Text\");\r\n//\r\n//        Properties p = convertResourceBundleToProperties(b);\r\n//        JDatePanelImpl datePanelMCliMRestFRestLot = new JDatePanelImpl(modelMCliMRestFRestLot, p);\r\n//        JDatePickerImpl datePickerMCliMRestFRestLot = new JDatePickerImpl(datePanelMCliMRestFRestLot, new DateLabelFormatter());\r\n//\r\n//        //todo verificar porque não deu certo\r\n//        JComboBox fLotCliMRestFRestLotJCBox = new JComboBox();\r\n//        for (int i = 1; i <= 50; i++) {\r\n//            fLotCliMRestFRestLotJCBox.addItem(i);\r\n//        }\r\n//\r\n//        JButton ptEnMCliMRestFRestLotButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMRestFRestLotButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMRestFRestLotButton = new JButton(\"VOLTAR\");\r\n//\r\n//        mCliMRestFRestLotSuperPanel.add(norteMCliMRestFRestLotSubPanel, \"North\");\r\n//        mCliMRestFRestLotSuperPanel.add(centroMCliMRestFRestLotSubPanel, \"Center\");\r\n//        mCliMRestFRestLotSuperPanel.add(sulMCliMRestFRestLotSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMRestFRestLotSSPanel = new JPanel();\r\n//        norteMCliMRestFRestLotSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMRestFRestLotSSPanel.add(mCliMRestsFRestsLotLabel);\r\n//        norteMCliMRestFRestLotSubPanel.add(norteMCliMRestFRestLotSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMRestFRestLotSubPanel.add(ptEnMCliMRestFRestLotButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMRestFRestLotSSPanel = new JPanel();\r\n//        centroMCliMRestFRestLotSSPanel.setLayout(new GridLayout(4, 2));\r\n//        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel);\r\n//\r\n//        JPanel centroMCliMRestFRestLotSSPanel1 = new JPanel();\r\n//        centroMCliMRestFRestLotSSPanel1.setLayout(new GridBagLayout());\r\n//        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel1);\r\n//\r\n//        JPanel centroMCliMRestFRestLotSSPanel2 = new JPanel();\r\n//        centroMCliMRestFRestLotSSPanel2.setLayout(new GridBagLayout());\r\n//        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel2);\r\n//\r\n//        centroMCliMRestFRestLotSSPanel.add(mCliMRestFRestLotLabel);\r\n//        centroMCliMRestFRestLotSSPanel1.add(dataMCliMRestFRestLotLabel);\r\n//        centroMCliMRestFRestLotSSPanel1.add(datePickerMCliMRestFRestLot);\r\n//        centroMCliMRestFRestLotSSPanel2.add(tabelaMCliMRestFRestLot);\r\n//\r\n//        sulMCliMRestFRestLotSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMRestFRestLotSubPanel.add(voltarMCliMRestFRestLotButton);\r\n//        sulMCliMRestFRestLotSubPanel.add(retornarMCliMRestFRestLotButton);\r\n//\r\n//        retornarMCliMRestFRestLotButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        voltarMCliMRestFRestLotButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//    }\r\n//\r\n//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS - CIDADE//////////\r\n//    private void construirPanelMCliMRestFRestCid(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestCidSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMRestFRestCidSubPanel = new JPanel();\r\n//        norteMCliMRestFRestCidSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMRestFRestCidSubPanel = new JPanel();\r\n//        JPanel sulMCliMRestFRestCidSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMRestsFRestsCidLabel = new JLabel(\"MENU CLIENTE - PESQUISAR RESTAURANTES\");\r\n//        JLabel mCliMRestFRestCidLabel = new JLabel(\"CIDADE\");\r\n//\r\n//        JCheckBox coimbraMCliMRestFOrdRestJCBox = new JCheckBox(\"Coimbra\");\r\n//        coimbraMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox portoMCliMRestFOrdRestJCBox = new JCheckBox(\"Porto\");\r\n//        portoMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox lisboaMCliMRestFOrdRestJCBox = new JCheckBox(\"Lisboa\");\r\n//        lisboaMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox guimaraesMCliMRestFOrdRestJCBox = new JCheckBox(\"Guimarães\");\r\n//        guimaraesMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox bragaMCliMRestFOrdRestJCBox = new JCheckBox(\"Braga\");\r\n//        bragaMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);\r\n//        JCheckBox vilaDoCondeMCliMRestFOrdRestJCBox = new JCheckBox(\"Vila do Conde\");\r\n//        vilaDoCondeMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);\r\n//\r\n//        JButton ptEnMCliMRestFRestCidButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMRestFRestCidButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMRestFRestCidButton = new JButton(\"VOLTAR\");\r\n//\r\n//        mCliMRestFRestCidSuperPanel.add(norteMCliMRestFRestCidSubPanel, \"North\");\r\n//        mCliMRestFRestCidSuperPanel.add(centroMCliMRestFRestCidSubPanel, \"Center\");\r\n//        mCliMRestFRestCidSuperPanel.add(sulMCliMRestFRestCidSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMRestFRestCidSSPanel = new JPanel();\r\n//        norteMCliMRestFRestCidSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMRestFRestCidSSPanel.add(mCliMRestsFRestsCidLabel);\r\n//        norteMCliMRestFRestCidSubPanel.add(norteMCliMRestFRestCidSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMRestFRestCidSubPanel.add(ptEnMCliMRestFRestCidButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMRestFRestCidSSPanel = new JPanel();\r\n//        centroMCliMRestFRestCidSSPanel.setLayout(new GridLayout(8, 2));\r\n//        centroMCliMRestFRestCidSubPanel.add(centroMCliMRestFRestCidSSPanel);\r\n//\r\n//        centroMCliMRestFRestCidSSPanel.add(mCliMRestFRestCidLabel);\r\n//        centroMCliMRestFRestCidSSPanel.add(coimbraMCliMRestFOrdRestJCBox);\r\n//        centroMCliMRestFRestCidSSPanel.add(portoMCliMRestFOrdRestJCBox);\r\n//        centroMCliMRestFRestCidSSPanel.add(lisboaMCliMRestFOrdRestJCBox);\r\n//        centroMCliMRestFRestCidSSPanel.add(bragaMCliMRestFOrdRestJCBox);\r\n//        centroMCliMRestFRestCidSSPanel.add(guimaraesMCliMRestFOrdRestJCBox);\r\n//        centroMCliMRestFRestCidSSPanel.add(vilaDoCondeMCliMRestFOrdRestJCBox);\r\n//\r\n//        sulMCliMRestFRestCidSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMRestFRestCidSubPanel.add(voltarMCliMRestFRestCidButton);\r\n//        sulMCliMRestFRestCidSubPanel.add(retornarMCliMRestFRestCidButton);\r\n//\r\n//        coimbraMCliMRestFOrdRestJCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        portoMCliMRestFOrdRestJCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        lisboaMCliMRestFOrdRestJCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//        bragaMCliMRestFOrdRestJCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//        guimaraesMCliMRestFOrdRestJCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//        vilaDoCondeMCliMRestFOrdRestJCBox.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        retornarMCliMRestFRestCidButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//        voltarMCliMRestFRestCidButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//    }\r\n//\r\n//\r\n//    //todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK\r\n////////MENU CLIENTE – CONSULTAR COMENTÁRIOS MENU//////////\r\n//\r\n//private void construirPanelMCliMCom(Interface janela, Container contentor, JPanel\r\n//        loginSuperPanel, JPanel MCliMComSuperPanel) {\r\n//\r\n//\r\n//    /////SUBPAINEIS//////\r\n//    JPanel norteMCliMComSubPanel = new JPanel();\r\n//    norteMCliMComSubPanel.setLayout(new BorderLayout());\r\n//    JPanel centroMCliMComSubPanel = new JPanel();\r\n//    JPanel sulMCliMComSubPanel = new JPanel();\r\n//\r\n//    JLabel mCliMComLabel = new JLabel(\"MENU CLIENTE - CONSULTAR COMENTÁRIOS:\");\r\n//\r\n//    JRadioButton mCliMComFPPRButton = new JRadioButton(\"PRÓPRIOS\");\r\n//JRadioButton mCliMComFCliRButton = new JRadioButton(\"CLIENTE ESPECÍFICO\");\r\n//JRadioButton mCliMComFRestRButton = new JRadioButton(\"RESTAURANTE ESPECÍFICO\");\r\n//JRadioButton mCliMComFIDRButton = new JRadioButton(\"INTERVALO DE DATAS\");\r\n//\r\n//\r\n//\r\n//\r\n//        ButtonGroup group = new ButtonGroup();\r\n//       group.add(mCliMComFPPRButton);\r\n//        group.add(mCliMComFCliRButton);\r\n//group.add (mCliMComFRestRButton);\r\n//group.add (mCliMComFIDRButton);\r\n//\r\n//\r\n//    //JTextField mCliMComFCliText = new JTextField(17);\r\n//    //JTextField mCliFComRestText = new JTextField(17);\r\n//\r\n//\r\n//JButton ptEnMCliMComButton = new JButton(\"PT/EN\");\r\n//    JButton voltarMCliMComButton = new JButton(\"MENU CLIENTE\");\r\n//    //JButton okMCliMComButton = new JButton(\"OK\");\r\n//\r\n//    mCliMComSuperPanel.add(norteMCliMComSubPanel, \"North\");\r\n//    mCliMComSuperPanel.add(centroMCliMComSubPanel, \"Center\");\r\n//    mCliMComSuperPanel.add(sulMCliMComSubPanel, \"South\");\r\n//\r\n//    JPanel norteMCliMComSSPanel = new JPanel();\r\n//    norteMCliMComSSPanel.setLayout(new FlowLayout());\r\n//    norteMCliMComSSPanel.add(mCliMComLabel);\r\n//    norteMCliMComSubPanel.add(norteMCliMComSSPanel, BorderLayout.CENTER);\r\n//    norteMCliMComSubPanel.add(ptEnMCliMComButton, BorderLayout.EAST);\r\n//\r\n//    JPanel centroMCliMComSSPanel = new JPanel();\r\n//    centroMCliMComSSPanel.setLayout(new FlowLayout());\r\n//    centroMCliMComSubPanel.add(centroMCliMComSSPanel, BorderLayout.WEST);\r\n//\r\n//    JPanel centroMCliMComSSPanel1 = new JPanel();\r\n//    centroMCliMComSSPanel1.setLayout(new FlowLayout());\r\n//    centroMCliMComSubPanel.add(centroMCliMComSSPanel1, BorderLayout.WEST);\r\n//\r\n//    JPanel centroMCliMComSSPanel2 = new JPanel();\r\n//    centroMCliMComSSPanel2.setLayout(new FlowLayout());\r\n//    centroMCliMComSubPanel.add(centroMCliMComSSPanel2, BorderLayout.WEST);\r\n//\r\n//    JPanel centroMCliMComSSPanel3 = new JPanel();\r\n//    centroMCliMComSSPanel3.setLayout(new FlowLayout());\r\n//    centroMCliMComSubPanel.add(centroMCliMComSSPanel3, BorderLayout.WEST);\r\n//\r\n//    JPanel centroMCliMComSSPanel4 = new JPanel();\r\n//    centroMCliMComSSPanel4.setLayout(new FlowLayout());\r\n//    centroMCliMComSubPanel.add(centroMCliMComSSPanel4, BorderLayout.CENTER);\r\n//\r\n//\r\n//centroMCliMComSSPanel.add(mCliMComFPPRButton);\r\n//centroMCliMComSSPanel.add(mCliMComFCliRButton);\r\n//centroMCliMComSSPanel.add(mCliMComFRestRButton);\r\n//centroMCliMComSSPanel.add(mCliMComFIDRButton);\r\n//\r\n//        sulMCliMComSubPanel.setLayout(new FlowLayout());\r\n//    sulMCliMComSubPanel.add(voltarMCliMComButton);\r\n//    //sulMCliMComSubPanel.add(okMCliMComButton);\r\n//\r\n//mCliMComFPPRButton.addActionListener(a -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//    });\r\n//\r\n//mCliMComFCliRButton.addActionListener(a -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//    });\r\n//\r\n//mCliMComFRestRButton.addActionListener(a -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//    });\r\n//\r\n//mCliMComFIDRButton.addActionListener(a -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//    });\r\n//\r\n//\r\n//    voltarMCliMComButton.addActionListener(a -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//    });\r\n//\r\n//sobras\r\n//centroMCliMComSSPanel.add(mCliMComLabel);\r\n//    centroMCliMComSSPanel.add(tabelaMCliFCom);\r\n//\r\n//    centroMCliMComSSPanel1.add(mCliFComCliLabel);\r\n//    centroMCliMComSSPanel1.add(mCliFComCliText);\r\n//\r\n//    centroMCliMComSSPanel1.add(mCliFComRestLabel);\r\n//    centroMCliMComSSPanel1.add(mCliFComRestText);\r\n//\r\n//    centroMCliMComSSPanel2.add(mCliFComDatasLabel);\r\n//    centroMCliMComSSPanel3.add(mCliMComLabel);\r\n//    centroMCliMComSSPanel3.add(datePicker4);\r\n//    centroMCliMComSSPanel3.add(mCliMComAteLabel);\r\n//    centroMCliMComSSPanel3.add(datePicker5);\r\n//\r\n//\r\n//   //todo ver os encaminhamentos para responder comentário\r\n//    okMCliMComButton.addActionListener(e -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, LOGIN_CARD);\r\n//        this.setSize(500, 180);\r\n//    });\r\n//\r\n//}\r\n\r\n//////MENU CLIENTE – CONSULTAR COMENTÁRIOS – COMENTÁRIOS PRÓPRIOS//////////\r\n//\r\n//private void construirPanelMCliMComFPP(Interface janela, Container contentor, JPanel\r\n//        loginSuperPanel, JPanel MCliMComFPPSuperPanel){\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMComFPPSubPanel=new JPanel();\r\n//        norteMCliMComFPPSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMComFPPSubPanel=new JPanel();\r\n//        JPanel sulMCliMComFPPSubPanel=new JPanel();\r\n//\r\n//        JLabel mCliMComsFPPLabel=new JLabel(\"MENU CLIENTE - CONSULTAR:\");\r\n//        JLabel mCliMComFPPLabel=new JLabel(\"COMENTÁRIOS PRÓPRIOS\");\r\n//\r\n//        JLabel idMCliMComFPPLabel=new JLabel();\r\n//\r\n//        String[]idMCliMComFPPCBox={\"\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"};\r\n////        JComboBox arrayIdMCliMComFPP CBox = new JComboBox(idMCliMComFPPCBox);\r\n//\r\n////todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, editar e cancelar\r\n//        String[]nomeColunasMCliMComFPP=new String[]{\r\n//        \"ID\",\"DATA\",\"RESTAURNATE\"\r\n//        };\r\n//\r\n//        Object[][]dadosMCliMComFPP=new Object[][]{\r\n//        {\"ID\",\"DATA\",\"RESTAURANTE\"},\r\n//        {1,\"dd/MM/yyy\",\"A\"},\r\n//        {2,\"dd/MM/yyy\",\"B\"},\r\n//        {3,\"dd/MM/yyy\",\"C\"},\r\n//        };\r\n//        //criação da tabela\r\n//        JTable tabelaMCliMComFPP=new JTable(dados,nomeColunasMCliResAct);\r\n//\r\n//        JRadioButton apagarMCliMComFPPButton=new JRadioButton(\"APAGAR\");\r\n//        JRadioButton editarMCliMComFPPButton=new JRadioButton(\"EDITAR\");\r\n//        JRadioButton visualizarMCliMComFPPButton=new JRadioButton(\"VISUALIZAR\");\r\n//\r\n//        ButtonGroup group=new ButtonGroup();\r\n//        group.add(visualizarMCliMComFPPButton);\r\n//        group.add(editarMCliMComFPPButton);\r\n//        group.add(apagarMCliMComFPPButton);\r\n//\r\n//\r\n//        JButton ptEnMCliMComFPPButton=new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMComFPPButton=new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMComFPPButton=new JButton(\"VOLTAR\");\r\n//\r\n//        mCliMComFPPSuperPanel.add(norteMCliMComSubPanel,\"North\");\r\n//        mCliMComFPPSuperPanel.add(centroMCliMComSubPanel,\"Center\");\r\n//        mCliMComFPPSuperPanel.add(sulMCliMComSubPanel,\"South\");\r\n//\r\n//        JPanel norteMCliMComFPPSSPanel=new JPanel();\r\n//        norteMCliMComFPPSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMComFPPSSPanel.add(mCliMComsFPPLabel);\r\n//        norteMCliMComFPPSubPanel.add(norteMCliMComFPPSSPanel,BorderLayout.CENTER);\r\n//        norteMCliMComFPPSubPanel.add(ptEnMCliMComButton,BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMComFPPSSPanel=new JPanel();\r\n//        centroMCliMComFPPSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel,BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFPPSSPanel1=new JPanel();\r\n//        centroMCliMComFPPSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel1,BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFPPSSPanel2=new JPanel();\r\n//        centroMCliMComFPPSSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel2,BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFPPSSPanel3=new JPanel();\r\n//        centroMCliMComFPPSSPanel3.setLayout(new FlowLayout());\r\n//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel3,BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFPPSSPanel4=new JPanel();\r\n//        centroMCliMComFPPSSPanel4.setLayout(new FlowLayout());\r\n//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel4,BorderLayout.CENTER);\r\n//\r\n//\r\n//        centroMCliMComFPPSSPanel.add(mCliMComFPPLabel);\r\n//        centroMCliMComFPPSSPanel.add(tabelaMCliMComFPP);\r\n//        centroMCliMComFPPSSPanel.add(idMCliMComFPPLabel);\r\n//        centroMCliMComFPPSSPanel.add(idMCliMComFPPCBox);\r\n//\r\n//        centroMCliMComFPPSSPanel.add(visualizarMCliMComFPPButton);\r\n//        centroMCliMComFPPSSPanel.add(editarMCliMComFPPButton);\r\n//        centroMCliMComFPPSSPanel.add(apagarMCliMComFPPButton);\r\n//\r\n//        sulMCliMComFPPSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMComFPPSubPanel.add(voltarMCliMComFPPButton);\r\n//        //sulMCliMComFPPSubPanel.add(retornarMCliMComFPPButton);\r\n//\r\n//        visualizarMCliMComFPPButton.addActionListener(a->{\r\n//        CardLayout cl=(CardLayout)contentor.getLayout();\r\n//        cl.show(contentor,MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);\r\n//        });\r\n//        editarMCliMComFPPButton.addActionListener(a->{\r\n//        CardLayout cl=(CardLayout)contentor.getLayout();\r\n//        cl.show(contentor,MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        apagarMCliMComFPPButton.addActionListener(a->{\r\n//        CardLayout cl=(CardLayout)contentor.getLayout();\r\n//        cl.show(contentor,MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);\r\n//        });\r\n//\r\n//\r\n//        voltarMCliMComFPPButton.addActionListener(a->{\r\n//        CardLayout cl=(CardLayout)contentor.getLayout();\r\n//        cl.show(contentor,MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        retornarMCliMComFPPButton.addActionListener(a->{\r\n//        CardLayout cl=(CardLayout)contentor.getLayout();\r\n//        cl.show(contentor,MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);\r\n//        });\r\n//\r\n//\r\n//        }\r\n//\r\n////todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK\r\n////////MENU CLIENTE – CONSULTAR COMENTÁRIOS – CLIENTE ESPECÍFICO//////////\r\n//\r\n//private void construirPanelMCliMComFCli (Interface janela, Container contentor, JPanel\r\n//        loginSuperPanel, JPanel MCliMComFCliSuperPanel) {\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMComFCliSubPanel = new JPanel();\r\n//        norteMCliMComFCliSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMComFCliSubPanel = new JPanel();\r\n//        JPanel sulMCliMComFCliSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMComFCliLabel = new JLabel(\"MENU CLIENTE - CONSULTAR COMENTÁRIOS:\");\r\n//        JLabel nomeMCliMComFCliLabel = new JLabel(\"NOME DO CLIENTE\");\r\n//\r\n//        JTextField nomeMCliMComFCliText = new JTextField(20);\r\n//\r\n//\r\n//        JButton ptEnMCliMComFClinButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMComFClinButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMComFClinButton = new JButton(\"VOLTAR\");\r\n//        JButton okMCliMComFClinButton = new JButton(\"OK\");\r\n//\r\n//        mCliMComFClinSuperPanel.add(norteMCliMComFClinSubPanel, \"North\");\r\n//        mCliMComFClinSuperPanel.add(centroMCliMComFClinSubPanel, \"Center\");\r\n//        mCliMComFClinSuperPanel.add(sulMCliMComFClinSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMComFClinSSPanel = new JPanel();\r\n//        norteMCliMComFClinSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMComFClinSSPanel.add(mCliMComFCliLabel);\r\n//        norteMCliMComFClinSubPanel.add(norteMCliMComFClinSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMComFClinSubPanel.add(ptEnMCliMComFClinButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMComFClinSSPanel = new JPanel();\r\n//        centroMCliMComFClinSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFClinSSPanel1 = new JPanel();\r\n//        centroMCliMComFClinSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFClinSSPanel2 = new JPanel();\r\n//        centroMCliMComFClinSSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel2, BorderLayout.WEST);\r\n//\r\n//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel4, BorderLayout.CENTER);\r\n//\r\n//\r\n//        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliLabel);\r\n//        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliText);\r\n//\r\n//        sulMCliMComFClinSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMComFClinSubPanel.add(voltarMCliMComFClinButton);\r\n//        sulMCliMComFClinSubPanel.add(retornarMCliMComFClinButton);\r\n//        sulMCliMComFClinSubPanel.add(oknarMCliMComFClinButton);\r\n//\r\n//        voltarMCliMComFClinButton.addActionListener(a -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//        okMCliMComFClinButton.addActionListener(e -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, LOGIN_CARD);\r\n//        this.setSize(500, 180);\r\n//        });\r\n//\r\n//        }\r\n//\r\n////todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK\r\n////////MENU CLIENTE – CONSULTAR COMENTÁRIOS – CLIENTE ESPECÍFICO//////////\r\n//\r\n//private void construirPanelMCliMComFCli (Interface janela, Container contentor, JPanel\r\n//        loginSuperPanel, JPanel MCliMComFCliSuperPanel) {\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMComFCliSubPanel = new JPanel();\r\n//        norteMCliMComFCliSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMComFCliSubPanel = new JPanel();\r\n//        JPanel sulMCliMComFCliSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMComFCliLabel = new JLabel(\"MENU CLIENTE - CONSULTAR COMENTÁRIOS:\");\r\n//        JLabel nomeMCliMComFCliLabel = new JLabel(\"NOME DO CLIENTE\");\r\n//\r\n//        JTextField nomeMCliMComFCliText = new JTextField(20);\r\n//\r\n//\r\n//        JButton ptEnMCliMComFClinButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMComFClinButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMComFClinButton = new JButton(\"VOLTAR\");\r\n//        JButton okMCliMComFClinButton = new JButton(\"OK\");\r\n//\r\n//        mCliMComFClinSuperPanel.add(norteMCliMComFClinSubPanel, \"North\");\r\n//        mCliMComFClinSuperPanel.add(centroMCliMComFClinSubPanel, \"Center\");\r\n//        mCliMComFClinSuperPanel.add(sulMCliMComFClinSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMComFClinSSPanel = new JPanel();\r\n//        norteMCliMComFClinSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMComFClinSSPanel.add(mCliMComFCliLabel);\r\n//        norteMCliMComFClinSubPanel.add(norteMCliMComFClinSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMComFClinSubPanel.add(ptEnMCliMComFClinButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMComFClinSSPanel = new JPanel();\r\n//        centroMCliMComFClinSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFClinSSPanel1 = new JPanel();\r\n//        centroMCliMComFClinSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFClinSSPanel2 = new JPanel();\r\n//        centroMCliMComFClinSSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel2, BorderLayout.WEST);\r\n//\r\n//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel4, BorderLayout.CENTER);\r\n//\r\n//\r\n//        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliLabel);\r\n//        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliText);\r\n//\r\n//        sulMCliMComFClinSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMComFClinSubPanel.add(voltarMCliMComFClinButton);\r\n//        sulMCliMComFClinSubPanel.add(retornarMCliMComFClinButton);\r\n//        sulMCliMComFClinSubPanel.add(oknarMCliMComFClinButton);\r\n//\r\n//        voltarMCliMComFClinButton.addActionListener(a -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//        okMCliMComFClinButton.addActionListener(e -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, LOGIN_CARD);\r\n//        this.setSize(500, 180);\r\n//        });\r\n//\r\n//        }\r\n//\r\n////todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK\r\n////////MENU CLIENTE – CONSULTAR COMENTÁRIOS - RESTAURANTES//////////\r\n//\r\n//private void construirPanelMCliMComFRest (Interface janela, Container contentor, JPanel\r\n//        loginSuperPanel, JPanel MCliMComFRestSuperPanel) {\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMComFRestSubPanel = new JPanel();\r\n//        norteMCliMComFRestSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMComFRestSubPanel = new JPanel();\r\n//        JPanel sulMCliMComFRestSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMComFRestLabel = new JLabel(\"MENU CLIENTE - CONSULTAR COMENTÁRIOS:\");\r\n//        JLabel nomeRestMCliMComFRestLabel = new JLabel(\"NOME DO RESTAURANTE\");\r\n//\r\n//        JTextField nomeResMCliMComFRestText = new JTextField(20);\r\n//\r\n//\r\n//        JButton ptEnMCliMComFRestButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMComFRestButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMComFRestButton = new JButton(\"VOLTAR\");\r\n//        JButton okMCliMComFRestButton = new JButton(\"OK\");\r\n//\r\n//        mCliMComFRestnSuperPanel.add(norteMCliMComFRestnSubPanel, \"North\");\r\n//        mCliMComFRestSuperPanel.add(centroMCliMComFRestSubPanel, \"Center\");\r\n//        mCliMComFRestSuperPanel.add(sulMCliMComFRestSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMComFRestSSPanel = new JPanel();\r\n//        norteMCliMComFRestSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMComFRestSSPanel.add(mCliMComFRestLabel);\r\n//        norteMCliMComFRestSubPanel.add(norteMCliMComFRestSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMComFRestSubPanel.add(ptEnMCliMComFRestButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMComFRestSSPanel = new JPanel();\r\n//        centroMCliMComFRestSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliMComFRestSubPanel.add(centroMCliMComFRestSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFRestSSPanel1 = new JPanel();\r\n//        centroMCliMComFRestSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliMComFRestSubPanel.add(centroMCliMComFRestSSPanel1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFRestSSPanel2 = new JPanel();\r\n//        centroMCliMComFRestSSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliMComFRestSubPanel.add(centroMCliMComFRestSSPanel2, BorderLayout.WEST);\r\n//\r\n//        centroMCliMComFRestSubPanel.add(centroMCliMComFRestSSPanel4, BorderLayout.CENTER);\r\n//\r\n//\r\n//        centroMCliMComFRestSSPanel.add(nomeRestMCliMComFRestLabel);\r\n//        centroMCliMComFRestSSPanel.add(nomeRestMCliMComFRestText);\r\n//\r\n//        sulMCliMComFRestSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMComFRestSubPanel.add(voltarMCliMComFRestButton);\r\n//        sulMCliMComFRestSubPanel.add(okMCliMComFRestButton);\r\n//\r\n//        voltarMCliMComFRestButton.addActionListener(a -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//        okMCliMComFRestButton.addActionListener(e -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, LOGIN_CARD);\r\n//        this.setSize(500, 180);\r\n//        });\r\n//\r\n//        }\r\n//\r\n////////MENU CLIENTE – CONSULTAR COMENTÁRIOS - RESTAURANTES//////////\r\n//\r\n//private void construirPanelMCliMComFID (Interface janela, Container contentor, JPanel\r\n//        loginSuperPanel, JPanel MCliMComFIDSuperPanel) {\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliMComFIDSubPanel = new JPanel();\r\n//        norteMCliMComFIDSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliMComFIDSubPanel = new JPanel();\r\n//        JPanel sulMCliMComFIDSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliMComFIDLabel = new JLabel(\"MENU CLIENTE - CONSULTAR COMENTÁRIOS:\");\r\n//        JLabel intervaloDatasMCliMComFIDLabel = new JLabel(\"INTERVALO DE DATAS\");\r\n//        JLabel deMCliMComFIDLabel = new JLabel(\"De\");\r\n//        JLabel ateMCliMComFIDLabel = new JLabel(\"Até\");\r\n//\r\n//\r\n////Adição do calendário\r\n//        UtilDateModel modelMCliMComFID1 = new UtilDateModel();\r\n//        UtilDateModel modelMCliMComFID2 = new UtilDateModel();\r\n//\r\n//        ResourceBundle b = ResourceBundle.getBundle(\"Text\");\r\n//\r\n//        Properties p = convertResourceBundleToProperties(b);\r\n//        JDatePanelImpl datePanelMCliMComFID1 = new JDatePanelImpl(modelMCliMComFID1, p);\r\n//        JDatePickerImpl datePickerMCliMComFID2 = new JDatePickerImpl(datePanelMCliMComFID2, new DateLabelFormatter());\r\n//        JDatePanelImpl datePanelMCliMComFID2 = new JDatePanelImpl(modelMCliMComFID2, p);\r\n//        JDatePickerImpl datePickerMCliMComFID2 = new JDatePickerImpl(datePanelMCliMComFID2, new DateLabelFormatter());\r\n//\r\n//        JButton ptEnMCliMComFIDButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliMComFIDButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliMComFIDButton = new JButton(\"VOLTAR\");\r\n//        JButton okMCliMComFIDButton = new JButton(\"OK\");\r\n//\r\n//        mCliMComFIDnSuperPanel.add(norteMCliMComFIDnSubPanel, \"North\");\r\n//        mCliMComFIDSuperPanel.add(centroMCliMComFIDSubPanel, \"Center\");\r\n//        mCliMComFIDSuperPanel.add(sulMCliMComFIDSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliMComFIDSSPanel = new JPanel();\r\n//        norteMCliMComFIDSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliMComFIDSSPanel.add(mCliMComFIDLabe);\r\n//        norteMCliMComFIDSubPanel.add(norteMCliMComFIDSSPanel, BorderLayout.CENTER);\r\n//        norteMCliMComFIDSubPanel.add(ptEnMCliMComFIDButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliMComFIDSSPanel = new JPanel();\r\n//        centroMCliMComFIDSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFIDSSPanel1 = new JPanel();\r\n//        centroMCliMComFIDSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliMComFIDSSPanel2 = new JPanel();\r\n//        centroMCliMComFIDSSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel2, BorderLayout.WEST);\r\n//\r\n//        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel4, BorderLayout.CENTER);\r\n//\r\n//\r\n//        centroMCliMComFIDSSPanel.add(intervaloDatasMCliMComFIDLabel);\r\n//        centroMCliMComFIDSSPanel.add(deMCliMComFIDLabel);\r\n//        centroMCliMComFIDSSPanel.add(datePickerMCliMComFID1);\r\n//        centroMCliMComFIDSSPanel.add(ateMCliMComFIDLabel);\r\n//        centroMCliMComFIDSSPanel.add(datePickerMCliMComFID2);\r\n//\r\n//        sulMCliMComFIDSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliMComFIDSubPanel.add(voltarMCliMComFIDButton);\r\n//        sulMCliMComFIDSubPanel.add(okMCliMComFIDButton);\r\n//\r\n//        voltarMCliMComFIDButton.addActionListener(a -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, MENUCLIENTE_CARD);\r\n//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//        okMCliMComFIDButton.addActionListener(e -> {\r\n//        CardLayout cl = (CardLayout) contentor.getLayout();\r\n//        cl.show(contentor, LOGIN_CARD);\r\n//        this.setSize(500, 180);\r\n//        });\r\n//\r\n//        }\r\n\r\n//    ////////////////////MENU CLIENTE - ACTUALIZAR DADOS /////////////////////////\r\n//    private void construirPanelMCliAtDados(Interface janela, Container contentor, JPanel\r\n//            loginSuperPanel, JPanel mCliAtDadosSuperPanel) {\r\n//\r\n//        passwordValido = false;\r\n//        confirmarPasswordValido = false;\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteAtDadosMCliSubPanel = new JPanel();\r\n//        norteAtDadosMCliSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroAtDadosMCliSubPanel = new JPanel();\r\n//        JPanel sulAtDadosMCliSubPanel = new JPanel();\r\n//\r\n//        JLabel atDadosMCliLabel = new JLabel(\"ACTUALIZAR DADOS\");\r\n//        atDadosMCliLabel.setForeground(Color.BLUE);\r\n//        JLabel nomeCliMCliLabel = new JLabel(\"Nome\");\r\n//        //nomeCliMCliLabel.setBounds(50,80,100,20);\r\n//        JLabel emailCliMCliLabel = new JLabel(\"E-mail\");\r\n//        JLabel moradaCliMCliLabel = new JLabel(\"Morada\");\r\n//        JLabel telemovelCliMCliLabel = new JLabel(\"Telemóvel\");\r\n//        JLabel usernameCliMCliLabel = new JLabel(\"Username\");\r\n//        JLabel passwordCliMCliLabel = new JLabel(\"Password\");\r\n//        JLabel confirmarPasswordCliMCliLabel = new JLabel(\"Confirmar password: \");\r\n//\r\n//        JTextField nomeCliMCliText = new JTextField(20);\r\n//        nomeCliMCliText.setMargin(new Insets(3, 3, 3, 3));\r\n//        JTextField emailCliMCliText = new JTextField(20);\r\n//        JTextField moradaCliMCliText = new JTextField(20);\r\n//        JTextField telemovelCliMCliText = new JFormattedTextField(mascaraTelemovel);\r\n//        telemovelCliMCliText.setColumns(20);\r\n//        JTextField usernameCliMCliText = new JTextField(20);\r\n//\r\n//        JPasswordField passwordCliMCliField = new JPasswordField(20);\r\n//        passwordCliMCliField.addFocusListener(new FocusListener() {\r\n//            @Override\r\n//            public void focusGained(FocusEvent e) {\r\n//                passwordValido = true;\r\n//            }\r\n//\r\n//            @Override\r\n//            public void focusLost(FocusEvent e) {\r\n//                if (passwordCliMCliField.getPassword().length < 6) {\r\n//                    passwordValido = false;\r\n//                }\r\n//\r\n//            }\r\n//        });\r\n//        JPasswordField confirmarPassawordCliMCliField = new JPasswordField(20);\r\n//        confirmarPassawordCliMCliField.addFocusListener(new FocusListener() {\r\n//            @Override\r\n//            public void focusGained(FocusEvent e) {\r\n//                confirmarPasswordValido = true;\r\n//            }\r\n//\r\n//            @Override\r\n//            public void focusLost(FocusEvent e) {\r\n//                if (!passwordCliMCliField.getPassword().equals(confirmarPassawordCliMCliField.getPassword())) {\r\n//                    confirmarPasswordValido = false;\r\n//                }\r\n//\r\n//            }\r\n//        });\r\n//        JButton ptEnAtDadosMCliButton = new JButton(\"PT/EN\");\r\n//        JButton voltarCliMCliButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton actualizarCliMCliButton = new JButton(\"ACTUALIZAR\");\r\n//\r\n//        mCliAtDadosSuperPanel.add(norteAtDadosMCliSubPanel, \"North\");\r\n//        mCliAtDadosSuperPanel.add(centroAtDadosMCliSubPanel, \"Center\");\r\n//        mCliAtDadosSuperPanel.add(sulAtDadosMCliSubPanel, \"South\");\r\n//\r\n//        JPanel norteAtDadosMCliSSPanel = new JPanel();\r\n//        norteAtDadosMCliSSPanel.setLayout(new FlowLayout());\r\n//        norteAtDadosMCliSSPanel.add(atDadosMCliLabel);\r\n//        norteAtDadosMCliSubPanel.add(norteAtDadosMCliSSPanel, BorderLayout.CENTER);\r\n//        norteAtDadosMCliSubPanel.add(ptEnAtDadosMCliButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroAtDadosMCliSSPanel = new JPanel();\r\n//        centroAtDadosMCliSSPanel.setLayout(new GridLayout(7, 2));\r\n//        centroAtDadosMCliSubPanel.add(centroAtDadosMCliSSPanel);\r\n//        centroAtDadosMCliSSPanel.add(nomeCliMCliLabel);\r\n//        centroAtDadosMCliSSPanel.add(nomeCliMCliText);\r\n//        centroAtDadosMCliSSPanel.add(emailCliMCliLabel);\r\n//        centroAtDadosMCliSSPanel.add(emailCliMCliText);\r\n//        centroAtDadosMCliSSPanel.add(moradaCliMCliLabel);\r\n//        centroAtDadosMCliSSPanel.add(moradaCliMCliText);\r\n//        centroAtDadosMCliSSPanel.add(telemovelCliMCliLabel);\r\n//        centroAtDadosMCliSSPanel.add(telemovelCliMCliText);\r\n//        centroAtDadosMCliSSPanel.add(usernameCliMCliLabel);\r\n//        centroAtDadosMCliSSPanel.add(usernameCliMCliText);\r\n//        centroAtDadosMCliSSPanel.add(passwordCliMCliLabel);\r\n//        centroAtDadosMCliSSPanel.add(passwordCliMCliField);\r\n//        centroAtDadosMCliSSPanel.add(confirmarPasswordCliMCliLabel);\r\n//        centroAtDadosMCliSSPanel.add(confirmarPassawordCliMCliField);\r\n//\r\n//        sulAtDadosMCliSubPanel.setLayout(new FlowLayout());\r\n//        sulAtDadosMCliSubPanel.add(voltarCliMCliButton);\r\n//        sulAtDadosMCliSubPanel.add(actualizarCliMCliButton);\r\n//\r\n//        actualizarCliMCliButton.addActionListener(a -> {\r\n//            if (!passwordValido) {\r\n//                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(), \"Password Inválido: deve conter o mínimo de 6 caracteres!\");\r\n//                passwordCliMCliField.requestFocus();\r\n//                return;\r\n//            }\r\n//            if (!confirmarPasswordValido) {\r\n//                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(), \"Password Inválido: deve ser igual password!\");\r\n//                confirmarPassawordCliMCliField.requestFocus();\r\n//                return;\r\n//            }\r\n//            //TODO faz-se necessário atualizar  método atualizarDados Cliente, retirando o password e criar um novo metodo para atualização de password\r\n//            sistema.atualizarDadosCliente(nomeCliMCliText.getText(),\r\n//                    moradaCliMCliText.getText(),\r\n//                    telemovelCliMCliText.getText(),\r\n//                    emailCliMCliText.getText(),\r\n//                    passwordCliMCliField.getPassword().toString(),\r\n//                    confirmarPassawordCliMCliField.getPassword().toString(),\r\n//                    confirmarPassawordCliMCliField.getPassword().toString());\r\n//        });\r\n//        voltarCliMCliButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//    }\r\n//// todo verificar os botões editar e apagar que estão em conflito com visualizar\r\n//\r\n//    //////MENU CLIENTE – RESERVAS - ACTIVAS//////////\r\n//\r\n//    private void construirPanelMCliResAct(Interface janela, Container contentor, JPanel\r\n//            loginSuperPanel, JPanel mCliResActSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliResActSubPanel = new JPanel();\r\n//        norteMCliResActSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliResActSubPanel = new JPanel();\r\n//        JPanel sulMCliResActSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliTitHistResActLabel = new JLabel(\"MENU CLIENTE - RESERVAS ACTIVAS\");\r\n//        JLabel mCliIdHistResActLabel = new JLabel(\"ID\");\r\n//\r\n//        String[] mCliIdHistResAct = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"};\r\n//        JComboBox arrayMCliIdHistResActCBox = new JComboBox(mCliIdHistResAct);\r\n//\r\n////todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, editar e cancelar\r\n//        String[] nomeColunasMCliResAct = new String[]{\r\n//                \"ID\", \"DATA\", \"RESTAURNATE\"\r\n//        };\r\n//\r\n//        Object[][] dados = new Object[][]{\r\n//                {\"ID\", \"DATA\", \"RESTAURANTE\"},\r\n//                {1, \"dd/MM/yyy\", \"A\"},\r\n//                {2, \"dd/MM/yyy\", \"B\"},\r\n//                {3, \"dd/MM/yyy\", \"C\"},\r\n//        };\r\n//        //criação da tabela\r\n//        JTable tabelaMCliResAct = new JTable(dados, nomeColunasMCliResAct);\r\n//\r\n//        JButton ptEnMCliRestButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliResActButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton visualizarMCliResActButton = new JButton(\"VISUALIZAR\");\r\n//        JButton retonarMCliResActButton = new JButton(\"RETORNAR\");\r\n//\r\n//        JRadioButton editarMCliResActButton = new JRadioButton(\"EDITAR\");\r\n//        JRadioButton apagarMCliResActButton = new JRadioButton(\"APAGAR\");\r\n//\r\n//        ButtonGroup group = new ButtonGroup();\r\n//        group.add(editarMCliResActButton);\r\n//        group.add(apagarMCliResActButton);\r\n//\r\n//        mCliResActSuperPanel.add(norteMCliResActSubPanel, \"North\");\r\n//        mCliResActSuperPanel.add(centroMCliResActSubPanel, \"Center\");\r\n//        mCliResActSuperPanel.add(sulMCliResActSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliResActSSPanel = new JPanel();\r\n//        norteMCliResActSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliResActSSPanel.add(mCliTitHistResActLabel);\r\n//        norteMCliResActSubPanel.add(norteMCliResActSSPanel, BorderLayout.CENTER);\r\n//        norteMCliResActSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliResActSSPanel = new JPanel();\r\n//        centroMCliResActSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliResActSubPanel.add(centroMCliResActSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliResActSSPanel1 = new JPanel();\r\n//        centroMCliResActSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliResActSubPanel.add(centroMCliResActSSPanel1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliResActSSPanel2 = new JPanel();\r\n//        centroMCliResActSSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliResActSubPanel.add(centroMCliResActSSPanel2, BorderLayout.WEST);\r\n//\r\n//        centroMCliResActSSPanel.add(tabelaMCliResAct);\r\n//        centroMCliResActSSPanel1.add(mCliIdHistResActLabel);\r\n//        centroMCliResActSSPanel1.add(arrayMCliIdHistResActCBox);\r\n//        centroMCliResActSSPanel2.add(editarMCliResActButton);\r\n//        centroMCliResActSSPanel2.add(apagarMCliResActButton);\r\n//\r\n//        sulMCliResActSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliResActSubPanel.add(voltarMCliResActButton);\r\n//        sulMCliResActSubPanel.add(retonarMCliResActButton);\r\n//        sulMCliResActSubPanel.add(visualizarMCliResActButton);\r\n//\r\n//\r\n//        visualizarMCliResActButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//\r\n//        });\r\n//\r\n//        editarMCliResActButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        apagarMCliResActButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        retonarMCliResActButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIRESERVAS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        voltarMCliResActButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//    }\r\n//\r\n//    //////MENU CLIENTE – FAZER RESERVAS//////////\r\n//    private void construirPanelMCliFazerRes(Interface janela, Container contentor, JPanel\r\n//            loginSuperPanel, JPanel mCliFazerResSuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliFResSubPanel = new JPanel();\r\n//        norteMCliFResSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliFResSubPanel = new JPanel();\r\n//        JPanel sulMCliFResSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliTitFResLabel = new JLabel(\"MENU CLIENTE - FAZER RESERVAS\");\r\n//        JLabel tipoResMCliFResLabel = new JLabel(\"TIPO DE RESERVA:\");\r\n//        JLabel nomeResMCliFResLabel = new JLabel(\"RESTAURANTE:\");\r\n//\r\n//        JTextField nomeResMCliFResText = new JTextField(25);\r\n//\r\n//        JRadioButton presencialMCliFResRButton = new JRadioButton(\"PRESENCIAL\");\r\n//        JRadioButton takeAwayMCliFResRButton = new JRadioButton(\"TAKE-AWAY\");\r\n//\r\n//        ButtonGroup group = new ButtonGroup();\r\n//        group.add(presencialMCliFResRButton);\r\n//        group.add(takeAwayMCliFResRButton);\r\n//\r\n//        JButton ptEnMCliFResButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliFResButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton retornarMCliFResButton = new JButton(\"VOLTAR\");\r\n//\r\n//        mCliFazerResSuperPanel.add(norteMCliFResSubPanel, \"North\");\r\n//        mCliFazerResSuperPanel.add(centroMCliFResSubPanel, \"Center\");\r\n//        mCliFazerResSuperPanel.add(sulMCliFResSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliFResSSPanel = new JPanel();\r\n//        norteMCliFResSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliFResSSPanel.add(mCliTitFResLabel);\r\n//        norteMCliFResSubPanel.add(norteMCliFResSSPanel, BorderLayout.CENTER);\r\n//        norteMCliFResSubPanel.add(ptEnMCliFResButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliFResSSPanel = new JPanel();\r\n//        centroMCliFResSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliFResSubPanel.add(centroMCliFResSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResSSPanel1 = new JPanel();\r\n//        centroMCliFResSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliFResSubPanel.add(centroMCliFResSSPanel1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResSSPanel2 = new JPanel();\r\n//        centroMCliFResSSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliFResSubPanel.add(centroMCliFResSSPanel2, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResSSPanel3 = new JPanel();\r\n//        centroMCliFResSSPanel3.setLayout(new GridLayout(1, 1));\r\n//        centroMCliFResSubPanel.add(centroMCliFResSSPanel3, BorderLayout.WEST);\r\n//\r\n//        //todo ver como listar o restaurantes\r\n//        centroMCliFResSSPanel1.add(nomeResMCliFResLabel);\r\n//        centroMCliFResSSPanel1.add(nomeResMCliFResText);\r\n//        centroMCliFResSSPanel2.add(tipoResMCliFResLabel);\r\n//        centroMCliFResSSPanel3.add(presencialMCliFResRButton);\r\n//        centroMCliFResSSPanel3.add(takeAwayMCliFResRButton);\r\n//\r\n//        sulMCliFResSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliFResSubPanel.add(voltarMCliFResButton);\r\n//        sulMCliFResSubPanel.add(retornarMCliFResButton);\r\n//\r\n//        presencialMCliFResRButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIFAZERRESP_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        takeAwayMCliFResRButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIFAZERRESTA_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        retornarMCliFResButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIRESERVAS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        voltarMCliFResButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//    }\r\n//\r\n//\r\n//    //////MENU CLIENTE – FAZER RESERVA PRESENCIAL//////////\r\n//    private void construirPanelMCliFazerResP(Interface janela, Container contentor, JPanel\r\n//            loginSuperPanel, JPanel mCliFazerResPSuperPanel) {\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliFResPSubPanel = new JPanel();\r\n//        norteMCliFResPSubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliFResPSubPanel = new JPanel();\r\n//        JPanel sulMCliFResPSubPanel = new JPanel();\r\n//\r\n//        JLabel mCliTitFResPLabel = new JLabel(\"FAZER RESERVAS PRESENCIAL\");\r\n//        JLabel diaMCliFResPLabel = new JLabel(\"DIA\");\r\n//        JLabel horaMCliFResPLabel = new JLabel(\"HORA\");\r\n//        //JLabel horaDeMCliFResPLabel = new JLabel(\"De\");\r\n//        //JLabel horaAteMCliFResPLabel = new JLabel(\"Até\");\r\n//        JLabel qtdePessoasMCliFResPLabel = new JLabel(\"QUANTIDADE DE PESSOAS\");\r\n//        JLabel msgMCliFResPLabel = new JLabel(\"Contatar diretamente o restaurante no caso de reservas para mais de 20 pessoas\");\r\n//\r\n//        String[] horaDeMCliFRes = {\"\", \"11h\", \"11h30\", \"12h\", \"12h30\", \"13h\", \"13h30\", \"14h\", \"14h30\", \"15h\", \"15h30\", \"19h\", \"19h30\", \"20h\", \"20h30\", \"21h\", \"21h30\", \"22h\", \"22h30\"};\r\n//        JComboBox arrayHoraDeMCliFResPCBox = new JComboBox(horaDeMCliFRes);\r\n//\r\n//        //todo verificar se não deve mesmo constar\r\n//        //String [] horaAteMCliFRes = {\"\",\"12h\",\"12h30\",\"13h\",\"13h30\",\"14h\",\"14h30\",\"15h\",\"15h30\",\"19h\",\"19h30\",\"20h\",\"20h30\",\"21h\",\"21h30\",\"22h\",\"22h30\"};\r\n//        //JComboBox arrayHoraAteMCliFResPCBox = new JComboBox(horaAteMCliFRes);\r\n//\r\n//        String[] qtdePessoasMCliFRes = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\"};\r\n//        JComboBox arrayQtdePessoasMCliFResPCBox = new JComboBox(qtdePessoasMCliFRes);\r\n//\r\n//        JButton ptEnMCliFResPButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliFResPButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton confirmarMCliFResPButton = new JButton(\"OK\");\r\n//        JButton retornarMCliFResPButton = new JButton(\"VOLTAR\");\r\n//\r\n//        //Adição do calendário\r\n//        //UtilDateModel model1 = new UtilDateModel();\r\n//        UtilDateModel model6 = new UtilDateModel();\r\n//\r\n//        ResourceBundle b = ResourceBundle.getBundle(\"Text\");\r\n//\r\n//        Properties p = convertResourceBundleToProperties(b);\r\n//        JDatePanelImpl datePanel5 = new JDatePanelImpl(model6, p);\r\n//        JDatePickerImpl datePicker6 = new JDatePickerImpl(datePanel5, new DateLabelFormatter());\r\n//\r\n//        mCliFazerResPSuperPanel.add(norteMCliFResPSubPanel, \"North\");\r\n//        mCliFazerResPSuperPanel.add(centroMCliFResPSubPanel, \"Center\");\r\n//        mCliFazerResPSuperPanel.add(sulMCliFResPSubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliFResSPPSSPanel = new JPanel();\r\n//        norteMCliFResSPPSSPanel.setLayout(new FlowLayout());\r\n//        norteMCliFResSPPSSPanel.add(mCliTitFResPLabel);\r\n//        norteMCliFResPSubPanel.add(norteMCliFResSPPSSPanel, BorderLayout.CENTER);\r\n//        norteMCliFResPSubPanel.add(ptEnMCliFResPButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliFResPSSPanel = new JPanel();\r\n//        centroMCliFResPSSPanel.setLayout(new FlowLayout());\r\n//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResPSSPanel1 = new JPanel();\r\n//        centroMCliFResPSSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResPSSPanel2 = new JPanel();\r\n//        centroMCliFResPSSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel2, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResPSSPanel3 = new JPanel();\r\n//        centroMCliFResPSSPanel3.setLayout(new GridLayout(1, 1));\r\n//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel3, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResPSSPanel4 = new JPanel();\r\n//        centroMCliFResPSSPanel4.setLayout(new FlowLayout());\r\n//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel4, BorderLayout.WEST);\r\n//\r\n//        centroMCliFResPSSPanel.add(diaMCliFResPLabel);\r\n//        centroMCliFResPSSPanel.add(datePicker6);\r\n//        centroMCliFResPSSPanel1.add(horaMCliFResPLabel);\r\n//        //centroMCliFResPSSPanel2.add(horaDeMCliFResPLabel);\r\n//        centroMCliFResPSSPanel2.add(arrayHoraDeMCliFResPCBox);\r\n//        //centroMCliFResPSSPanel2.add(horaAteMCliFResPLabel);\r\n//        //centroMCliFResPSSPanel2.add(arrayHoraAteMCliFResPCBox);\r\n//\r\n//        centroMCliFResPSSPanel3.add(qtdePessoasMCliFResPLabel);\r\n//        centroMCliFResPSSPanel3.add(arrayQtdePessoasMCliFResPCBox);\r\n//        centroMCliFResPSSPanel4.add(msgMCliFResPLabel);\r\n//\r\n//        sulMCliFResPSubPanel.setLayout(new FlowLayout());\r\n//        sulMCliFResPSubPanel.add(voltarMCliFResPButton);\r\n//        sulMCliFResPSubPanel.add(retornarMCliFResPButton);\r\n//        sulMCliFResPSubPanel.add(confirmarMCliFResPButton);\r\n//\r\n//        voltarMCliFResPButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        retornarMCliFResPButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIFAZERRES_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        //todo ver os encaminhamentos\r\n//        confirmarMCliFResPButton.addActionListener(e -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(500, 180);\r\n//        });\r\n//\r\n//    }\r\n//\r\n//    //////MENU CLIENTE – FAZER RESERVA TAKE-AWAY//////////\r\n//    private void construirPanelMCliFazerResTA(Interface janela, Container contentor, JPanel\r\n//            loginSuperPanel, JPanel mCliFazerResTASuperPanel) {\r\n//\r\n//\r\n//        /////SUBPAINEIS//////\r\n//        JPanel norteMCliFResTASubPanel = new JPanel();\r\n//        norteMCliFResTASubPanel.setLayout(new BorderLayout());\r\n//        JPanel centroMCliFResTASubPanel = new JPanel();\r\n//        JPanel sulMCliFResTASubPanel = new JPanel();\r\n//\r\n//        JLabel mCliTitFResTALabel = new JLabel(\"FAZER RESERVAS TAKE-AWAY\");\r\n//        JLabel horaMCliFResTALabel = new JLabel(\"HORA\");\r\n//        JLabel idMCliFResTALabel = new JLabel(\"ID\");\r\n//        JLabel qtdePratosMCliFResTALabel = new JLabel(\"QUANTIDADE\");\r\n//        JLabel pratosMCliFResTALabel = new JLabel(\"PRATOS\");\r\n//\r\n//        String[] horasMCliFResTA = {\"\", \"11h30\", \"12h\", \"12h30\", \"13h\", \"13h30\", \"14h\", \"14h30\", \"15h\", \"15h30\", \"19h\", \"19h30\", \"20h\", \"20h30\", \"21h\", \"21h30\", \"22h\", \"22h30\"};\r\n//        JComboBox arrayHorasMCliFResTACBox = new JComboBox(horasMCliFResTA);\r\n//\r\n//        String[] idMCliFResTA = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"};\r\n//        JComboBox arrayIdMCliFResTACBox = new JComboBox(idMCliFResTA);\r\n//\r\n//        String[] qtdePratosMCliFResTA = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\"};\r\n//        JComboBox arrayQtdePratosMCliFResTACBox = new JComboBox(qtdePratosMCliFResTA);\r\n//\r\n////todo possibilitar que o prato possa ser selecionado\r\n//        String[] nomeColunasMCliFResTA = new String[]{\r\n//                \"ID\", \"NOME\", \"DESCRIÇÃO\", \"PREÇO\", \"TIPO\"\r\n//        };\r\n//\r\n//        Object[][] dados = new Object[][]{\r\n//                {\"ID\", \"NOME\", \"DESCRIÇÃO\", \"PREÇO\", \"TIPO\"},\r\n//                {1, \"Sardinha\", \"Assada\", \"15.0\", \"Carta\"},\r\n//                {2, \"Peru\", \"Ensopado\", \"15.0\", \"Prato do Dia\"},\r\n//                {3, \"Bifana\", \"Frita\", \"15.0\", \"Carta\"},\r\n//                {4, \"Sardinha\", \"Assada\", \"15.0\", \"Carta\"},\r\n//                {5, \"Peru\", \"Ensopado\", \"15.0\", \"Prato do Dia\"},\r\n//                {6, \"Bifana\", \"Frita\", \"15.0\", \"Carta\"},\r\n//\r\n//        };\r\n//        //criação da tabela\r\n//        JTable tabelaMCliFResTA = new JTable(dados, nomeColunasMCliFResTA);\r\n//\r\n//        JButton ptEnMCliFResTAButton = new JButton(\"PT/EN\");\r\n//        JButton voltarMCliFResTAButton = new JButton(\"MENU CLIENTE\");\r\n//        JButton adicionarMCliFResTAButton = new JButton(\"ADICIONAR\");\r\n//        JButton retornarMCliFResButton = new JButton(\"VOLTAR\");\r\n//        JButton finalizarMCliFResTAButton = new JButton(\"FINALIZAR\");\r\n//\r\n//        mCliFazerResTASuperPanel.add(norteMCliFResTASubPanel, \"North\");\r\n//        mCliFazerResTASuperPanel.add(centroMCliFResTASubPanel, \"Center\");\r\n//        mCliFazerResTASuperPanel.add(sulMCliFResTASubPanel, \"South\");\r\n//\r\n//        JPanel norteMCliFResTASSPanel = new JPanel();\r\n//        norteMCliFResTASSPanel.setLayout(new FlowLayout());\r\n//        norteMCliFResTASSPanel.add(mCliTitFResTALabel);\r\n//        norteMCliFResTASubPanel.add(norteMCliFResTASSPanel, BorderLayout.CENTER);\r\n//        norteMCliFResTASubPanel.add(ptEnMCliFResTAButton, BorderLayout.EAST);\r\n//\r\n//        JPanel centroMCliFResTASSPanel = new JPanel();\r\n//        centroMCliFResTASSPanel.setLayout(new FlowLayout());\r\n//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResTASSPanel1 = new JPanel();\r\n//        centroMCliFResTASSPanel1.setLayout(new FlowLayout());\r\n//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel1, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResTASSPanel2 = new JPanel();\r\n//        centroMCliFResTASSPanel2.setLayout(new FlowLayout());\r\n//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel2, BorderLayout.WEST);\r\n//\r\n//        JPanel centroMCliFResTASSPanel3 = new JPanel();\r\n//        centroMCliFResTASSPanel3.setLayout(new FlowLayout());\r\n//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel3, BorderLayout.CENTER);\r\n//\r\n//        JPanel centroMCliFResTASSPanel4 = new JPanel();\r\n//        centroMCliFResTASSPanel4.setLayout(new FlowLayout());\r\n//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel4, BorderLayout.WEST);\r\n//\r\n//        centroMCliFResTASSPanel.add(horaMCliFResTALabel);\r\n//        centroMCliFResTASSPanel1.add(arrayHorasMCliFResTACBox);\r\n//        centroMCliFResTASSPanel3.add(pratosMCliFResTALabel);\r\n//        centroMCliFResTASSPanel3.add(tabelaMCliFResTA);\r\n//        centroMCliFResTASSPanel4.add(idMCliFResTALabel);\r\n//        centroMCliFResTASSPanel4.add(arrayIdMCliFResTACBox);\r\n//        centroMCliFResTASSPanel4.add(qtdePratosMCliFResTALabel);\r\n//        centroMCliFResTASSPanel4.add(arrayQtdePratosMCliFResTACBox);\r\n//\r\n//        sulMCliFResTASubPanel.setLayout(new FlowLayout());\r\n//        sulMCliFResTASubPanel.add(voltarMCliFResTAButton);\r\n//        sulMCliFResTASubPanel.add(retornarMCliFResButton);\r\n//        sulMCliFResTASubPanel.add(adicionarMCliFResTAButton);\r\n//        sulMCliFResTASubPanel.add(finalizarMCliFResTAButton);\r\n//\r\n//\r\n//        voltarMCliFResTAButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MENUCLIENTE_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        retornarMCliFResButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIFAZERRES_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//        //todo fazer nova página com valor final (botoes de finalizar, editar e remover com quantidade)\r\n//        finalizarMCliFResTAButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIFAZERRES_CARD);\r\n//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n//        });\r\n//\r\n//        //todo ver os encaminhamentos\r\n//        adicionarMCliFResTAButton.addActionListener(e -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MCLIFAZERRES_CARD);\r\n//            this.setSize(500, 180);\r\n//        });\r\n//\r\n//\r\n//        this.setVisible(true);\r\n//    }\r\n//\r\n//}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/gui/Interface.java	(revision 94d56b93f5cc2a5d5537a2f6b203d7f05233f991)
+++ src/com/company/gui/Interface.java	(date 1609540912811)
@@ -1,3449 +1,3328 @@
-//
-//
-//
-//package com.company.gui;
-//
-//import com.company.Sistema;
-//import com.company.gui.util.DateLabelFormatter;
-//
-//import org.jdatepicker.impl.JDatePanelImpl;
-//import org.jdatepicker.impl.JDatePickerImpl;
-//import org.jdatepicker.impl.UtilDateModel;
-//
-//import java.awt.*;
-//import java.awt.event.*;
-//import java.text.ParseException;
-//import java.util.Enumeration;
-//import java.util.Properties;
-//import java.util.ResourceBundle;
-//
-//import javax.swing.*;
-//import javax.swing.text.MaskFormatter;
-//
-//public class Interface extends JFrame {
-//    private static final String LOGIN_CARD = "LOGIN";
-//    private static final String RESTAURANTE_CARD = "RESTAURANTE";
-//    private static final String CLIENTE_CARD = "CLIENTE";
-//    private static final String MENUCLIENTE_CARD = "MENU CLIENTE";
-//    private static final String MCLIREST_CARD = "MENU CLIENTE - CONSULTAR RESTAURANTES";
-//    private static final String MCLICOMENTARIOS_CARD = "MENU CLIENTE - COMENTÁRIOS";
-//    private static final String MCLIATDADOS_CARD = "MENU CLIENTE - ACTUALIZAR DADOS";
-//    private static final String MCLIHISRES_CARD = "MENU CLIENTE - HISTÓRICO DE RESERVAS";
-//    private static final String MCLIMRESCOMPONTRESE_CARD = "MENU CLIENTE - HISTÓRICO DE RESERVAS: COMENTAR";
-//    private static final String MCLIRESACT_CARD = "MENU CLIENTE - RESERVAS ACTIVAS";
-//    private static final String MCLIFAZERRES_CARD = "MENU CLIENTE - FAZER RESERVAS";
-//    private static final String MCLIFAZERRESP_CARD = "MENU CLIENTE - FAZER RESERVAS PRESENCIAL";
-//    private static final String MCLIFAZERRESTA_CARD = "MENU CLIENTE - FAZER RESERVAS TAKE-AWAY";
-//    private static final String MCLIRESERVAS_CARD = "MENU CLIENTE - RESERVAS";
-//    private static final String MCLIMRESTFORDRESTS_CARD = "MENU CLIENTE - MENU RESTAURANTES";
-//    private static final String MCLIMRESTFRESTPONT_CARD = "MENU CLIENTE - MENU RESTAURANTES - PONTUAÇÃO";
-//    private static final String MCLIMRESTFORDRESTVALOR_CARD = "MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS";
-//    private static final String MCLIMRESTFORDRESTVALORCARTA_CARD = "MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS - CARTA";
-//    private static final String MCLIMRESTFORDRESTVALORPDIA_CARD = "MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS - PRATO DO DIA";
-//    private static final String MCLIMRESTFRESTHFUNC_CARD = "MENU CLIENTE - MENU RESTAURANTES - HORÁRIO FUNCIONAMENTO";
-//    private static final String MCLIMRESTFRESTLOT_CARD = "MENU CLIENTE - MENU RESTAURANTES - LOTAÇÃO";
-//    private static final String MCLIMRESTFRESTCID_CARD = "MENU CLIENTE - MENU RESTAURANTES - CIDADE";
-//
-//
-//    private static final String MENURESTAURANTE_CARD = "MENU RESTAURANTE";
-//    private static final String MRESTADICIONARPRATO_CARD = "ADICIONAR PRATO";
-//    private static final String MRESTACTUALIZARPRATO_CARD = "ACTUALIZAR PRATO DO DIA";
-//    private static final String MRESTACTUALIZARDADOS_CARD = "MENU RESTAURANTE - ACTUALIZAR DADOS";
-//    private static final String MRESTRESERV_CARD = "MENU RESTAURANTE - HISTÓRICO DE RESERVAS";
-//    private static final String MRESTCOMENTARIOS_CARD = "MENU RESTAURANTE - COMENTÁRIOS";
-//    private static final int LARGURA_LOGIN = 400;
-//    private static final int ALTURA_LOGIN = 180;
-//    private static final int LARGURA_PADRAO = 500;
-//    private static final int ALTURA_PADRAO = 300;
-//    private boolean passwordValido;
-//    private boolean confirmarPasswordValido;
-//    private Sistema sistema = new Sistema();
-//    private MaskFormatter mascaraTelemovel;
-//
-//
-//    public Interface() {
-//
-//        try {
-//            mascaraTelemovel = new MaskFormatter("#########");
-//        } catch (ParseException e) {
-//            e.printStackTrace();
-//        }
-//
-//        ImageIcon logo = new ImageIcon("logo3.png");
-//        this.setIconImage(logo.getImage());
-//
-//
-//        this.setTitle("RESERVAS DE RESTAURANTES");
-//        this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
-//        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
-//        Container contentor = this.getContentPane();
-//        contentor.setLayout(new CardLayout());
-//
-//        /////// SUPERPAINEIS////////
-//        JPanel loginSuperPanel = new JPanel();
-//        loginSuperPanel.setLayout(new BorderLayout());
-//        JPanel regNovoCliSuperPanel = new JPanel();
-//        regNovoCliSuperPanel.setLayout(new BorderLayout());
-//        JPanel registarNovoRestSuperPanel = new JPanel();
-//        registarNovoRestSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliSuperPanel = new JPanel();
-//        mCliSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliRestSuperPanel = new JPanel();
-//        mCliRestSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliComentariosSuperPanel = new JPanel();
-//        mCliComentariosSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliAtDadosSuperPanel = new JPanel();
-//        mCliAtDadosSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliHistResSuperPanel = new JPanel();
-//        mCliHistResSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliMResComPontReseSuperPanel = new JPanel();
-//        mCliMResComPontReseSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliResActSuperPanel = new JPanel();
-//        mCliResActSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliFazerResSuperPanel = new JPanel();
-//        mCliFazerResSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliFazerResPSuperPanel = new JPanel();
-//        mCliFazerResPSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliFazerResTASuperPanel = new JPanel();
-//        mCliFazerResTASuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliReservasMReseSuperPanel = new JPanel();
-//        mCliReservasMReseSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliMRestFOrdRestsSuperPanel = new JPanel();
-//        mCliMRestFOrdRestsSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliMRestFRestPontSuperPanel = new JPanel();
-//        mCliMRestFRestPontSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliMRestFOrdRestValorSuperPanel = new JPanel();
-//        mCliMRestFOrdRestValorSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliMRestFOrdRestValorCartaSuperPanel = new JPanel();
-//        mCliMRestFOrdRestValorCartaSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliMRestFOrdRestValorPDiaSuperPanel = new JPanel();
-//        mCliMRestFOrdRestValorPDiaSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliMRestFRestHFuncSuperPanel = new JPanel();
-//        mCliMRestFRestHFuncSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliMRestFRestLotSuperPanel = new JPanel();
-//        mCliMRestFRestLotSuperPanel.setLayout(new BorderLayout());
-//        JPanel mCliMRestFRestCidSuperPanel = new JPanel();
-//        mCliMRestFRestCidSuperPanel.setLayout(new BorderLayout());
-//
-//
-//        JPanel mRestSuperPanel = new JPanel();
-//        mRestSuperPanel.setLayout(new BorderLayout());
-//        JPanel mRestAdPratoSuperPanel = new JPanel();
-//        mRestAdPratoSuperPanel.setLayout(new BorderLayout());
-//        JPanel mRestAtPratoDiaSuperPanel = new JPanel();
-//        mRestAtPratoDiaSuperPanel.setLayout(new BorderLayout());
-//        JPanel mRestAtDadosSuperPanel = new JPanel();
-//        mRestAtDadosSuperPanel.setLayout(new BorderLayout());
-//        JPanel mRestReservasSuperPanel = new JPanel();
-//        mRestReservasSuperPanel.setLayout(new BorderLayout());
-//        JPanel mRestComentariosSuperPanel = new JPanel();
-//        mRestComentariosSuperPanel.setLayout(new BorderLayout());
-//
-//
-//        construirPanelLogin(this, contentor, loginSuperPanel);
-//
-//        construirPanelCliente(this, contentor, loginSuperPanel, regNovoCliSuperPanel);
-//
-//        construirPanelRestaurante(this, contentor, loginSuperPanel, registarNovoRestSuperPanel);
-//
-//        construirPanelMenuCliente(this, contentor, loginSuperPanel, mCliSuperPanel);
-//
-//        ////PROBLEMA - não aceita this
-//        construirPanelMRest(contentor, loginSuperPanel, mRestSuperPanel);
-//
-//        construirPanelMRestAdPrato(this, contentor, loginSuperPanel, mRestAdPratoSuperPanel);
-//
-//        construirPanelMRestAtPratoDia(this, contentor, loginSuperPanel, mRestAtPratoDiaSuperPanel);
-//
-//        construirPanelMRestAtDados(this, contentor, loginSuperPanel, mRestAtDadosSuperPanel);
-//
-//        construirPanelMRestReservas(this, contentor, loginSuperPanel, mRestReservasSuperPanel);
-//
-//        construirPanelMRestComentarios(this, contentor, loginSuperPanel, mRestComentariosSuperPanel);
-//
-//        //construirPanelMCliRestaurantes(this, contentor, loginSuperPanel, mCliRestSuperPanel);
-//
-//        construirPanelMCliComentarios(this, contentor, loginSuperPanel, mCliComentariosSuperPanel);
-//
-//        construirPanelMCliAtDados(this, contentor, loginSuperPanel, mCliAtDadosSuperPanel);
-//
-//        construirPanelMCliHistRes(this, contentor, loginSuperPanel, mCliHistResSuperPanel);
-//
-//        construirPanelMCliResAct(this, contentor, loginSuperPanel, mCliResActSuperPanel);
-//
-//        construirPanelMCliFazerRes(this, contentor, loginSuperPanel, mCliFazerResSuperPanel);
-//
-//        construirPanelMCliFazerResP(this, contentor, loginSuperPanel, mCliFazerResPSuperPanel);
-//
-//        construirPanelMCliFazerResTA(this, contentor, loginSuperPanel, mCliFazerResTASuperPanel);
-//
-//        construirPanelReservasMCliMRese(this, contentor, loginSuperPanel, mCliReservasMReseSuperPanel);
-//
-//        construirPanelMCliMResComPonReservas(this, contentor, loginSuperPanel, mCliMResComPontReseSuperPanel);
-//
-//        construirPanelMCliMRestFOrdRests(this, contentor, loginSuperPanel, mCliMRestFOrdRestsSuperPanel);
-//
-//        construirPanelMCliMRestFRestPont(this, contentor, loginSuperPanel, mCliMRestFRestPontSuperPanel);
-//
-//        construirPanelMCliMRestFOrdRestValor(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorSuperPanel);
-//
-//        construirPanelMCliMRestFOrdRestValorCarta(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorCartaSuperPanel);
-//
-//        construirPanelMCliMRestFOrdRestValorPDia(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorPDiaSuperPanel);
-//
-//        construirPanelMCliMRestFRestHFunc(this, contentor, loginSuperPanel, mCliMRestFRestHFuncSuperPanel);
-//
-//        construirPanelMCliMRestFRestLot(this, contentor, loginSuperPanel, mCliMRestFRestLotSuperPanel);
-//
-//        construirPanelMCliMRestFRestCid(this, contentor, loginSuperPanel, mCliMRestFRestCidSuperPanel);
-//
-//
-//        contentor.add(loginSuperPanel, LOGIN_CARD);
-//        contentor.add(regNovoCliSuperPanel, CLIENTE_CARD);
-//        contentor.add(registarNovoRestSuperPanel, RESTAURANTE_CARD);
-//        contentor.add(mCliSuperPanel, MENUCLIENTE_CARD);
-//        contentor.add(mRestSuperPanel, MENURESTAURANTE_CARD);
-//        contentor.add(mRestAdPratoSuperPanel, MRESTADICIONARPRATO_CARD);
-//        contentor.add(mRestAtPratoDiaSuperPanel, MRESTACTUALIZARPRATO_CARD);
-//        contentor.add(mRestAtDadosSuperPanel, MRESTACTUALIZARDADOS_CARD);
-//        contentor.add(mRestReservasSuperPanel, MRESTRESERV_CARD);
-//        contentor.add(mRestComentariosSuperPanel, MRESTCOMENTARIOS_CARD);
-//        contentor.add(mCliRestSuperPanel, MCLIREST_CARD);
-//        contentor.add(mCliComentariosSuperPanel, MCLICOMENTARIOS_CARD);
-//        contentor.add(mCliAtDadosSuperPanel, MCLIATDADOS_CARD);
-//        contentor.add(mCliHistResSuperPanel, MCLIHISRES_CARD);
-//        contentor.add(mCliResActSuperPanel, MCLIRESACT_CARD);
-//        contentor.add(mCliFazerResSuperPanel, MCLIFAZERRES_CARD);
-//        contentor.add(mCliFazerResPSuperPanel, MCLIFAZERRESP_CARD);
-//        contentor.add(mCliFazerResTASuperPanel, MCLIFAZERRESTA_CARD);
-//        contentor.add(mCliReservasMReseSuperPanel, MCLIRESERVAS_CARD);
-//        contentor.add(mCliMResComPontReseSuperPanel, MCLIMRESCOMPONTRESE_CARD);
-//        contentor.add(mCliMRestFOrdRestsSuperPanel, MCLIMRESTFORDRESTS_CARD);
-//        contentor.add(mCliMRestFRestPontSuperPanel, MCLIMRESTFRESTPONT_CARD);
-//        contentor.add(mCliMRestFOrdRestValorSuperPanel, MCLIMRESTFORDRESTVALOR_CARD);
-//        contentor.add(mCliMRestFOrdRestValorCartaSuperPanel, MCLIMRESTFORDRESTVALORCARTA_CARD);
-//        contentor.add(mCliMRestFOrdRestValorPDiaSuperPanel, MCLIMRESTFORDRESTVALORPDIA_CARD);
-//        contentor.add(mCliMRestFRestHFuncSuperPanel, MCLIMRESTFRESTHFUNC_CARD);
-//        contentor.add(mCliMRestFRestLotSuperPanel, MCLIMRESTFRESTLOT_CARD);
-//        contentor.add(mCliMRestFRestCidSuperPanel, MCLIMRESTFRESTCID_CARD);
-//
-//    }
-//
-//
-//    private void construirPanelLogin(Interface janela, Container contentor, JPanel loginSuperPanel) {
-//        ////Criação dos subpaineis norte, centro e sul
-//        JPanel norteLoginSubPanel = new JPanel();
-//        JPanel centroLoginSubPanel = new JPanel();
-//        JPanel sulLoginSubPanel = new JPanel();
-//
-//        JButton ptEnLoginButton = new JButton("PT/EN");
-//        ptEnLoginButton.setSize(15, 5);
-//        JButton loginButton = new JButton(LOGIN_CARD);
-//        loginButton.setSize(15, 5);
-//        JButton clienteNovoButton = new JLinkButton("Novo Cliente");
-//        JButton restauranteNovoButton = new JLinkButton("Novo Restaurante");
-//
-//        JLabel titleLoginLabel = new JLabel("LOGIN");
-//        JLabel usernameLoginLabel = new JLabel("Username");
-//        JLabel passwordLoginLabel = new JLabel("Password");
-//
-//        JTextField usernameLoginText = new JTextField(20);
-//
-//        JPasswordField passwordLoginField = new JPasswordField(20);
-//
-/////Layout dos subPaineis north, centro e south
-//        norteLoginSubPanel.setLayout(new BorderLayout());
-//        centroLoginSubPanel.setLayout(new BorderLayout());
-//        sulLoginSubPanel.setLayout(new BorderLayout());
-//
-////Adicionar subPaineis no superpainel Login
-//        loginSuperPanel.add(norteLoginSubPanel, BorderLayout.NORTH);
-//        loginSuperPanel.add(centroLoginSubPanel, BorderLayout.CENTER);
-//        loginSuperPanel.add(sulLoginSubPanel, BorderLayout.SOUTH);
-//
-///// Criação dos subpaineis nos subpaineis norte, centro e sul
-//        JPanel norteLoginSSPanelTitle = new JPanel();
-//        JPanel centroLoginSSPanelForm = new JPanel();
-//        JPanel centroLoginSSPanelButton = new JPanel();
-//        JPanel sulLoginSSPanelLinks = new JPanel();
-//
-////Layout dos subpaineis dos subpaineis norte, centro e sul
-//        norteLoginSubPanel.add(norteLoginSSPanelTitle, BorderLayout.CENTER);
-//        norteLoginSubPanel.add(ptEnLoginButton, BorderLayout.EAST);
-//        norteLoginSSPanelTitle.setLayout(new FlowLayout());
-//        norteLoginSSPanelTitle.add(titleLoginLabel);
-//
-//        centroLoginSubPanel.add(centroLoginSSPanelForm, BorderLayout.NORTH);
-//        centroLoginSSPanelForm.setLayout(new GridLayout(2, 2));
-//        centroLoginSSPanelForm.add(usernameLoginLabel);
-//        centroLoginSSPanelForm.add(usernameLoginText);
-//        centroLoginSSPanelForm.add(passwordLoginLabel);
-//        centroLoginSSPanelForm.add(passwordLoginField);
-//        centroLoginSubPanel.add(centroLoginSSPanelButton, BorderLayout.SOUTH);
-//        centroLoginSSPanelButton.setLayout(new FlowLayout());
-//        centroLoginSSPanelButton.add(loginButton);
-//
-//        sulLoginSubPanel.add(sulLoginSSPanelLinks);
-//        sulLoginSSPanelLinks.setLayout(new BorderLayout());
-//        sulLoginSSPanelLinks.add(clienteNovoButton, BorderLayout.EAST);
-//        sulLoginSSPanelLinks.add(restauranteNovoButton, BorderLayout.WEST);
-//
-//
-//        clienteNovoButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, CLIENTE_CARD);
-//            janela.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos
-//            // no actionlistener)
-//        });
-//
-//        restauranteNovoButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, RESTAURANTE_CARD);
-//            janela.setSize(LARGURA_PADRAO, 350);
-//            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos
-//            // no actionlistener)
-//        });
-//    }
-//
-//    ////////////////////NOVO CLIENTE/////////////////////////
-//    private void construirPanelCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoClienteSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteNovoClienteSubPanel = new JPanel();
-//        norteNovoClienteSubPanel.setLayout(new BorderLayout());
-//        JPanel centroNovoClienteSubPanel = new JPanel();
-//        JPanel sulNovoClienteSubPanel = new JPanel();
-//
-//        JLabel registarNovoClienteLabel = new JLabel("NOVO CLIENTE");
-//        registarNovoClienteLabel.setForeground(Color.BLUE);
-//        JLabel nomeClienteLabel = new JLabel("Nome");
-//        //nomeClienteLabel.setBounds(50,80,100,20);
-//        JLabel emailClienteLabel = new JLabel("E-mail");
-//        JLabel moradaClienteLabel = new JLabel("Morada");
-//        JLabel telemovelClienteLabel = new JLabel("Telemóvel");
-//        JLabel usernameClienteLabel = new JLabel("Username");
-//        JLabel passwordClienteLabel = new JLabel("Password ");
-//        JLabel confirmarPasswordClienteLabel = new JLabel("Confirmar password ");
-//
-//        JTextField nomeClienteText = new JTextField(20);
-//        nomeClienteText.setMargin(new Insets(3, 3, 3, 3));
-//        //nomeClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));
-//        JTextField emailClienteText = new JTextField(20);
-//        //emailClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));
-//        JTextField moradaClienteText = new JTextField(20);
-//        JTextField telemovelClienteText = new JFormattedTextField(mascaraTelemovel);
-//        telemovelClienteText.setColumns(20);
-//        JTextField usernameClienteText = new JTextField(20);
-//
-//        JPasswordField passwordClienteField = new JPasswordField(20);
-//        JPasswordField confirmarPassawordClienteField = new JPasswordField(20);
-//
-//        JButton ptEnNovoClienteButton = new JButton("PT/EN");
-//        JButton cancelarClienteButton = new JButton("CANCELAR");
-//        JButton registarClienteButton = new JButton("REGISTAR");
-//
-//        //todo não deu certo
-//        //Define as máscaras
-//        MaskFormatter mascaraTelCliente = null;
-//
-//        try {
-//            mascaraTelCliente = new MaskFormatter("(##)####-####");
-//
-//        } catch (ParseException excp) {
-//            System.err.println("Erro na formatação: " + excp.getMessage());
-//            System.exit(-1);
-//        }
-//
-//        //Seta as máscaras nos objetos JFormattedTextField
-//        JFormattedTextField telClienteT = new JFormattedTextField(mascaraTelCliente);
-//        //telClienteT.setBounds(150,80,100,20);
-//
-//
-//        registarNovoClienteSuperPanel.add(norteNovoClienteSubPanel, "North");
-//        registarNovoClienteSuperPanel.add(centroNovoClienteSubPanel, "Center");
-//        registarNovoClienteSuperPanel.add(sulNovoClienteSubPanel, "South");
-//
-//        JPanel norteNovoClienteSSPanel = new JPanel();
-//        norteNovoClienteSSPanel.setLayout(new FlowLayout());
-//        norteNovoClienteSSPanel.add(registarNovoClienteLabel);
-//        norteNovoClienteSubPanel.add(norteNovoClienteSSPanel, BorderLayout.CENTER);
-//        norteNovoClienteSubPanel.add(ptEnNovoClienteButton, BorderLayout.EAST);
-//
-//        JPanel centroNovoClienteSSPanelForm = new JPanel();
-//        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));
-//        centroNovoClienteSubPanel.add(centroNovoClienteSSPanelForm);
-//        centroNovoClienteSSPanelForm.add(nomeClienteLabel);
-//        centroNovoClienteSSPanelForm.add(nomeClienteText);
-//        centroNovoClienteSSPanelForm.add(emailClienteLabel);
-//        centroNovoClienteSSPanelForm.add(emailClienteText);
-//        centroNovoClienteSSPanelForm.add(moradaClienteLabel);
-//        centroNovoClienteSSPanelForm.add(moradaClienteText);
-//        centroNovoClienteSSPanelForm.add(telemovelClienteLabel);
-//        centroNovoClienteSSPanelForm.add(telemovelClienteText);
-//        centroNovoClienteSSPanelForm.add(usernameClienteLabel);
-//        centroNovoClienteSSPanelForm.add(usernameClienteText);
-//        centroNovoClienteSSPanelForm.add(passwordClienteLabel);
-//        centroNovoClienteSSPanelForm.add(passwordClienteField);
-//        centroNovoClienteSSPanelForm.add(confirmarPasswordClienteLabel);
-//        centroNovoClienteSSPanelForm.add(confirmarPassawordClienteField);
-//
-//        sulNovoClienteSubPanel.setLayout(new FlowLayout());
-//        sulNovoClienteSubPanel.add(cancelarClienteButton);
-//        sulNovoClienteSubPanel.add(registarClienteButton);
-//
-//
-//        registarClienteButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//
-//        cancelarClienteButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, LOGIN_CARD);
-//            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
-//
-//        });
-//    }
-//
-//
-//    ////// MENU CLIENTE//////////
-//    private void construirPanelMenuCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliSuperPanel) {
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMenuClienteSubPanel = new JPanel();
-//        norteMenuClienteSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMenuClienteSubPanel = new JPanel();
-//        JPanel sulMenuClienteSubPanel = new JPanel();
-//
-//        JLabel registarNovoClienteLabel = new JLabel("MENU CLIENTE");
-//        registarNovoClienteLabel.setForeground(Color.BLUE);
-//
-//        JButton ptEnMenuClienteButton = new JButton("PT/EN");
-//        ////
-//        JButton restaurantesMCliButton = new JButton("RESTAURANTES");
-//        JButton comentariosMCliButton = new JButton("COMENTÁRIOS");
-//        JButton reservasMCliButton = new JButton("RESERVAS");
-//
-//        JButton atualDadosMCliButton = new JButton("ACTUALIZAR DADOS");
-//
-//        ///
-//        //JButton cancelarMenuClienteButton = new JButton("CANCELAR");
-//        JButton logoutMenuClienteButton = new JButton("LOGOUT");
-//
-//        mCliSuperPanel.add(norteMenuClienteSubPanel, "North");
-//        mCliSuperPanel.add(centroMenuClienteSubPanel, "Center");
-//        mCliSuperPanel.add(sulMenuClienteSubPanel, "South");
-//
-//        JPanel norteClienteSubPanel = new JPanel();
-//        norteClienteSubPanel.setLayout(new FlowLayout());
-//        norteClienteSubPanel.add(registarNovoClienteLabel);
-//        norteMenuClienteSubPanel.add(norteClienteSubPanel, BorderLayout.CENTER);
-//        norteMenuClienteSubPanel.add(ptEnMenuClienteButton, BorderLayout.EAST);
-//
-//        JPanel centroNovoClienteSSPanelForm = new JPanel();
-//        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));
-//        centroMenuClienteSubPanel.add(centroNovoClienteSSPanelForm);
-//        centroNovoClienteSSPanelForm.add(restaurantesMCliButton);
-//        centroNovoClienteSSPanelForm.add(comentariosMCliButton);
-//        centroNovoClienteSSPanelForm.add(reservasMCliButton);
-//
-//        centroNovoClienteSSPanelForm.add(atualDadosMCliButton);
-//
-//        sulMenuClienteSubPanel.setLayout(new FlowLayout());
-//        sulMenuClienteSubPanel.add(logoutMenuClienteButton);
-//
-//        comentariosMCliButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLICOMENTARIOS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        restaurantesMCliButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        reservasMCliButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIRESERVAS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        atualDadosMCliButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIATDADOS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//
-//        logoutMenuClienteButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, LOGIN_CARD);
-//            this.setSize(400, 180);
-//        });
-//
-//    }
-//
-//
-//    ////// MENU CLIENTE – MENU RESERVAS//////////
-//    private void construirPanelReservasMCliMRese
-//    (Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliReservasMReseSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMReseSubPanel = new JPanel();
-//        norteMCliMReseSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMReseSubPanel = new JPanel();
-//        JPanel sulMCliMReseSubPanel = new JPanel();
-//
-//        JLabel registarNovoMCliMReseLabel = new JLabel("MENU CLIENTE - RESERVAS");
-//        registarNovoMCliMReseLabel.setForeground(Color.BLUE);
-//
-//        JButton ptEnMCliMReseButton = new JButton("PT/EN");
-//        JButton histReseComPonMCliMReseButton = new JButton("HISTÓRICO");
-//        JButton ReservasActMCliMReseButton = new JButton("RESERVAS ACTIVAS");
-//        JButton fazerReservasMCliMReseButton = new JButton("FAZER RESERVAS");
-//        JButton voltarMCliMReseButton = new JButton("MENU CLIENTE");
-//
-//        JButton logoutMCliMReseButton = new JButton("LOGOUT");
-//
-//        mCliReservasMReseSuperPanel.add(norteMCliMReseSubPanel, "North");
-//        mCliReservasMReseSuperPanel.add(centroMCliMReseSubPanel, "Center");
-//        mCliReservasMReseSuperPanel.add(sulMCliMReseSubPanel, "South");
-//
-//        JPanel norteMCliMReseSSPanel = new JPanel();
-//        norteMCliMReseSSPanel.setLayout(new FlowLayout());
-//        norteMCliMReseSSPanel.add(registarNovoMCliMReseLabel);
-//        norteMCliMReseSubPanel.add(norteMCliMReseSSPanel, BorderLayout.CENTER);
-//        norteMCliMReseSubPanel.add(ptEnMCliMReseButton, BorderLayout.EAST);
-//
-//        JPanel centroNovoMCliMReseSSPanel = new JPanel();
-//        centroNovoMCliMReseSSPanel.setLayout(new GridLayout(7, 2));
-//        centroMCliMReseSubPanel.add(centroNovoMCliMReseSSPanel);
-//
-//        centroNovoMCliMReseSSPanel.add(histReseComPonMCliMReseButton);
-//        centroNovoMCliMReseSSPanel.add(ReservasActMCliMReseButton);
-//        centroNovoMCliMReseSSPanel.add(fazerReservasMCliMReseButton);
-//
-//        sulMCliMReseSubPanel.setLayout(new FlowLayout());
-//        sulMCliMReseSubPanel.add(logoutMCliMReseButton);
-//        sulMCliMReseSubPanel.add(voltarMCliMReseButton);
-//
-//
-//        histReseComPonMCliMReseButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIHISRES_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        ReservasActMCliMReseButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIRESACT_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        fazerReservasMCliMReseButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIFAZERRES_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        voltarMCliMReseButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        logoutMCliMReseButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, LOGIN_CARD);
-//            this.setSize(400, 180);
-//        });
-//
-//    }
-//
-//
-//    //////MENU CLIENTE – RESERVAS - HISTÓRICO//////////
-//
-//    private void construirPanelMCliHistRes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliHistResSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliHistResSubPanel = new JPanel();
-//        norteMCliHistResSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliHistResSubPanel = new JPanel();
-//        JPanel sulMCliHistResSubPanel = new JPanel();
-//
-//        JLabel mCliTitHistResLabel = new JLabel("MENU CLIENTE - HISTÓRICO DE RESERVAS");
-//
-//        JLabel mCliIdHistResLabel = new JLabel("ID");
-//
-//        String[] mCliIdHistRes = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
-//        JComboBox arrayMCliIdHistResCBox = new JComboBox(mCliIdHistRes);
-//
-////todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, comentar e pontuar
-//        String[] nomeColunasMCliHistRes = new String[]{
-//                "ID", "DATA", "RESTAURANTE"
-//        };
-//
-//        Object[][] data = new Object[][]{
-//                {"ID", "DATA", "RESTAURANTE"},
-//                {1, "dd/MM/yyy", "A"},
-//                {1, "dd/MM/yyy", "B"},
-//                {3, "dd/MM/yyy", "C"},
-//        };
-//        //criação da tabela
-//        JTable tabelaMCliHistRes = new JTable(data, nomeColunasMCliHistRes);
-//
-//        JButton ptEnMCliRestButton = new JButton("PT/EN");
-//        JButton voltarMCliHistResButton = new JButton("MENU CLIENTE");
-//        JButton comentarMCliHistResButton = new JButton("COMENTAR");
-//        JButton retornarMCliHistResButton = new JButton("VOLTAR");
-//
-//        mCliHistResSuperPanel.add(norteMCliHistResSubPanel, "North");
-//        mCliHistResSuperPanel.add(centroMCliHistResSubPanel, "Center");
-//        mCliHistResSuperPanel.add(sulMCliHistResSubPanel, "South");
-//
-//        JPanel norteMCliHistResSSPanel = new JPanel();
-//        norteMCliHistResSSPanel.setLayout(new FlowLayout());
-//        norteMCliHistResSSPanel.add(mCliTitHistResLabel);
-//        norteMCliHistResSubPanel.add(norteMCliHistResSSPanel, BorderLayout.CENTER);
-//        norteMCliHistResSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliHistResSSPanel = new JPanel();
-//        centroMCliHistResSSPanel.setLayout(new FlowLayout());
-//        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliHistResSSPanel1 = new JPanel();
-//        centroMCliHistResSSPanel1.setLayout(new FlowLayout());
-//        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel1, BorderLayout.WEST);
-//
-//        centroMCliHistResSSPanel.add(tabelaMCliHistRes);
-//        centroMCliHistResSSPanel1.add(mCliIdHistResLabel);
-//        centroMCliHistResSSPanel1.add(arrayMCliIdHistResCBox);
-//
-//        sulMCliHistResSubPanel.setLayout(new FlowLayout());
-//        sulMCliHistResSubPanel.add(voltarMCliHistResButton);
-//        sulMCliHistResSubPanel.add(retornarMCliHistResButton);
-//        sulMCliHistResSubPanel.add(comentarMCliHistResButton);
-//
-//        retornarMCliHistResButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIRESERVAS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        //todo falta ativar este botão
-//        comentarMCliHistResButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESCOMPONTRESE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        voltarMCliHistResButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//    }
-//
-//    //todo espaço para escrever comentário pode ter barra de rolagem? ativar o botão OK
-//    /////////// MENU CLIENTE - MENU RESERVA - HISTÓRICO DE RESERVAS - COMENTAR UMA RESERVA///////
-//    private void construirPanelMCliMResComPonReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMResComPontReseSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliRestComPonReseSubPanel = new JPanel();
-//        norteMCliRestComPonReseSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliRestComPonReseSubPanel = new JPanel();
-//        JPanel sulMCliRestComPonReseSubPanel = new JPanel();
-//
-//        JRadioButton umPont = new JRadioButton("1");
-//        JRadioButton doisPont = new JRadioButton("2");
-//        JRadioButton tresPont = new JRadioButton("3");
-//        JRadioButton quatroPont = new JRadioButton("4");
-//        JRadioButton cincoPont = new JRadioButton("5");
-//
-//        JLabel mCliRestComPonReseLabel = new JLabel("MENU CLIENTE – HISTÓRICO DE RESERVAS - COMENTAR");
-//        JLabel restMCliMReseComPonLabel = new JLabel("RESTAURANTE");
-//        JLabel dataMCliMReseComPonLabel = new JLabel("DATA DA RESERVA");
-//        JLabel pontMCliRestComPonReseLabel = new JLabel("ATRIBUIR PONTUAÇÃO:");
-//
-//        JTextField restMCliMReseComPonText = new JTextField(20);
-//        JTextField dataMCliMReseComPonText = new JTextField(8);
-//        JTextArea novoComMCliMReseComPonTextA = new JTextArea(5, 50);
-//        //novoComMCliMReseComPonTextA.setSize(100, 80);
-//
-//        ButtonGroup group = new ButtonGroup();
-//        group.add(umPont);
-//        group.add(doisPont);
-//        group.add(tresPont);
-//        group.add(quatroPont);
-//        group.add(cincoPont);
-//
-//        JButton ptEnMCliRestComPonReseButton = new JButton("PT/EN");
-//        JButton voltarMCliRestComPonReseButton = new JButton("MENU CLIENTE");
-//        JButton okMCliRestComPonReseButton = new JButton("OK");
-//        JButton retornarMCliRestComPonReseButton = new JButton("VOLTAR");
-//
-//        mCliMResComPontReseSuperPanel.add(norteMCliRestComPonReseSubPanel, "North");
-//        mCliMResComPontReseSuperPanel.add(centroMCliRestComPonReseSubPanel, "Center");
-//        mCliMResComPontReseSuperPanel.add(sulMCliRestComPonReseSubPanel, "South");
-//
-//        JPanel norteMCliRestComPonReseSSPanel = new JPanel();
-//        norteMCliRestComPonReseSSPanel.setLayout(new FlowLayout());
-//        norteMCliRestComPonReseSSPanel.add(mCliRestComPonReseLabel);
-//        norteMCliRestComPonReseSubPanel.add(norteMCliRestComPonReseSSPanel, BorderLayout.CENTER);
-//        norteMCliRestComPonReseSubPanel.add(ptEnMCliRestComPonReseButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliRestComPonReseSSPanel = new JPanel();
-//        centroMCliRestComPonReseSSPanel.setLayout(new FlowLayout());
-//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliRestComPonReseSSPanel1 = new JPanel();
-//        centroMCliRestComPonReseSSPanel1.setLayout(new FlowLayout());
-//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel1, BorderLayout.CENTER);
-//
-//        JPanel centroMCliRestComPonReseSSPanel2 = new JPanel();
-//        centroMCliRestComPonReseSSPanel2.setLayout(new GridLayout(1, 1));
-//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel2);
-//
-//        JPanel centroMCliRestComPonReseSSPanel3 = new JPanel();
-//        centroMCliRestComPonReseSSPanel3.setLayout(new BorderLayout());
-//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel3, BorderLayout.WEST);
-//
-//        JPanel centroMCliRestComPonReseSSPanel4 = new JPanel();
-//        centroMCliRestComPonReseSSPanel4.setLayout(new BorderLayout());
-//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel4, BorderLayout.WEST);
-//
-//        JPanel centroMCliRestComPonReseSSPanel5 = new JPanel();
-//        centroMCliRestComPonReseSSPanel5.setLayout(new BorderLayout());
-//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel5, BorderLayout.WEST);
-//
-//        JPanel centroMCliRestComPonReseSSPanel6 = new JPanel();
-//        centroMCliRestComPonReseSSPanel6.setLayout(new BorderLayout());
-//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel6, BorderLayout.WEST);
-//
-//        JPanel centroMCliRestComPonReseSSPanel7 = new JPanel();
-//        centroMCliRestComPonReseSSPanel7.setLayout(new BorderLayout());
-//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel7, BorderLayout.WEST);
-//
-//        JPanel centroMCliRestComPonReseSSPanel8 = new JPanel();
-//        centroMCliRestComPonReseSSPanel8.setLayout(new GridLayout(1, 2));
-//        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel8);
-//        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonLabel);
-//        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonText);
-//        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonLabel);
-//        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonText);
-//        centroMCliRestComPonReseSSPanel1.add(novoComMCliMReseComPonTextA);
-//
-//        centroMCliRestComPonReseSSPanel2.add(pontMCliRestComPonReseLabel);
-//        centroMCliRestComPonReseSSPanel3.add(umPont);
-//        centroMCliRestComPonReseSSPanel4.add(doisPont);
-//        centroMCliRestComPonReseSSPanel5.add(tresPont);
-//        centroMCliRestComPonReseSSPanel6.add(quatroPont);
-//        centroMCliRestComPonReseSSPanel7.add(cincoPont);
-//
-//        sulMCliRestComPonReseSubPanel.setLayout(new FlowLayout());
-//        sulMCliRestComPonReseSubPanel.add(voltarMCliRestComPonReseButton);
-//        sulMCliRestComPonReseSubPanel.add(retornarMCliRestComPonReseButton);
-//        sulMCliRestComPonReseSubPanel.add(okMCliRestComPonReseButton);
-//
-//        retornarMCliRestComPonReseButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIRESERVAS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//        voltarMCliRestComPonReseButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        //todo ver os encaminhamentos
-//        okMCliRestComPonReseButton.addActionListener(e -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, LOGIN_CARD);
-//            this.setSize(500, 180);
-//        });
-//    }
-//
-//
-//    ////////////////////NOVO RESTAURANTE/////////////////////////
-//    private void construirPanelRestaurante(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoRestauranteSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteNovoRestauranteSubPanel = new JPanel();
-//        norteNovoRestauranteSubPanel.setLayout(new BorderLayout());
-//        JPanel centroNovoRestauranteSubPanel = new JPanel();
-//        centroNovoRestauranteSubPanel.setLayout(new FlowLayout());
-//        JPanel sulNovoRestauranteSubPanel = new JPanel();
-//
-//        JLabel registarNovoRestauranteLabel = new JLabel("NOVO RESTAURANTE");
-//        registarNovoRestauranteLabel.setForeground(Color.RED);
-//        JLabel nomeRestauranteLabel = new JLabel("Nome");
-//        JLabel emailRestauranteLabel = new JLabel("E-mail");
-//        JLabel moradaRestauranteLabel = new JLabel("Morada");
-//        JLabel cidadeRestauranteLabel = new JLabel("Cidade");
-//        JLabel telemovelRestauranteLabel = new JLabel("Telemóvel");
-/////////////////////////
-//        JLabel lotacaoRestauranteLabel = new JLabel("Lotação:");
-//        JLabel esplanadaRestauranteLabel = new JLabel("Esplanada");
-//        JLabel zonaInteriorLabel = new JLabel("Zona Interior:");
-//        JLabel zonaInteriorNFumRestauranteLabel = new JLabel("Ñ Fumadores");
-//        JLabel zonaInteriorFumRestauranteLabel = new JLabel("Fumadores");
-//        JLabel horariosRestauranteLabel = new JLabel("Horários:");
-//        JLabel horariosAlmocoRestauranteLabel = new JLabel("Almoço:");
-//        JLabel horarioAlmocoInicioRestauranteLabel = new JLabel("Início");
-//        JLabel horarioAlmocoFimRestauranteLabel = new JLabel("Fim");
-//        JLabel horariosJantarRestauranteLabel = new JLabel("Jantar:");
-//        JLabel horarioJantarInicioRestauranteLabel = new JLabel("Início");
-//        JLabel horarioJantarFimRestauranteLabel = new JLabel("Fim");
-////////////////////////////////////
-//
-//
-//        JLabel usernameRestauranteLabel = new JLabel("Username");
-//        JLabel passwordRestauranteLabel = new JLabel("Password ");
-//        JLabel confirmarPasswordRestauranteLabel = new JLabel("Confirmar password ");
-//
-//        JTextField nomeRestauranteText = new JTextField(18);
-//        nomeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField emailRestauranteText = new JTextField(18);
-//        emailRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField moradaRestauranteText = new JTextField(20);
-//        moradaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField cidadeRestauranteText = new JTextField(15);
-//        cidadeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField telemovelRestauranteText = new JFormattedTextField(mascaraTelemovel);
-//        telemovelRestauranteText.setColumns(8);
-//        telemovelRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        ////////
-//        JTextField esplanadaRestauranteText = new JTextField(3);
-//        esplanadaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField zonaInteriorNFumRestauranteText = new JTextField(3);
-//        zonaInteriorNFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField zonaInteriorFumRestauranteText = new JTextField(3);
-//        zonaInteriorFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField horarioAlmocoInicioRestauranteText = new JTextField(3);
-//        horarioAlmocoInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField horarioAlmocoFimRestauranteText = new JTextField(3);
-//        horarioAlmocoFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField horarioJantarInicioRestauranteText = new JTextField(3);
-//        horarioJantarInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField horarioJantarFimRestauranteText = new JTextField(3);
-//        horarioJantarFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        ///////
-//        JTextField usernameRestauranteText = new JTextField(20);
-//        usernameRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//
-//        JPasswordField passwordRestauranteField = new JPasswordField(15);
-//        passwordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JPasswordField confirmarPasswordRestauranteField = new JPasswordField(15);
-//        confirmarPasswordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//
-//        JButton ptEnNovoRestauranteButton = new JButton("PT/EN");
-//        JButton cancelarRestauranteButton = new JButton("CANCELAR");
-//        JButton registarRestauranteButton = new JButton("REGISTAR");
-//
-//        registarNovoRestauranteSuperPanel.add(norteNovoRestauranteSubPanel, "North");
-//        registarNovoRestauranteSuperPanel.add(centroNovoRestauranteSubPanel, "Center");
-//        registarNovoRestauranteSuperPanel.add(sulNovoRestauranteSubPanel, "South");
-//
-////        JPanel norteSupMRestSubPanel = new JPanel();
-////        norteSupMRestSubPanel.setLayout(new FlowLayout());
-////        norteNovoRestauranteSubPanel.add(norteSupMRestSubPanel, BorderLayout.CENTER);
-////        norteSupMRestSubPanel.add(registarNovoRestauranteLabel);
-////        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);
-//
-//        JPanel norteNovoRestSSPanel = new JPanel();
-//        norteNovoRestSSPanel.setLayout(new FlowLayout());
-//        norteNovoRestSSPanel.add(registarNovoRestauranteLabel);
-//        norteNovoRestauranteSubPanel.add(norteNovoRestSSPanel, BorderLayout.CENTER);
-//        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);
-//
-//        JPanel centroNovoRestSSPanelForm1 = new JPanel();
-//        centroNovoRestSSPanelForm1.setLayout(new FlowLayout());
-//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm1);
-//        JPanel centroNovoRestSSPanelForm2 = new JPanel();
-//        centroNovoRestSSPanelForm2.setLayout(new FlowLayout());
-//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2, BorderLayout.CENTER);
-//        JPanel centroNovoRestSSPanelForm2A = new JPanel();
-//        centroNovoRestSSPanelForm2A.setLayout(new FlowLayout());
-//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2A, BorderLayout.CENTER);
-//        JPanel centroNovoRestSSPanelForm3 = new JPanel();
-//        //centroNovoRestSSPanelForm3.setLayout(new FlowLayout());
-//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm3, BorderLayout.CENTER);
-//
-//        JPanel centroNovoRestSSPanelForm4 = new JPanel();
-//        centroNovoRestSSPanelForm4.setLayout(new FlowLayout());
-//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm4, BorderLayout.CENTER);
-//
-//        JPanel centroNovoRestSSPanelForm5 = new JPanel();
-//        centroNovoRestSSPanelForm5.setLayout(new FlowLayout());
-//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm5, BorderLayout.CENTER);
-//
-//        JPanel centroNovoRestSSPanelForm6 = new JPanel();
-//        centroNovoRestSSPanelForm6.setLayout(new FlowLayout());
-//        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm6, BorderLayout.CENTER);
-//
-//        centroNovoRestSSPanelForm1.add(nomeRestauranteLabel);
-//        centroNovoRestSSPanelForm1.add(nomeRestauranteText);
-//        centroNovoRestSSPanelForm1.add(emailRestauranteLabel);
-//        centroNovoRestSSPanelForm1.add(emailRestauranteText);
-//        centroNovoRestSSPanelForm2.add(moradaRestauranteLabel);
-//        centroNovoRestSSPanelForm2.add(moradaRestauranteText);
-//        centroNovoRestSSPanelForm2A.add(cidadeRestauranteLabel);
-//        centroNovoRestSSPanelForm2A.add(cidadeRestauranteText);
-//        centroNovoRestSSPanelForm2A.add(telemovelRestauranteLabel);
-//        centroNovoRestSSPanelForm2A.add(telemovelRestauranteText);
-//        /////
-//        centroNovoRestSSPanelForm3.add(lotacaoRestauranteLabel);
-//        centroNovoRestSSPanelForm3.add(esplanadaRestauranteLabel);
-//        centroNovoRestSSPanelForm3.add(esplanadaRestauranteText);
-//        centroNovoRestSSPanelForm3.add(zonaInteriorLabel);
-//        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteLabel);
-//        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteText);
-//        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteLabel);
-//        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteText);
-//
-//        centroNovoRestSSPanelForm4.add(horariosRestauranteLabel);
-//        centroNovoRestSSPanelForm4.add(horariosAlmocoRestauranteLabel);
-//        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteLabel);
-//        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteText);
-//        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteLabel);
-//        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteText);
-//        centroNovoRestSSPanelForm4.add(horariosJantarRestauranteLabel);
-//        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteLabel);
-//        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteText);
-//        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteLabel);
-//        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteText);
-//
-//        //
-//        centroNovoRestSSPanelForm5.add(usernameRestauranteLabel);
-//        centroNovoRestSSPanelForm5.add(usernameRestauranteText);
-//
-//        centroNovoRestSSPanelForm6.add(passwordRestauranteLabel);
-//        centroNovoRestSSPanelForm6.add(passwordRestauranteField);
-//        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteLabel);
-//        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteField);
-//
-//
-//        sulNovoRestauranteSubPanel.setLayout(new FlowLayout());
-//        sulNovoRestauranteSubPanel.add(cancelarRestauranteButton);
-//        sulNovoRestauranteSubPanel.add(registarRestauranteButton);
-//
-//        cancelarRestauranteButton.addActionListener(e -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, LOGIN_CARD);
-//            this.setSize(500, 180);
-//        });
-//
-//        registarRestauranteButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENURESTAURANTE_CARD);
+
+
+
+package com.company.gui;
+
+import com.company.Sistema;
+import com.company.gui.util.DateLabelFormatter;
+
+import org.jdatepicker.impl.JDatePanelImpl;
+import org.jdatepicker.impl.JDatePickerImpl;
+import org.jdatepicker.impl.UtilDateModel;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.text.ParseException;
+import java.util.Enumeration;
+import java.util.Properties;
+import java.util.ResourceBundle;
+
+import javax.swing.*;
+import javax.swing.text.MaskFormatter;
+
+public class Interface extends JFrame {
+    private static final String LOGIN_CARD = "LOGIN";
+    private static final String RESTAURANTE_CARD = "RESTAURANTE";
+    private static final String CLIENTE_CARD = "CLIENTE";
+    private static final String MENUCLIENTE_CARD = "MENU CLIENTE";
+    private static final String MCLIREST_CARD = "MENU CLIENTE - CONSULTAR RESTAURANTES";
+    private static final String MCLICOMENTARIOS_CARD = "MENU CLIENTE - COMENTÁRIOS";
+    private static final String MCLIATDADOS_CARD = "MENU CLIENTE - ACTUALIZAR DADOS";
+    private static final String MCLIHISRES_CARD = "MENU CLIENTE - HISTÓRICO DE RESERVAS";
+    private static final String MCLIMRESCOMPONTRESE_CARD = "MENU CLIENTE - HISTÓRICO DE RESERVAS: COMENTAR";
+    private static final String MCLIRESACT_CARD = "MENU CLIENTE - RESERVAS ACTIVAS";
+    private static final String MCLIFAZERRES_CARD = "MENU CLIENTE - FAZER RESERVAS";
+    private static final String MCLIFAZERRESP_CARD = "MENU CLIENTE - FAZER RESERVAS PRESENCIAL";
+    private static final String MCLIFAZERRESTA_CARD = "MENU CLIENTE - FAZER RESERVAS TAKE-AWAY";
+    private static final String MCLIRESERVAS_CARD = "MENU CLIENTE - RESERVAS";
+    private static final String MCLIMRESTFORDRESTS_CARD = "MENU CLIENTE - MENU RESTAURANTES";
+    private static final String MCLIMRESTFRESTPONT_CARD = "MENU CLIENTE - MENU RESTAURANTES - PONTUAÇÃO";
+    private static final String MCLIMRESTFORDRESTVALOR_CARD = "MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS";
+    private static final String MCLIMRESTFORDRESTVALORCARTA_CARD = "MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS - CARTA";
+    private static final String MCLIMRESTFORDRESTVALORPDIA_CARD = "MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS - PRATO DO DIA";
+    private static final String MCLIMRESTFRESTHFUNC_CARD = "MENU CLIENTE - MENU RESTAURANTES - HORÁRIO FUNCIONAMENTO";
+    private static final String MCLIMRESTFRESTLOT_CARD = "MENU CLIENTE - MENU RESTAURANTES - LOTAÇÃO";
+    private static final String MCLIMRESTFRESTCID_CARD = "MENU CLIENTE - MENU RESTAURANTES - CIDADE";
+    private static final String MCLIMCOM_CARD = "MENU CLIENTE – MENU COMENTÁRIOS";
+    private static final String MCLIMCOMFPP_CARD = "MENU CLIENTE – COMENTÁRIOS - PRÓPRIOS";
+    private static final String MCLIMCOMFCLI_CARD = "MENU CLIENTE – COMENTÁRIOS – FILTRAR POR CLIENTE";
+    private static final String MCLIMCOMFREST_CARD = "MENU CLIENTE – COMENTÁRIOS - FILTRAR POR RESTAURANTE";
+    private static final String MCLIMCOMFID_CARD = "MENU CLIENTE – COMENTÁRIOS – FILTRAR POR INTERVALO DE DATAS";
+
+
+    private static final String MENURESTAURANTE_CARD = "MENU RESTAURANTE";
+    private static final String MRESTADICIONARPRATO_CARD = "ADICIONAR PRATO";
+    private static final String MRESTACTUALIZARPRATO_CARD = "ACTUALIZAR PRATO DO DIA";
+    private static final String MRESTACTUALIZARDADOS_CARD = "MENU RESTAURANTE - ACTUALIZAR DADOS";
+    private static final String MRESTRESERV_CARD = "MENU RESTAURANTE - HISTÓRICO DE RESERVAS";
+    private static final String MRESTCOMENTARIOS_CARD = "MENU RESTAURANTE - COMENTÁRIOS";
+    private static final int LARGURA_LOGIN = 400;
+    private static final int ALTURA_LOGIN = 180;
+    private static final int LARGURA_PADRAO = 500;
+    private static final int ALTURA_PADRAO = 300;
+    private boolean passwordValido;
+    private boolean confirmarPasswordValido;
+    private Sistema sistema = new Sistema();
+    private MaskFormatter mascaraTelemovel;
+
+
+    public Interface() {
+
+        try {
+            mascaraTelemovel = new MaskFormatter("#########");
+        } catch (ParseException e) {
+            e.printStackTrace();
+        }
+
+        ImageIcon logo = new ImageIcon("logo3.png");
+        this.setIconImage(logo.getImage());
+
+
+        this.setTitle("RESERVAS DE RESTAURANTES");
+        this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
+        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
+        Container contentor = this.getContentPane();
+        contentor.setLayout(new CardLayout());
+
+        /////// SUPERPAINEIS////////
+        JPanel loginSuperPanel = new JPanel();
+        loginSuperPanel.setLayout(new BorderLayout());
+        JPanel regNovoCliSuperPanel = new JPanel();
+        regNovoCliSuperPanel.setLayout(new BorderLayout());
+        JPanel registarNovoRestSuperPanel = new JPanel();
+        registarNovoRestSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliSuperPanel = new JPanel();
+        mCliSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliRestSuperPanel = new JPanel();
+        mCliRestSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliComentariosSuperPanel = new JPanel();
+        mCliComentariosSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliAtDadosSuperPanel = new JPanel();
+        mCliAtDadosSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliHistResSuperPanel = new JPanel();
+        mCliHistResSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMResComPontReseSuperPanel = new JPanel();
+        mCliMResComPontReseSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliResActSuperPanel = new JPanel();
+        mCliResActSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliFazerResSuperPanel = new JPanel();
+        mCliFazerResSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliFazerResPSuperPanel = new JPanel();
+        mCliFazerResPSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliFazerResTASuperPanel = new JPanel();
+        mCliFazerResTASuperPanel.setLayout(new BorderLayout());
+        JPanel mCliReservasMReseSuperPanel = new JPanel();
+        mCliReservasMReseSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFOrdRestsSuperPanel = new JPanel();
+        mCliMRestFOrdRestsSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFRestPontSuperPanel = new JPanel();
+        mCliMRestFRestPontSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFOrdRestValorSuperPanel = new JPanel();
+        mCliMRestFOrdRestValorSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFOrdRestValorCartaSuperPanel = new JPanel();
+        mCliMRestFOrdRestValorCartaSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFOrdRestValorPDiaSuperPanel = new JPanel();
+        mCliMRestFOrdRestValorPDiaSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFRestHFuncSuperPanel = new JPanel();
+        mCliMRestFRestHFuncSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFRestLotSuperPanel = new JPanel();
+        mCliMRestFRestLotSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFRestCidSuperPanel = new JPanel();
+        mCliMRestFRestCidSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMComSuperPanel = new JPanel();
+        mCliMComSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMComFPPSuperPanel = new JPanel();
+        mCliMComFPPSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMComFCliSuperPanel = new JPanel();
+        mCliMComFCliSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMComFRestSuperPanel = new JPanel();
+        mCliMComFRestSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMComFIDSuperPanel = new JPanel();
+        mCliMComFIDSuperPanel.setLayout(new BorderLayout());
+
+
+        JPanel mRestSuperPanel = new JPanel();
+        mRestSuperPanel.setLayout(new BorderLayout());
+        JPanel mRestAdPratoSuperPanel = new JPanel();
+        mRestAdPratoSuperPanel.setLayout(new BorderLayout());
+        JPanel mRestAtPratoDiaSuperPanel = new JPanel();
+        mRestAtPratoDiaSuperPanel.setLayout(new BorderLayout());
+        JPanel mRestAtDadosSuperPanel = new JPanel();
+        mRestAtDadosSuperPanel.setLayout(new BorderLayout());
+        JPanel mRestReservasSuperPanel = new JPanel();
+        mRestReservasSuperPanel.setLayout(new BorderLayout());
+        JPanel mRestComentariosSuperPanel = new JPanel();
+        mRestComentariosSuperPanel.setLayout(new BorderLayout());
+
+
+        construirPanelLogin(this, contentor, loginSuperPanel);
+
+        construirPanelCliente(this, contentor, loginSuperPanel, regNovoCliSuperPanel);
+
+        construirPanelRestaurante(this, contentor, loginSuperPanel, registarNovoRestSuperPanel);
+
+        construirPanelMenuCliente(this, contentor, loginSuperPanel, mCliSuperPanel);
+
+        ////PROBLEMA - não aceita this
+        construirPanelMRest(contentor, loginSuperPanel, mRestSuperPanel);
+
+        construirPanelMRestAdPrato(this, contentor, loginSuperPanel, mRestAdPratoSuperPanel);
+
+        construirPanelMRestAtPratoDia(this, contentor, loginSuperPanel, mRestAtPratoDiaSuperPanel);
+
+        construirPanelMRestAtDados(this, contentor, loginSuperPanel, mRestAtDadosSuperPanel);
+
+        construirPanelMRestReservas(this, contentor, loginSuperPanel, mRestReservasSuperPanel);
+
+        construirPanelMRestComentarios(this, contentor, loginSuperPanel, mRestComentariosSuperPanel);
+
+        //construirPanelMCliRestaurantes(this, contentor, loginSuperPanel, mCliRestSuperPanel);
+
+        //construirPanelMCliComentarios(this, contentor, loginSuperPanel, mCliComentariosSuperPanel);
+
+        construirPanelMCliAtDados(this, contentor, loginSuperPanel, mCliAtDadosSuperPanel);
+
+        construirPanelMCliHistRes(this, contentor, loginSuperPanel, mCliHistResSuperPanel);
+
+        construirPanelMCliResAct(this, contentor, loginSuperPanel, mCliResActSuperPanel);
+
+        construirPanelMCliFazerRes(this, contentor, loginSuperPanel, mCliFazerResSuperPanel);
+
+        construirPanelMCliFazerResP(this, contentor, loginSuperPanel, mCliFazerResPSuperPanel);
+
+        construirPanelMCliFazerResTA(this, contentor, loginSuperPanel, mCliFazerResTASuperPanel);
+
+        construirPanelReservasMCliMRese(this, contentor, loginSuperPanel, mCliReservasMReseSuperPanel);
+
+        construirPanelMCliMResComPonReservas(this, contentor, loginSuperPanel, mCliMResComPontReseSuperPanel);
+
+        construirPanelMCliMRestFOrdRests(this, contentor, loginSuperPanel, mCliMRestFOrdRestsSuperPanel);
+
+        construirPanelMCliMRestFRestPont(this, contentor, loginSuperPanel, mCliMRestFRestPontSuperPanel);
+
+        construirPanelMCliMRestFOrdRestValor(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorSuperPanel);
+
+        construirPanelMCliMRestFOrdRestValorCarta(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorCartaSuperPanel);
+
+        construirPanelMCliMRestFOrdRestValorPDia(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorPDiaSuperPanel);
+
+        construirPanelMCliMRestFRestHFunc(this, contentor, loginSuperPanel, mCliMRestFRestHFuncSuperPanel);
+
+        construirPanelMCliMRestFRestLot(this, contentor, loginSuperPanel, mCliMRestFRestLotSuperPanel);
+
+        construirPanelMCliMRestFRestCid(this, contentor, loginSuperPanel, mCliMRestFRestCidSuperPanel);
+        construirPanelMCliMCom(this, contentor, loginSuperPanel, mCliMComSuperPanel);
+        construirPanelMCliMComFPP(this, contentor, loginSuperPanel, mCliMComFPPSuperPanel);
+        construirPanelMCliMComFCli(this, contentor, loginSuperPanel, mCliMComFCliSuperPanel);
+        construirPanelMCliMComFRest(this, contentor, loginSuperPanel, mCliMComFRestSuperPanel);
+        construirPanelMCliMComFID(this, contentor, loginSuperPanel, mCliMComFIDSuperPanel);
+
+        contentor.add(loginSuperPanel, LOGIN_CARD);
+        contentor.add(regNovoCliSuperPanel, CLIENTE_CARD);
+        contentor.add(registarNovoRestSuperPanel, RESTAURANTE_CARD);
+        contentor.add(mCliSuperPanel, MENUCLIENTE_CARD);
+        contentor.add(mRestSuperPanel, MENURESTAURANTE_CARD);
+        contentor.add(mRestAdPratoSuperPanel, MRESTADICIONARPRATO_CARD);
+        contentor.add(mRestAtPratoDiaSuperPanel, MRESTACTUALIZARPRATO_CARD);
+        contentor.add(mRestAtDadosSuperPanel, MRESTACTUALIZARDADOS_CARD);
+        contentor.add(mRestReservasSuperPanel, MRESTRESERV_CARD);
+        contentor.add(mRestComentariosSuperPanel, MRESTCOMENTARIOS_CARD);
+        contentor.add(mCliRestSuperPanel, MCLIREST_CARD);
+        contentor.add(mCliComentariosSuperPanel, MCLICOMENTARIOS_CARD);
+        contentor.add(mCliAtDadosSuperPanel, MCLIATDADOS_CARD);
+        contentor.add(mCliHistResSuperPanel, MCLIHISRES_CARD);
+        contentor.add(mCliResActSuperPanel, MCLIRESACT_CARD);
+        contentor.add(mCliFazerResSuperPanel, MCLIFAZERRES_CARD);
+        contentor.add(mCliFazerResPSuperPanel, MCLIFAZERRESP_CARD);
+        contentor.add(mCliFazerResTASuperPanel, MCLIFAZERRESTA_CARD);
+        contentor.add(mCliReservasMReseSuperPanel, MCLIRESERVAS_CARD);
+        contentor.add(mCliMResComPontReseSuperPanel, MCLIMRESCOMPONTRESE_CARD);
+        contentor.add(mCliMRestFOrdRestsSuperPanel, MCLIMRESTFORDRESTS_CARD);
+        contentor.add(mCliMRestFRestPontSuperPanel, MCLIMRESTFRESTPONT_CARD);
+        contentor.add(mCliMRestFOrdRestValorSuperPanel, MCLIMRESTFORDRESTVALOR_CARD);
+        contentor.add(mCliMRestFOrdRestValorCartaSuperPanel, MCLIMRESTFORDRESTVALORCARTA_CARD);
+        contentor.add(mCliMRestFOrdRestValorPDiaSuperPanel, MCLIMRESTFORDRESTVALORPDIA_CARD);
+        contentor.add(mCliMRestFRestHFuncSuperPanel, MCLIMRESTFRESTHFUNC_CARD);
+        contentor.add(mCliMRestFRestLotSuperPanel, MCLIMRESTFRESTLOT_CARD);
+        contentor.add(mCliMRestFRestCidSuperPanel, MCLIMRESTFRESTCID_CARD);
+        contentor.add(mCliMComSuperPanel, MCLIMCOM_CARD);
+        contentor.add(mCliMComFPPSuperPanel, MCLIMCOMFPP_CARD);
+        contentor.add(mCliMComFCliSuperPanel, MCLIMCOMFCLI_CARD);
+        contentor.add(mCliMComFRestSuperPanel, MCLIMCOMFREST_CARD);
+        contentor.add(mCliMComFIDSuperPanel, MCLIMCOMFID_CARD);
+    }
+
+
+    private void construirPanelLogin(Interface janela, Container contentor, JPanel loginSuperPanel) {
+        ////Criação dos subpaineis norte, centro e sul
+        JPanel norteLoginSubPanel = new JPanel();
+        JPanel centroLoginSubPanel = new JPanel();
+        JPanel sulLoginSubPanel = new JPanel();
+
+        JButton ptEnLoginButton = new JButton("PT/EN");
+        ptEnLoginButton.setSize(15, 5);
+        JButton loginButton = new JButton(LOGIN_CARD);
+        loginButton.setSize(15, 5);
+        JButton clienteNovoButton = new JLinkButton("Novo Cliente");
+        JButton restauranteNovoButton = new JLinkButton("Novo Restaurante");
+
+        JLabel titleLoginLabel = new JLabel("LOGIN");
+        JLabel usernameLoginLabel = new JLabel("Username");
+        JLabel passwordLoginLabel = new JLabel("Password");
+
+        JTextField usernameLoginText = new JTextField(20);
+
+        JPasswordField passwordLoginField = new JPasswordField(20);
+
+///Layout dos subPaineis north, centro e south
+        norteLoginSubPanel.setLayout(new BorderLayout());
+        centroLoginSubPanel.setLayout(new BorderLayout());
+        sulLoginSubPanel.setLayout(new BorderLayout());
+
+//Adicionar subPaineis no superpainel Login
+        loginSuperPanel.add(norteLoginSubPanel, BorderLayout.NORTH);
+        loginSuperPanel.add(centroLoginSubPanel, BorderLayout.CENTER);
+        loginSuperPanel.add(sulLoginSubPanel, BorderLayout.SOUTH);
+
+/// Criação dos subpaineis nos subpaineis norte, centro e sul
+        JPanel norteLoginSSPanelTitle = new JPanel();
+        JPanel centroLoginSSPanelForm = new JPanel();
+        JPanel centroLoginSSPanelButton = new JPanel();
+        JPanel sulLoginSSPanelLinks = new JPanel();
+
+//Layout dos subpaineis dos subpaineis norte, centro e sul
+        norteLoginSubPanel.add(norteLoginSSPanelTitle, BorderLayout.CENTER);
+        norteLoginSubPanel.add(ptEnLoginButton, BorderLayout.EAST);
+        norteLoginSSPanelTitle.setLayout(new FlowLayout());
+        norteLoginSSPanelTitle.add(titleLoginLabel);
+
+        centroLoginSubPanel.add(centroLoginSSPanelForm, BorderLayout.NORTH);
+        centroLoginSSPanelForm.setLayout(new GridLayout(2, 2));
+        centroLoginSSPanelForm.add(usernameLoginLabel);
+        centroLoginSSPanelForm.add(usernameLoginText);
+        centroLoginSSPanelForm.add(passwordLoginLabel);
+        centroLoginSSPanelForm.add(passwordLoginField);
+        centroLoginSubPanel.add(centroLoginSSPanelButton, BorderLayout.SOUTH);
+        centroLoginSSPanelButton.setLayout(new FlowLayout());
+        centroLoginSSPanelButton.add(loginButton);
+
+        sulLoginSubPanel.add(sulLoginSSPanelLinks);
+        sulLoginSSPanelLinks.setLayout(new BorderLayout());
+        sulLoginSSPanelLinks.add(clienteNovoButton, BorderLayout.EAST);
+        sulLoginSSPanelLinks.add(restauranteNovoButton, BorderLayout.WEST);
+
+
+        clienteNovoButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, CLIENTE_CARD);
+            janela.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos
+            // no actionlistener)
+        });
+
+        restauranteNovoButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, RESTAURANTE_CARD);
+            janela.setSize(LARGURA_PADRAO, 350);
+            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos
+            // no actionlistener)
+        });
+    }
+
+    ////////////////////NOVO CLIENTE/////////////////////////
+    private void construirPanelCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoClienteSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteNovoClienteSubPanel = new JPanel();
+        norteNovoClienteSubPanel.setLayout(new BorderLayout());
+        JPanel centroNovoClienteSubPanel = new JPanel();
+        JPanel sulNovoClienteSubPanel = new JPanel();
+
+        JLabel registarNovoClienteLabel = new JLabel("NOVO CLIENTE");
+        registarNovoClienteLabel.setForeground(Color.BLUE);
+        JLabel nomeClienteLabel = new JLabel("Nome");
+        //nomeClienteLabel.setBounds(50,80,100,20);
+        JLabel emailClienteLabel = new JLabel("E-mail");
+        JLabel moradaClienteLabel = new JLabel("Morada");
+        JLabel telemovelClienteLabel = new JLabel("Telemóvel");
+        JLabel usernameClienteLabel = new JLabel("Username");
+        JLabel passwordClienteLabel = new JLabel("Password ");
+        JLabel confirmarPasswordClienteLabel = new JLabel("Confirmar password ");
+
+        JTextField nomeClienteText = new JTextField(20);
+        nomeClienteText.setMargin(new Insets(3, 3, 3, 3));
+        //nomeClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));
+        JTextField emailClienteText = new JTextField(20);
+        //emailClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));
+        JTextField moradaClienteText = new JTextField(20);
+        JTextField telemovelClienteText = new JFormattedTextField(mascaraTelemovel);
+        telemovelClienteText.setColumns(20);
+        JTextField usernameClienteText = new JTextField(20);
+
+        JPasswordField passwordClienteField = new JPasswordField(20);
+        JPasswordField confirmarPassawordClienteField = new JPasswordField(20);
+
+        JButton ptEnNovoClienteButton = new JButton("PT/EN");
+        JButton cancelarClienteButton = new JButton("CANCELAR");
+        JButton registarClienteButton = new JButton("REGISTAR");
+
+        //todo não deu certo
+        //Define as máscaras
+        MaskFormatter mascaraTelCliente = null;
+
+        try {
+            mascaraTelCliente = new MaskFormatter("(##)####-####");
+
+        } catch (ParseException excp) {
+            System.err.println("Erro na formatação: " + excp.getMessage());
+            System.exit(-1);
+        }
+
+        //Seta as máscaras nos objetos JFormattedTextField
+        JFormattedTextField telClienteT = new JFormattedTextField(mascaraTelCliente);
+        //telClienteT.setBounds(150,80,100,20);
+
+
+        registarNovoClienteSuperPanel.add(norteNovoClienteSubPanel, "North");
+        registarNovoClienteSuperPanel.add(centroNovoClienteSubPanel, "Center");
+        registarNovoClienteSuperPanel.add(sulNovoClienteSubPanel, "South");
+
+        JPanel norteNovoClienteSSPanel = new JPanel();
+        norteNovoClienteSSPanel.setLayout(new FlowLayout());
+        norteNovoClienteSSPanel.add(registarNovoClienteLabel);
+        norteNovoClienteSubPanel.add(norteNovoClienteSSPanel, BorderLayout.CENTER);
+        norteNovoClienteSubPanel.add(ptEnNovoClienteButton, BorderLayout.EAST);
+
+        JPanel centroNovoClienteSSPanelForm = new JPanel();
+        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));
+        centroNovoClienteSubPanel.add(centroNovoClienteSSPanelForm);
+        centroNovoClienteSSPanelForm.add(nomeClienteLabel);
+        centroNovoClienteSSPanelForm.add(nomeClienteText);
+        centroNovoClienteSSPanelForm.add(emailClienteLabel);
+        centroNovoClienteSSPanelForm.add(emailClienteText);
+        centroNovoClienteSSPanelForm.add(moradaClienteLabel);
+        centroNovoClienteSSPanelForm.add(moradaClienteText);
+        centroNovoClienteSSPanelForm.add(telemovelClienteLabel);
+        centroNovoClienteSSPanelForm.add(telemovelClienteText);
+        centroNovoClienteSSPanelForm.add(usernameClienteLabel);
+        centroNovoClienteSSPanelForm.add(usernameClienteText);
+        centroNovoClienteSSPanelForm.add(passwordClienteLabel);
+        centroNovoClienteSSPanelForm.add(passwordClienteField);
+        centroNovoClienteSSPanelForm.add(confirmarPasswordClienteLabel);
+        centroNovoClienteSSPanelForm.add(confirmarPassawordClienteField);
+
+        sulNovoClienteSubPanel.setLayout(new FlowLayout());
+        sulNovoClienteSubPanel.add(cancelarClienteButton);
+        sulNovoClienteSubPanel.add(registarClienteButton);
+
+
+        registarClienteButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        cancelarClienteButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
+
+        });
+    }
+
+
+    ////// MENU CLIENTE//////////
+    private void construirPanelMenuCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMenuClienteSubPanel = new JPanel();
+        norteMenuClienteSubPanel.setLayout(new BorderLayout());
+        JPanel centroMenuClienteSubPanel = new JPanel();
+        JPanel sulMenuClienteSubPanel = new JPanel();
+
+        JLabel registarNovoClienteLabel = new JLabel("MENU CLIENTE");
+        registarNovoClienteLabel.setForeground(Color.BLUE);
+
+        JButton ptEnMenuClienteButton = new JButton("PT/EN");
+        ////
+        JButton restaurantesMCliButton = new JButton("RESTAURANTES");
+        JButton comentariosMCliButton = new JButton("COMENTÁRIOS");
+        JButton reservasMCliButton = new JButton("RESERVAS");
+
+        JButton atualDadosMCliButton = new JButton("ACTUALIZAR DADOS");
+
+        ///
+        //JButton cancelarMenuClienteButton = new JButton("CANCELAR");
+        JButton logoutMenuClienteButton = new JButton("LOGOUT");
+
+        mCliSuperPanel.add(norteMenuClienteSubPanel, "North");
+        mCliSuperPanel.add(centroMenuClienteSubPanel, "Center");
+        mCliSuperPanel.add(sulMenuClienteSubPanel, "South");
+
+        JPanel norteClienteSubPanel = new JPanel();
+        norteClienteSubPanel.setLayout(new FlowLayout());
+        norteClienteSubPanel.add(registarNovoClienteLabel);
+        norteMenuClienteSubPanel.add(norteClienteSubPanel, BorderLayout.CENTER);
+        norteMenuClienteSubPanel.add(ptEnMenuClienteButton, BorderLayout.EAST);
+
+        JPanel centroNovoClienteSSPanelForm = new JPanel();
+        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));
+        centroMenuClienteSubPanel.add(centroNovoClienteSSPanelForm);
+        centroNovoClienteSSPanelForm.add(restaurantesMCliButton);
+        centroNovoClienteSSPanelForm.add(comentariosMCliButton);
+        centroNovoClienteSSPanelForm.add(reservasMCliButton);
+
+        centroNovoClienteSSPanelForm.add(atualDadosMCliButton);
+
+        sulMenuClienteSubPanel.setLayout(new FlowLayout());
+        sulMenuClienteSubPanel.add(logoutMenuClienteButton);
+
+        comentariosMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMCOM_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        restaurantesMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        reservasMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        atualDadosMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIATDADOS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+
+        logoutMenuClienteButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(400, 180);
+        });
+
+    }
+
+
+    ////// MENU CLIENTE – MENU RESERVAS//////////
+    private void construirPanelReservasMCliMRese
+    (Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliReservasMReseSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMReseSubPanel = new JPanel();
+        norteMCliMReseSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMReseSubPanel = new JPanel();
+        JPanel sulMCliMReseSubPanel = new JPanel();
+
+        JLabel registarNovoMCliMReseLabel = new JLabel("MENU CLIENTE - RESERVAS");
+        registarNovoMCliMReseLabel.setForeground(Color.BLUE);
+
+        JButton ptEnMCliMReseButton = new JButton("PT/EN");
+        JButton histReseComPonMCliMReseButton = new JButton("HISTÓRICO");
+        JButton ReservasActMCliMReseButton = new JButton("RESERVAS ACTIVAS");
+        JButton fazerReservasMCliMReseButton = new JButton("FAZER RESERVAS");
+        JButton voltarMCliMReseButton = new JButton("MENU CLIENTE");
+
+        JButton logoutMCliMReseButton = new JButton("LOGOUT");
+
+        mCliReservasMReseSuperPanel.add(norteMCliMReseSubPanel, "North");
+        mCliReservasMReseSuperPanel.add(centroMCliMReseSubPanel, "Center");
+        mCliReservasMReseSuperPanel.add(sulMCliMReseSubPanel, "South");
+
+        JPanel norteMCliMReseSSPanel = new JPanel();
+        norteMCliMReseSSPanel.setLayout(new FlowLayout());
+        norteMCliMReseSSPanel.add(registarNovoMCliMReseLabel);
+        norteMCliMReseSubPanel.add(norteMCliMReseSSPanel, BorderLayout.CENTER);
+        norteMCliMReseSubPanel.add(ptEnMCliMReseButton, BorderLayout.EAST);
+
+        JPanel centroNovoMCliMReseSSPanel = new JPanel();
+        centroNovoMCliMReseSSPanel.setLayout(new GridLayout(7, 2));
+        centroMCliMReseSubPanel.add(centroNovoMCliMReseSSPanel);
+
+        centroNovoMCliMReseSSPanel.add(histReseComPonMCliMReseButton);
+        centroNovoMCliMReseSSPanel.add(ReservasActMCliMReseButton);
+        centroNovoMCliMReseSSPanel.add(fazerReservasMCliMReseButton);
+
+        sulMCliMReseSubPanel.setLayout(new FlowLayout());
+        sulMCliMReseSubPanel.add(logoutMCliMReseButton);
+        sulMCliMReseSubPanel.add(voltarMCliMReseButton);
+
+
+        histReseComPonMCliMReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIHISRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        ReservasActMCliMReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESACT_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        fazerReservasMCliMReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        logoutMCliMReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(400, 180);
+        });
+
+    }
+
+
+    //////MENU CLIENTE – RESERVAS - HISTÓRICO//////////
+
+    private void construirPanelMCliHistRes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliHistResSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliHistResSubPanel = new JPanel();
+        norteMCliHistResSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliHistResSubPanel = new JPanel();
+        JPanel sulMCliHistResSubPanel = new JPanel();
+
+        JLabel mCliTitHistResLabel = new JLabel("MENU CLIENTE - HISTÓRICO DE RESERVAS");
+
+        JLabel mCliIdHistResLabel = new JLabel("ID");
+
+        String[] mCliIdHistRes = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
+        JComboBox arrayMCliIdHistResCBox = new JComboBox(mCliIdHistRes);
+
+//todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, comentar e pontuar
+        String[] nomeColunasMCliHistRes = new String[]{
+                "ID", "DATA", "RESTAURANTE"
+        };
+
+        Object[][] data = new Object[][]{
+                {"ID", "DATA", "RESTAURANTE"},
+                {1, "dd/MM/yyy", "A"},
+                {1, "dd/MM/yyy", "B"},
+                {3, "dd/MM/yyy", "C"},
+        };
+        //criação da tabela
+        JTable tabelaMCliHistRes = new JTable(data, nomeColunasMCliHistRes);
+
+        JButton ptEnMCliRestButton = new JButton("PT/EN");
+        JButton voltarMCliHistResButton = new JButton("MENU CLIENTE");
+        JButton comentarMCliHistResButton = new JButton("COMENTAR");
+        JButton retornarMCliHistResButton = new JButton("VOLTAR");
+
+        mCliHistResSuperPanel.add(norteMCliHistResSubPanel, "North");
+        mCliHistResSuperPanel.add(centroMCliHistResSubPanel, "Center");
+        mCliHistResSuperPanel.add(sulMCliHistResSubPanel, "South");
+
+        JPanel norteMCliHistResSSPanel = new JPanel();
+        norteMCliHistResSSPanel.setLayout(new FlowLayout());
+        norteMCliHistResSSPanel.add(mCliTitHistResLabel);
+        norteMCliHistResSubPanel.add(norteMCliHistResSSPanel, BorderLayout.CENTER);
+        norteMCliHistResSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);
+
+        JPanel centroMCliHistResSSPanel = new JPanel();
+        centroMCliHistResSSPanel.setLayout(new FlowLayout());
+        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliHistResSSPanel1 = new JPanel();
+        centroMCliHistResSSPanel1.setLayout(new FlowLayout());
+        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel1, BorderLayout.WEST);
+
+        centroMCliHistResSSPanel.add(tabelaMCliHistRes);
+        centroMCliHistResSSPanel1.add(mCliIdHistResLabel);
+        centroMCliHistResSSPanel1.add(arrayMCliIdHistResCBox);
+
+        sulMCliHistResSubPanel.setLayout(new FlowLayout());
+        sulMCliHistResSubPanel.add(voltarMCliHistResButton);
+        sulMCliHistResSubPanel.add(retornarMCliHistResButton);
+        sulMCliHistResSubPanel.add(comentarMCliHistResButton);
+
+        retornarMCliHistResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        //todo falta ativar este botão
+        comentarMCliHistResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESCOMPONTRESE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliHistResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+
+    //todo espaço para escrever comentário pode ter barra de rolagem? ativar o botão OK
+    /////////// MENU CLIENTE - MENU RESERVA - HISTÓRICO DE RESERVAS - COMENTAR UMA RESERVA///////
+    private void construirPanelMCliMResComPonReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMResComPontReseSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliRestComPonReseSubPanel = new JPanel();
+        norteMCliRestComPonReseSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliRestComPonReseSubPanel = new JPanel();
+        JPanel sulMCliRestComPonReseSubPanel = new JPanel();
+
+        JRadioButton umPont = new JRadioButton("1");
+        JRadioButton doisPont = new JRadioButton("2");
+        JRadioButton tresPont = new JRadioButton("3");
+        JRadioButton quatroPont = new JRadioButton("4");
+        JRadioButton cincoPont = new JRadioButton("5");
+
+        JLabel mCliRestComPonReseLabel = new JLabel("MENU CLIENTE – HISTÓRICO DE RESERVAS - COMENTAR");
+        JLabel restMCliMReseComPonLabel = new JLabel("RESTAURANTE");
+        JLabel dataMCliMReseComPonLabel = new JLabel("DATA DA RESERVA");
+        JLabel pontMCliRestComPonReseLabel = new JLabel("ATRIBUIR PONTUAÇÃO:");
+
+        JTextField restMCliMReseComPonText = new JTextField(20);
+        JTextField dataMCliMReseComPonText = new JTextField(8);
+        JTextArea novoComMCliMReseComPonTextA = new JTextArea(5, 50);
+        //novoComMCliMReseComPonTextA.setSize(100, 80);
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(umPont);
+        group.add(doisPont);
+        group.add(tresPont);
+        group.add(quatroPont);
+        group.add(cincoPont);
+
+        JButton ptEnMCliRestComPonReseButton = new JButton("PT/EN");
+        JButton voltarMCliRestComPonReseButton = new JButton("MENU CLIENTE");
+        JButton okMCliRestComPonReseButton = new JButton("OK");
+        JButton retornarMCliRestComPonReseButton = new JButton("VOLTAR");
+
+        mCliMResComPontReseSuperPanel.add(norteMCliRestComPonReseSubPanel, "North");
+        mCliMResComPontReseSuperPanel.add(centroMCliRestComPonReseSubPanel, "Center");
+        mCliMResComPontReseSuperPanel.add(sulMCliRestComPonReseSubPanel, "South");
+
+        JPanel norteMCliRestComPonReseSSPanel = new JPanel();
+        norteMCliRestComPonReseSSPanel.setLayout(new FlowLayout());
+        norteMCliRestComPonReseSSPanel.add(mCliRestComPonReseLabel);
+        norteMCliRestComPonReseSubPanel.add(norteMCliRestComPonReseSSPanel, BorderLayout.CENTER);
+        norteMCliRestComPonReseSubPanel.add(ptEnMCliRestComPonReseButton, BorderLayout.EAST);
+
+        JPanel centroMCliRestComPonReseSSPanel = new JPanel();
+        centroMCliRestComPonReseSSPanel.setLayout(new FlowLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel1 = new JPanel();
+        centroMCliRestComPonReseSSPanel1.setLayout(new FlowLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel1, BorderLayout.CENTER);
+
+        JPanel centroMCliRestComPonReseSSPanel2 = new JPanel();
+        centroMCliRestComPonReseSSPanel2.setLayout(new GridLayout(1, 1));
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel2);
+
+        JPanel centroMCliRestComPonReseSSPanel3 = new JPanel();
+        centroMCliRestComPonReseSSPanel3.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel3, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel4 = new JPanel();
+        centroMCliRestComPonReseSSPanel4.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel4, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel5 = new JPanel();
+        centroMCliRestComPonReseSSPanel5.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel5, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel6 = new JPanel();
+        centroMCliRestComPonReseSSPanel6.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel6, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel7 = new JPanel();
+        centroMCliRestComPonReseSSPanel7.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel7, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel8 = new JPanel();
+        centroMCliRestComPonReseSSPanel8.setLayout(new GridLayout(1, 2));
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel8);
+        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonLabel);
+        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonText);
+        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonLabel);
+        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonText);
+        centroMCliRestComPonReseSSPanel1.add(novoComMCliMReseComPonTextA);
+
+        centroMCliRestComPonReseSSPanel2.add(pontMCliRestComPonReseLabel);
+        centroMCliRestComPonReseSSPanel3.add(umPont);
+        centroMCliRestComPonReseSSPanel4.add(doisPont);
+        centroMCliRestComPonReseSSPanel5.add(tresPont);
+        centroMCliRestComPonReseSSPanel6.add(quatroPont);
+        centroMCliRestComPonReseSSPanel7.add(cincoPont);
+
+        sulMCliRestComPonReseSubPanel.setLayout(new FlowLayout());
+        sulMCliRestComPonReseSubPanel.add(voltarMCliRestComPonReseButton);
+        sulMCliRestComPonReseSubPanel.add(retornarMCliRestComPonReseButton);
+        sulMCliRestComPonReseSubPanel.add(okMCliRestComPonReseButton);
+
+        retornarMCliRestComPonReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        voltarMCliRestComPonReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        //todo ver os encaminhamentos
+        okMCliRestComPonReseButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+    }
+
+
+    ////////////////////NOVO RESTAURANTE/////////////////////////
+    private void construirPanelRestaurante(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoRestauranteSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteNovoRestauranteSubPanel = new JPanel();
+        norteNovoRestauranteSubPanel.setLayout(new BorderLayout());
+        JPanel centroNovoRestauranteSubPanel = new JPanel();
+        centroNovoRestauranteSubPanel.setLayout(new FlowLayout());
+        JPanel sulNovoRestauranteSubPanel = new JPanel();
+
+        JLabel registarNovoRestauranteLabel = new JLabel("NOVO RESTAURANTE");
+        registarNovoRestauranteLabel.setForeground(Color.RED);
+        JLabel nomeRestauranteLabel = new JLabel("Nome");
+        JLabel emailRestauranteLabel = new JLabel("E-mail");
+        JLabel moradaRestauranteLabel = new JLabel("Morada");
+        JLabel cidadeRestauranteLabel = new JLabel("Cidade");
+        JLabel telemovelRestauranteLabel = new JLabel("Telemóvel");
+///////////////////////
+        JLabel lotacaoRestauranteLabel = new JLabel("Lotação:");
+        JLabel esplanadaRestauranteLabel = new JLabel("Esplanada");
+        JLabel zonaInteriorLabel = new JLabel("Zona Interior:");
+        JLabel zonaInteriorNFumRestauranteLabel = new JLabel("Ñ Fumadores");
+        JLabel zonaInteriorFumRestauranteLabel = new JLabel("Fumadores");
+        JLabel horariosRestauranteLabel = new JLabel("Horários:");
+        JLabel horariosAlmocoRestauranteLabel = new JLabel("Almoço:");
+        JLabel horarioAlmocoInicioRestauranteLabel = new JLabel("Início");
+        JLabel horarioAlmocoFimRestauranteLabel = new JLabel("Fim");
+        JLabel horariosJantarRestauranteLabel = new JLabel("Jantar:");
+        JLabel horarioJantarInicioRestauranteLabel = new JLabel("Início");
+        JLabel horarioJantarFimRestauranteLabel = new JLabel("Fim");
+//////////////////////////////////
+
+
+        JLabel usernameRestauranteLabel = new JLabel("Username");
+        JLabel passwordRestauranteLabel = new JLabel("Password ");
+        JLabel confirmarPasswordRestauranteLabel = new JLabel("Confirmar password ");
+
+        JTextField nomeRestauranteText = new JTextField(18);
+        nomeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField emailRestauranteText = new JTextField(18);
+        emailRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField moradaRestauranteText = new JTextField(20);
+        moradaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField cidadeRestauranteText = new JTextField(15);
+        cidadeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField telemovelRestauranteText = new JFormattedTextField(mascaraTelemovel);
+        telemovelRestauranteText.setColumns(8);
+        telemovelRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        ////////
+        JTextField esplanadaRestauranteText = new JTextField(3);
+        esplanadaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField zonaInteriorNFumRestauranteText = new JTextField(3);
+        zonaInteriorNFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField zonaInteriorFumRestauranteText = new JTextField(3);
+        zonaInteriorFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField horarioAlmocoInicioRestauranteText = new JTextField(3);
+        horarioAlmocoInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField horarioAlmocoFimRestauranteText = new JTextField(3);
+        horarioAlmocoFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField horarioJantarInicioRestauranteText = new JTextField(3);
+        horarioJantarInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField horarioJantarFimRestauranteText = new JTextField(3);
+        horarioJantarFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        ///////
+        JTextField usernameRestauranteText = new JTextField(20);
+        usernameRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+
+        JPasswordField passwordRestauranteField = new JPasswordField(15);
+        passwordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JPasswordField confirmarPasswordRestauranteField = new JPasswordField(15);
+        confirmarPasswordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+
+        JButton ptEnNovoRestauranteButton = new JButton("PT/EN");
+        JButton cancelarRestauranteButton = new JButton("CANCELAR");
+        JButton registarRestauranteButton = new JButton("REGISTAR");
+
+        registarNovoRestauranteSuperPanel.add(norteNovoRestauranteSubPanel, "North");
+        registarNovoRestauranteSuperPanel.add(centroNovoRestauranteSubPanel, "Center");
+        registarNovoRestauranteSuperPanel.add(sulNovoRestauranteSubPanel, "South");
+
+//        JPanel norteSupMRestSubPanel = new JPanel();
+//        norteSupMRestSubPanel.setLayout(new FlowLayout());
+//        norteNovoRestauranteSubPanel.add(norteSupMRestSubPanel, BorderLayout.CENTER);
+//        norteSupMRestSubPanel.add(registarNovoRestauranteLabel);
+//        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);
+
+        JPanel norteNovoRestSSPanel = new JPanel();
+        norteNovoRestSSPanel.setLayout(new FlowLayout());
+        norteNovoRestSSPanel.add(registarNovoRestauranteLabel);
+        norteNovoRestauranteSubPanel.add(norteNovoRestSSPanel, BorderLayout.CENTER);
+        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);
+
+        JPanel centroNovoRestSSPanelForm1 = new JPanel();
+        centroNovoRestSSPanelForm1.setLayout(new FlowLayout());
+        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm1);
+        JPanel centroNovoRestSSPanelForm2 = new JPanel();
+        centroNovoRestSSPanelForm2.setLayout(new FlowLayout());
+        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2, BorderLayout.CENTER);
+        JPanel centroNovoRestSSPanelForm2A = new JPanel();
+        centroNovoRestSSPanelForm2A.setLayout(new FlowLayout());
+        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2A, BorderLayout.CENTER);
+        JPanel centroNovoRestSSPanelForm3 = new JPanel();
+        //centroNovoRestSSPanelForm3.setLayout(new FlowLayout());
+        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm3, BorderLayout.CENTER);
+
+        JPanel centroNovoRestSSPanelForm4 = new JPanel();
+        centroNovoRestSSPanelForm4.setLayout(new FlowLayout());
+        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm4, BorderLayout.CENTER);
+
+        JPanel centroNovoRestSSPanelForm5 = new JPanel();
+        centroNovoRestSSPanelForm5.setLayout(new FlowLayout());
+        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm5, BorderLayout.CENTER);
+
+        JPanel centroNovoRestSSPanelForm6 = new JPanel();
+        centroNovoRestSSPanelForm6.setLayout(new FlowLayout());
+        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm6, BorderLayout.CENTER);
+
+        centroNovoRestSSPanelForm1.add(nomeRestauranteLabel);
+        centroNovoRestSSPanelForm1.add(nomeRestauranteText);
+        centroNovoRestSSPanelForm1.add(emailRestauranteLabel);
+        centroNovoRestSSPanelForm1.add(emailRestauranteText);
+        centroNovoRestSSPanelForm2.add(moradaRestauranteLabel);
+        centroNovoRestSSPanelForm2.add(moradaRestauranteText);
+        centroNovoRestSSPanelForm2A.add(cidadeRestauranteLabel);
+        centroNovoRestSSPanelForm2A.add(cidadeRestauranteText);
+        centroNovoRestSSPanelForm2A.add(telemovelRestauranteLabel);
+        centroNovoRestSSPanelForm2A.add(telemovelRestauranteText);
+        /////
+        centroNovoRestSSPanelForm3.add(lotacaoRestauranteLabel);
+        centroNovoRestSSPanelForm3.add(esplanadaRestauranteLabel);
+        centroNovoRestSSPanelForm3.add(esplanadaRestauranteText);
+        centroNovoRestSSPanelForm3.add(zonaInteriorLabel);
+        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteLabel);
+        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteText);
+        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteLabel);
+        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteText);
+
+        centroNovoRestSSPanelForm4.add(horariosRestauranteLabel);
+        centroNovoRestSSPanelForm4.add(horariosAlmocoRestauranteLabel);
+        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteLabel);
+        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteText);
+        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteLabel);
+        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteText);
+        centroNovoRestSSPanelForm4.add(horariosJantarRestauranteLabel);
+        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteLabel);
+        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteText);
+        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteLabel);
+        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteText);
+
+        //
+        centroNovoRestSSPanelForm5.add(usernameRestauranteLabel);
+        centroNovoRestSSPanelForm5.add(usernameRestauranteText);
+
+        centroNovoRestSSPanelForm6.add(passwordRestauranteLabel);
+        centroNovoRestSSPanelForm6.add(passwordRestauranteField);
+        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteLabel);
+        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteField);
+
+
+        sulNovoRestauranteSubPanel.setLayout(new FlowLayout());
+        sulNovoRestauranteSubPanel.add(cancelarRestauranteButton);
+        sulNovoRestauranteSubPanel.add(registarRestauranteButton);
+
+        cancelarRestauranteButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+
+        registarRestauranteButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(500, 300);
+
+        });
+    }
+
+    //////MENU RESTAURANTE////////
+    private void construirPanelMRest(Container contentor, JPanel loginSuperPanel, JPanel menuRestauranteSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMenuRestauranteSubPanel = new JPanel();
+        norteMenuRestauranteSubPanel.setLayout(new BorderLayout());
+        JPanel centroMenuRestauranteSubPanel = new JPanel();
+        JPanel sulMenuRestauranteSubPanel = new JPanel();
+
+        JLabel registarNovoRestauranteLabel = new JLabel("MENU RESTAURANTE");
+        registarNovoRestauranteLabel.setForeground(Color.RED);
+
+        JButton ptEnMenuRestauranteButton = new JButton("PT/EN");
+        ////
+        JButton mRestAdicionarPratoButton = new JButton("ADICIONAR PRATO");
+        JButton mRestActualizarPratoDiaButton = new JButton("ACTUALIZAR PRATO DO DIA");
+        JButton mRestActualizarDadosButton = new JButton("ACTUALIZAR DADOS");
+        JButton mRestReservasButton = new JButton("RESERVAS");
+        JButton mRestConsultarComentariosButton = new JButton("COMENTÁRIOS");
+        JButton pontuacaoMedia = new JButton("PONTUAÇÃO MÉDIA");
+
+
+        ///
+        //JButton cancelarMenuRestauranteButton = new JButton("CANCELAR");
+        JButton logoutMenuRestauranteButton = new JButton("LOGOUT");
+
+        menuRestauranteSuperPanel.add(norteMenuRestauranteSubPanel, "North");
+        menuRestauranteSuperPanel.add(centroMenuRestauranteSubPanel, "Center");
+        menuRestauranteSuperPanel.add(sulMenuRestauranteSubPanel, "South");
+
+        JPanel norteMenuRestauranteSSPanel = new JPanel();
+        norteMenuRestauranteSSPanel.setLayout(new FlowLayout());
+        norteMenuRestauranteSSPanel.add(registarNovoRestauranteLabel);
+        norteMenuRestauranteSubPanel.add(norteMenuRestauranteSSPanel, BorderLayout.CENTER);
+        norteMenuRestauranteSubPanel.add(ptEnMenuRestauranteButton, BorderLayout.EAST);
+
+        JPanel centroNovoRestauranteSSPanelForm = new JPanel();
+        centroNovoRestauranteSSPanelForm.setLayout(new GridLayout(7, 1));
+        centroMenuRestauranteSubPanel.add(centroNovoRestauranteSSPanelForm);
+        centroNovoRestauranteSSPanelForm.add(mRestAdicionarPratoButton);
+        centroNovoRestauranteSSPanelForm.add(mRestActualizarPratoDiaButton);
+        centroNovoRestauranteSSPanelForm.add(mRestActualizarDadosButton);
+        centroNovoRestauranteSSPanelForm.add(mRestReservasButton);
+        centroNovoRestauranteSSPanelForm.add(mRestConsultarComentariosButton);
+        centroNovoRestauranteSSPanelForm.add(pontuacaoMedia);
+
+        sulMenuRestauranteSubPanel.setLayout(new FlowLayout());
+        //sulMenuRestauranteSubPanel.add(cancelarMenuRestauranteButton);
+        sulMenuRestauranteSubPanel.add(logoutMenuRestauranteButton);
+
+//        cancelarMenuRestauranteButton.addActionListener(a -> {
+//           CardLayout cl = (CardLayout) contentor.getLayout();
+//           cl.show(contentor, LOGIN_CARD);
 //            this.setSize(500, 300);
 //
-//        });
-//    }
-//
-//    //////MENU RESTAURANTE////////
-//    private void construirPanelMRest(Container contentor, JPanel loginSuperPanel, JPanel menuRestauranteSuperPanel) {
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMenuRestauranteSubPanel = new JPanel();
-//        norteMenuRestauranteSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMenuRestauranteSubPanel = new JPanel();
-//        JPanel sulMenuRestauranteSubPanel = new JPanel();
-//
-//        JLabel registarNovoRestauranteLabel = new JLabel("MENU RESTAURANTE");
-//        registarNovoRestauranteLabel.setForeground(Color.RED);
-//
-//        JButton ptEnMenuRestauranteButton = new JButton("PT/EN");
-//        ////
-//        JButton mRestAdicionarPratoButton = new JButton("ADICIONAR PRATO");
-//        JButton mRestActualizarPratoDiaButton = new JButton("ACTUALIZAR PRATO DO DIA");
-//        JButton mRestActualizarDadosButton = new JButton("ACTUALIZAR DADOS");
-//        JButton mRestReservasButton = new JButton("RESERVAS");
-//        JButton mRestConsultarComentariosButton = new JButton("COMENTÁRIOS");
-//        JButton pontuacaoMedia = new JButton("PONTUAÇÃO MÉDIA");
-//
-//
-//        ///
-//        //JButton cancelarMenuRestauranteButton = new JButton("CANCELAR");
-//        JButton logoutMenuRestauranteButton = new JButton("LOGOUT");
-//
-//        menuRestauranteSuperPanel.add(norteMenuRestauranteSubPanel, "North");
-//        menuRestauranteSuperPanel.add(centroMenuRestauranteSubPanel, "Center");
-//        menuRestauranteSuperPanel.add(sulMenuRestauranteSubPanel, "South");
-//
-//        JPanel norteMenuRestauranteSSPanel = new JPanel();
-//        norteMenuRestauranteSSPanel.setLayout(new FlowLayout());
-//        norteMenuRestauranteSSPanel.add(registarNovoRestauranteLabel);
-//        norteMenuRestauranteSubPanel.add(norteMenuRestauranteSSPanel, BorderLayout.CENTER);
-//        norteMenuRestauranteSubPanel.add(ptEnMenuRestauranteButton, BorderLayout.EAST);
-//
-//        JPanel centroNovoRestauranteSSPanelForm = new JPanel();
-//        centroNovoRestauranteSSPanelForm.setLayout(new GridLayout(7, 1));
-//        centroMenuRestauranteSubPanel.add(centroNovoRestauranteSSPanelForm);
-//        centroNovoRestauranteSSPanelForm.add(mRestAdicionarPratoButton);
-//        centroNovoRestauranteSSPanelForm.add(mRestActualizarPratoDiaButton);
-//        centroNovoRestauranteSSPanelForm.add(mRestActualizarDadosButton);
-//        centroNovoRestauranteSSPanelForm.add(mRestReservasButton);
-//        centroNovoRestauranteSSPanelForm.add(mRestConsultarComentariosButton);
-//        centroNovoRestauranteSSPanelForm.add(pontuacaoMedia);
-//
-//        sulMenuRestauranteSubPanel.setLayout(new FlowLayout());
-//        //sulMenuRestauranteSubPanel.add(cancelarMenuRestauranteButton);
-//        sulMenuRestauranteSubPanel.add(logoutMenuRestauranteButton);
-//
-////        cancelarMenuRestauranteButton.addActionListener(a -> {
-////           CardLayout cl = (CardLayout) contentor.getLayout();
-////           cl.show(contentor, LOGIN_CARD);
-////            this.setSize(500, 300);
-////
-////       });
-//        mRestAdicionarPratoButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MRESTADICIONARPRATO_CARD);
-//            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
-//        });
-//
-//        mRestActualizarPratoDiaButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MRESTACTUALIZARPRATO_CARD);
-//            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
-//        });
-//
+//       });
+        mRestAdicionarPratoButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MRESTADICIONARPRATO_CARD);
+            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
+        });
+
+        mRestActualizarPratoDiaButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MRESTACTUALIZARPRATO_CARD);
+            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
+        });
+
+        mRestReservasButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MRESTRESERV_CARD);
+            this.setSize(LARGURA_PADRAO, 350);
+        });
+
+        mRestActualizarDadosButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MRESTACTUALIZARDADOS_CARD);
+            this.setSize(LARGURA_PADRAO, 350);
+        });
+
 //        mRestReservasButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MRESTRESERV_CARD);
-//            this.setSize(LARGURA_PADRAO, 350);
-//        });
-//
-//        mRestActualizarDadosButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MRESTACTUALIZARDADOS_CARD);
-//            this.setSize(LARGURA_PADRAO, 350);
-//        });
-//
-////        mRestReservasButton.addActionListener(a -> {
-////            CardLayout cl = (CardLayout) contentor.getLayout();
-////            cl.show(contentor, MRESTCOMENTARIOS_CARD);
-////            this.setSize(LARGURA_PADRAO, 350);
-////      });
-//
-//        mRestConsultarComentariosButton.addActionListener(a -> {
 //            CardLayout cl = (CardLayout) contentor.getLayout();
 //            cl.show(contentor, MRESTCOMENTARIOS_CARD);
 //            this.setSize(LARGURA_PADRAO, 350);
-//        });
-//
-//        logoutMenuRestauranteButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, LOGIN_CARD);
-//            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
-//        });
-//    }
-//
-//    ///////////MENU RESTAURANTE - ADICIONAR PRATO//////////////////////
-//    private void construirPanelMRestAdPrato(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAdPratoSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteAdPratoSubPanel = new JPanel();
-//        norteAdPratoSubPanel.setLayout(new BorderLayout());
-//        JPanel centroAdPratoSubPanel = new JPanel();
-//        JPanel sulAdPratoSubPanel = new JPanel();
-//
-//        JLabel adPratoLabel = new JLabel("ADICIONAR PRATO");
-//        JLabel nomePratoLabel = new JLabel("Nome Prato");
-//        JLabel descricaoPratoLabel = new JLabel("Descrição");
-//        JLabel precoPratoLabel = new JLabel("Preço");
-//
-//        JTextField nomePratoText = new JTextField(20);
-//        JTextField descricaoPratoText = new JTextField(20);
-//        JTextField precoPratoText = new JTextField(10);
-//
-//
-//        JButton ptEnAdPratoButton = new JButton("PT/EN");
-//        JButton voltarMenuRestAdPratoButton = new JButton("MENU RESTAURANTE");
-//        JButton confirmarAdPratoButton = new JButton("CONFIRMAR");
-//
-//
-//        JComboBox tipoPratoAd = new JComboBox();
-//        tipoPratoAd.addItem("Carta");
-//        tipoPratoAd.addItem("Prato do dia");
-//
-//
-//        mRestAdPratoSuperPanel.add(norteAdPratoSubPanel, "North");
-//        mRestAdPratoSuperPanel.add(centroAdPratoSubPanel, "Center");
-//        mRestAdPratoSuperPanel.add(sulAdPratoSubPanel, "South");
-//
-//        JPanel norteAdPratoSSPanel = new JPanel();
-//        norteAdPratoSSPanel.setLayout(new FlowLayout());
-//        norteAdPratoSSPanel.add(adPratoLabel);
-//        norteAdPratoSubPanel.add(norteAdPratoSSPanel, BorderLayout.CENTER);
-//        norteAdPratoSubPanel.add(ptEnAdPratoButton, BorderLayout.EAST);
-//
-//        JPanel centroAdPratoSSPanelForm = new JPanel();
-//        centroAdPratoSSPanelForm.setLayout(new GridLayout(5, 2));
-//        centroAdPratoSubPanel.add(centroAdPratoSSPanelForm);
-//        centroAdPratoSubPanel.add(tipoPratoAd);
-//        centroAdPratoSSPanelForm.add(nomePratoLabel);
-//        centroAdPratoSSPanelForm.add(nomePratoText);
-//        centroAdPratoSSPanelForm.add(descricaoPratoLabel);
-//        centroAdPratoSSPanelForm.add(descricaoPratoText);
-//        centroAdPratoSSPanelForm.add(precoPratoLabel);
-//        centroAdPratoSSPanelForm.add(precoPratoText);
-//
-//        sulAdPratoSubPanel.setLayout(new FlowLayout());
-//        sulAdPratoSubPanel.add(voltarMenuRestAdPratoButton);
-//        sulAdPratoSubPanel.add(confirmarAdPratoButton);
-//
-//
-//        voltarMenuRestAdPratoButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENURESTAURANTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//
-//        confirmarAdPratoButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENURESTAURANTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//
-//    }
-//
-//    /////////MENU RESTAURANTE – ACTUALIZAR PRATO//////////////////////
-//    private void construirPanelMRestAtPratoDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtPratoSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteAtPratoSubPanel = new JPanel();
-//        norteAtPratoSubPanel.setLayout(new BorderLayout());
-//        JPanel centroAtPratoSubPanel = new JPanel();
-//        JPanel sulAtPratoSubPanel = new JPanel();
-//
-//        JLabel atPratoLabel = new JLabel("ACTUALIZAR PRATO DO DIA");
-//        JLabel atNomePratoLabel = new JLabel("Nome Prato");
-//        JLabel atDescricaoPratoLabel = new JLabel("Descrição");
-//        JLabel atPrecoPratoLabel = new JLabel("Preço");
-//
-//        JTextField atNomePratoText = new JTextField(20);
-//        JTextField atDescricaoPratoText = new JTextField(20);
-//        JTextField atPrecoPratoText = new JTextField(10);
-//
-//        JButton ptEnAtPratoButton = new JButton("PT/EN");
-//        JButton voltarMenuRestAtPratoButton = new JButton("MENU RESTAURANTE");
-//        JButton confirmarAtPratoButton = new JButton("CONFIRMAR");
-//
-//        mRestAtPratoSuperPanel.add(norteAtPratoSubPanel, "North");
-//        mRestAtPratoSuperPanel.add(centroAtPratoSubPanel, "Center");
-//        mRestAtPratoSuperPanel.add(sulAtPratoSubPanel, "South");
-//
-//        JPanel norteAtPratoSSPanel = new JPanel();
-//        norteAtPratoSSPanel.setLayout(new FlowLayout());
-//        norteAtPratoSSPanel.add(atPratoLabel);
-//        norteAtPratoSubPanel.add(norteAtPratoSSPanel, BorderLayout.CENTER);
-//        norteAtPratoSubPanel.add(ptEnAtPratoButton, BorderLayout.EAST);
-//
-//        JPanel centroAtPratoSSPanelForm = new JPanel();
-//        centroAtPratoSSPanelForm.setLayout(new GridLayout(3, 2));
-//        centroAtPratoSubPanel.add(centroAtPratoSSPanelForm);
-//        //centroAtPratoSSPanelForm.add(atPratoLabel);
-//        centroAtPratoSSPanelForm.add(atNomePratoLabel);
-//        centroAtPratoSSPanelForm.add(atNomePratoText);
-//        centroAtPratoSSPanelForm.add(atDescricaoPratoLabel);
-//        centroAtPratoSSPanelForm.add(atDescricaoPratoText);
-//        centroAtPratoSSPanelForm.add(atPrecoPratoLabel);
-//        centroAtPratoSSPanelForm.add(atPrecoPratoText);
-//
-//        sulAtPratoSubPanel.setLayout(new FlowLayout());
-//        sulAtPratoSubPanel.add(voltarMenuRestAtPratoButton);
-//        sulAtPratoSubPanel.add(confirmarAtPratoButton);
-//
-//
-//        voltarMenuRestAtPratoButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENURESTAURANTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//        confirmarAtPratoButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENURESTAURANTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//    }
-//
-//    ///////////////////MENU RESTAURANTE - ACTUALIZAR DADOS /////////////////////////
-//    private void construirPanelMRestAtDados(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtDadosSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMRestAtDadosSubPanel = new JPanel();
-//        norteMRestAtDadosSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMRestAtDadosSubPanel = new JPanel();
-//        JPanel sulMRestAtDadosSubPanel = new JPanel();
-//
-//        JLabel atDadosRestLabel = new JLabel("ACTUALIZAR DADOS");
-//        JLabel nomeAtDadosRestLabel = new JLabel("Nome");
-//        JLabel emailAtDadosRestLabel = new JLabel("E-mail");
-//        JLabel moradaAtDadosRestLabel = new JLabel("Morada");
-//        JLabel cidadeAtDadosRestLabel = new JLabel("Cidade");
-//        JLabel telemovelAtDadosRestLabel = new JLabel("Telemóvel");
-/////////////////////////
-//        JLabel lotacaoAtDadosRestLabel = new JLabel("Lotação:");
-//        JLabel esplanadaAtDadosRestLabel = new JLabel("Esplanada");
-//        JLabel zonaInteriorAtDadosRestLabel = new JLabel("Zona Interior:");
-//        JLabel zonaInteriorNFumAtDadosRestLabel = new JLabel("Ñ Fumadores");
-//        JLabel zonaInteriorFumAtDadosRestLabel = new JLabel("Fumadores");
-//        JLabel horariosAtDadosRestLabel = new JLabel("Horários:");
-//        JLabel horariosAlmocoAtDadosRestLabel = new JLabel("Almoço:");
-//        JLabel horarioAlmocoInicioAtDadosRestLabel = new JLabel("Início");
-//        JLabel horarioAlmocoFimAtDadosRestLabel = new JLabel("Fim");
-//        JLabel horariosJantarAtDadosRestLabel = new JLabel("Jantar:");
-//        JLabel horarioJantarInicioAtDadosRestLabel = new JLabel("Início");
-//        JLabel horarioJantarFimAtDadosRestLabel = new JLabel("Fim");
-//        JLabel usernameAtDadosRestLabel = new JLabel("Username");
-//        JLabel passwordAtDadosRestLabel = new JLabel("Password");
-//        JLabel confirmarPasswordAtDadosRestLabel = new JLabel("Confirmar password ");
-//
-//        JTextField nomeAtDadosRestText = new JTextField(18);
-//        nomeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField emailAtDadosRestText = new JTextField(18);
-//        emailAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField moradaAtDadosRestText = new JTextField(20);
-//        moradaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField cidadeAtDadosRestText = new JTextField(15);
-//        cidadeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField telemovelAtDadosRestText = new JFormattedTextField(mascaraTelemovel);
-//        telemovelAtDadosRestText.setColumns(8);
-//        telemovelAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//
-//        //JTextField lotacaoAtDadosRestText = new JTextField(5);
-//        JTextField esplanadaAtDadosRestText = new JTextField(3);
-//        esplanadaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField zonaInteriorNFumAtDadosRestText = new JTextField(3);
-//        zonaInteriorNFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField zonaInteriorFumAtDadosRestText = new JTextField(3);
-//        zonaInteriorFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField horarioAlmocoInicioAtDadosRestText = new JTextField(3);
-//        horarioAlmocoInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField horarioAlmocoFimAtDadosRestText = new JTextField(3);
-//        horarioAlmocoFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField horarioJantarInicioAtDadosRestText = new JTextField(3);
-//        horarioJantarInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JTextField horarioJantarFimAtDadosRestText = new JTextField(3);
-//        horarioJantarFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        ///////
-//        JTextField usernameAtDadosRestText = new JTextField(20);
-//        usernameAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//
-//        JPasswordField passwordAtDadosRestField = new JPasswordField(15);
-//        passwordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//        JPasswordField confirmarPasswordAtDadosRestField = new JPasswordField(15);
-//        confirmarPasswordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-//
-//        JButton ptEnAtDadosRestButton = new JButton("PT/EN");
-//        JButton voltarMenuRestAtDadosRestButton = new JButton("MENU RESTAURANTE");
-//        JButton atDadosRestButton = new JButton("ACTUALIZAR");
-//
-//        mRestAtDadosSuperPanel.add(norteMRestAtDadosSubPanel, "North");
-//        mRestAtDadosSuperPanel.add(centroMRestAtDadosSubPanel, "Center");
-//        mRestAtDadosSuperPanel.add(sulMRestAtDadosSubPanel, "South");
-//
-//        JPanel norteAtDadosRestSSPanel = new JPanel();
-//        norteAtDadosRestSSPanel.setLayout(new FlowLayout());
-//        norteAtDadosRestSSPanel.add(atDadosRestLabel);
-//        norteMRestAtDadosSubPanel.add(norteAtDadosRestSSPanel, BorderLayout.CENTER);
-//        norteMRestAtDadosSubPanel.add(ptEnAtDadosRestButton, BorderLayout.EAST);
-//
-//        JPanel centroAtDadosRestSSPanelForm1 = new JPanel();
-//        centroAtDadosRestSSPanelForm1.setLayout(new FlowLayout());
-//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm1, BorderLayout.WEST);
-//
-//        JPanel centroAtDadosRestSSPanelForm2 = new JPanel();
-//        centroAtDadosRestSSPanelForm2.setLayout(new FlowLayout());
-//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2, BorderLayout.WEST);
-//
-//        JPanel centroAtDadosRestSSPanelForm2A = new JPanel();
-//        centroAtDadosRestSSPanelForm2A.setLayout(new FlowLayout());
-//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2A, BorderLayout.WEST);
-//
-//        JPanel centroAtDadosRestSSPanelForm3 = new JPanel();
-//        //centroAtDadosRestSSPanelForm3.setLayout(new FlowLayout());
-//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm3, BorderLayout.WEST);
-//
-//        JPanel centroAtDadosRestSSPanelForm4 = new JPanel();
-//        centroAtDadosRestSSPanelForm4.setLayout(new FlowLayout());
-//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm4, BorderLayout.WEST);
-//
-//        JPanel centroAtDadosRestSSPanelForm5 = new JPanel();
-//        centroAtDadosRestSSPanelForm5.setLayout(new FlowLayout());
-//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm5, BorderLayout.WEST);
-//
-//        JPanel centroAtDadosRestSSPanelForm6 = new JPanel();
-//        centroAtDadosRestSSPanelForm6.setLayout(new FlowLayout());
-//        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm6, BorderLayout.WEST);
-//
-//        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestText);
-//        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestText);
-//
-//        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestText);
-//        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestText);
-//        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestText);
-//
-//        centroAtDadosRestSSPanelForm3.add(lotacaoAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestText);
-//        centroAtDadosRestSSPanelForm3.add(zonaInteriorAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestText);
-//        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestText);
-//
-//
-//        centroAtDadosRestSSPanelForm4.add(horariosAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm4.add(horariosAlmocoAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestText);
-//        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestText);
-//        centroAtDadosRestSSPanelForm4.add(horariosJantarAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestText);
-//        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestText);
-//
-//        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestText);
-//
-//        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestField);
-//        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestLabel);
-//        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestField);
-//
-//        sulMRestAtDadosSubPanel.setLayout(new FlowLayout());
-//        sulMRestAtDadosSubPanel.add(voltarMenuRestAtDadosRestButton);
-//        sulMRestAtDadosSubPanel.add(atDadosRestButton);
-//
-//        voltarMenuRestAtDadosRestButton.addActionListener(e -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENURESTAURANTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        atDadosRestButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENURESTAURANTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//
-//    }
-//
-//    //////MENU RESTAURANTE – HISTÓRICO DE RESERVAS//////////
-//    private void construirPanelMRestReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestReservasSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMRestReservasSubPanel = new JPanel();
-//        norteMRestReservasSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMRestReservasSubPanel = new JPanel();
-//        JPanel sulMRestReservasSubPanel = new JPanel();
-//
-//        JLabel mRestReservasLabel = new JLabel("HISTÓRICO DE RESERVAS");
-//        JLabel usernameMRestReservasLabel = new JLabel("Username");
-//        //JLabel filtrarTipomRestResLabel = new JLabel("Escolha a opção em que a lista será mostrada:");
-//        JLabel filtrarDataInicioMRestReservasLabel = new JLabel("De");
-//        JLabel filtrarDataFimMRestReservasLabel = new JLabel("Até");
-//
-//
-//        JTextField usernameMRestReservasText = new JTextField(20);
-//
-//        JCheckBox cem = new JCheckBox("Até 100");
-//        cem.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox duzentos = new JCheckBox("100-200");
-//        duzentos.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox trezentos = new JCheckBox("200-300");
-//        trezentos.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox quatrocentos = new JCheckBox("+ de 300");
-//        quatrocentos.setMnemonic(KeyEvent.VK_C);
-//
-//
-//        JRadioButton filtrarIntervDatasMRestResRButton = new JRadioButton("DATAS");
-//        //todo verificar a questão do calendário
-//        JRadioButton filtrarTipomRestResRButton = new JRadioButton("TIPO");
-//        JRadioButton filtrarIntervValmRestResRButton = new JRadioButton("VALORES");
-//        JRadioButton filtrarClientemRestResRButton = new JRadioButton("CLIENTE");
-//
-//        ButtonGroup group = new ButtonGroup();
-//        group.add(filtrarIntervDatasMRestResRButton);
-//        group.add(filtrarTipomRestResRButton);
-//        group.add(filtrarIntervValmRestResRButton);
-//        group.add(filtrarClientemRestResRButton);
-//
-//        JComboBox<String> filtrosTipoMRestReservasJCBox = new JComboBox<>();
-//        filtrosTipoMRestReservasJCBox.addItem("");
-//        filtrosTipoMRestReservasJCBox.addItem("Presencial");
-//        filtrosTipoMRestReservasJCBox.addItem("Take-Away");
-//
-//        JButton ptEnMRestReservasButton = new JButton("PT/EN");
-//        JButton voltarMRestReservasButton = new JButton("MENU RESTAURANTE");
-//        JButton okMRestReservasButton = new JButton("OK");
-//
-//        //Adição do calendário
-//        UtilDateModel model1 = new UtilDateModel();
-//        UtilDateModel model2 = new UtilDateModel();
-//
-//        ResourceBundle b = ResourceBundle.getBundle("Text");
-//
-//        Properties p = convertResourceBundleToProperties(b);
-//        JDatePanelImpl datePanel = new JDatePanelImpl(model1, p);
-//        JDatePickerImpl datePicker1 = new JDatePickerImpl(datePanel, new DateLabelFormatter());
-//
-//        JDatePanelImpl datePanel1 = new JDatePanelImpl(model2, p);
-//        JDatePickerImpl datePicker2 = new JDatePickerImpl(datePanel1, new DateLabelFormatter());
-//
-//        mRestReservasSuperPanel.add(norteMRestReservasSubPanel, "North");
-//        mRestReservasSuperPanel.add(centroMRestReservasSubPanel, "Center");
-//        mRestReservasSuperPanel.add(sulMRestReservasSubPanel, "South");
-//
-//        JPanel norteMRestReservasSSPanel = new JPanel();
-//        norteMRestReservasSSPanel.setLayout(new FlowLayout());
-//        norteMRestReservasSSPanel.add(mRestReservasLabel);
-//        norteMRestReservasSubPanel.add(norteMRestReservasSSPanel, BorderLayout.CENTER);
-//        norteMRestReservasSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);
-//
-//        JPanel centroMRestReservasSSPanel = new JPanel();
-//        centroMRestReservasSSPanel.setLayout(new FlowLayout());
-//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMRestReservasSSPanel1 = new JPanel();
-//        centroMRestReservasSSPanel1.setLayout(new FlowLayout());
-//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel1, BorderLayout.WEST);
-//
-//        JPanel centroMRestReservasSSPanel2 = new JPanel();
-//        centroMRestReservasSSPanel2.setLayout(new FlowLayout());
-//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2, BorderLayout.WEST);
-//
-//        JPanel centroMRestReservasSSPanel2A = new JPanel();
-//        centroMRestReservasSSPanel2A.setLayout(new GridLayout(1, 1));
-//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2A, BorderLayout.WEST);
-//
-//        JPanel centroMRestReservasSSPanel3 = new JPanel();
-//        centroMRestReservasSSPanel3.setLayout(new FlowLayout());
-//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel3, BorderLayout.WEST);
-//
-//        JPanel centroMRestReservasSSPanel4 = new JPanel();
-//        centroMRestReservasSSPanel4.setLayout(new FlowLayout());
-//        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel4, BorderLayout.WEST);
-//
-//        centroMRestReservasSSPanel.add(filtrarIntervDatasMRestResRButton);
-//        centroMRestReservasSSPanel1.add(filtrarDataInicioMRestReservasLabel);
-//        centroMRestReservasSSPanel1.add(datePicker1);
-//        centroMRestReservasSSPanel1.add(filtrarDataFimMRestReservasLabel);
-//        centroMRestReservasSSPanel1.add(datePicker2);
-//
-//        centroMRestReservasSSPanel2.add(filtrarTipomRestResRButton);
-//        centroMRestReservasSSPanel2A.add(filtrosTipoMRestReservasJCBox);
-//
-//        centroMRestReservasSSPanel3.add(filtrarIntervValmRestResRButton);
-//        centroMRestReservasSSPanel3.add(cem);
-//        centroMRestReservasSSPanel3.add(duzentos);
-//        centroMRestReservasSSPanel3.add(trezentos);
-//        centroMRestReservasSSPanel3.add(quatrocentos);
-//
-//        centroMRestReservasSSPanel4.add(filtrarClientemRestResRButton);
-//        centroMRestReservasSSPanel4.add(usernameMRestReservasLabel);
-//        centroMRestReservasSSPanel4.add(usernameMRestReservasText);
-//
-//        sulMRestReservasSubPanel.setLayout(new FlowLayout());
-//        sulMRestReservasSubPanel.add(voltarMRestReservasButton);
-//        sulMRestReservasSubPanel.add(okMRestReservasButton);
-//
-//
-//        voltarMRestReservasButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENURESTAURANTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//
-//        //todo ver os encaminhamentos
-//        okMRestReservasButton.addActionListener(e -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, LOGIN_CARD);
-//            this.setSize(500, 180);
-//        });
-//    }
-//
-//    /**
-//     * Convert ResourceBundle into a Properties object.
-//     *
-//     * @param resource a resource bundle to convert.
-//     * @return Properties a properties version of the resource bundle.
-//     */
-//
-//
-//////////COMENTEI AQUI NOVAMENTE////////////////////
-//
-//
-//
-//
-//
-//    private static Properties convertResourceBundleToProperties(ResourceBundle resource) {
-//        Properties properties = new Properties();
-//        Enumeration<String> keys = resource.getKeys();
-//        while (keys.hasMoreElements()) {
-//            String key = keys.nextElement();
-//            properties.put(key, resource.getString(key));
-//        }
-//        return properties;
-//    }
-//
-//
-//    //////MENU RESTAURANTE – COMENTÁRIOS//////////
-//    private void construirPanelMRestComentarios(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestComentariosSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMRestComentariosSubPanel = new JPanel();
-//        norteMRestComentariosSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMRestComentariosSubPanel = new JPanel();
-//        JPanel sulMRestComentariosSubPanel = new JPanel();
-//
-//        JLabel mRestComentariosLabel = new JLabel("COMENTÁRIOS RECEBIDOS");
-//
-//
-//        String[] nomeColunasMRestComentarios = new String[]{
-//                "USERNAME", "COMENTÁRIO", "PONTUAÇÃO"
-//        };
-//
-//        //todo exemplo a verificar
-//        Object[][] dados = new Object[][]{
-//                {"USERNAME", "COMENTÁRIO", "PONTUAÇÃO"},
-//                {"Nuno", "Muito bom", 4.0},
-//                {"Manuel", "Excelente", 5.0},
-//                {"André", "Pouco espaço interno", 3.0},
-//        };
-//        //criação da tabela
-//        JTable tabela = new JTable(dados, nomeColunasMRestComentarios);
-//
-////        JPopupMenu popupMenu = new JPopupMenu();
-////        JMenuItem menuItemAdd = new JMenuItem("Responder");
-//
-//        JButton ptEnMRestReservasButton = new JButton("PT/EN");
-//        JButton voltarMRestComentariosButton = new JButton("MENU RESTAURANTE");
-//        JButton responderMRestComentariosButton = new JButton("OK");
-//
-//        mRestComentariosSuperPanel.add(norteMRestComentariosSubPanel, "North");
-//        mRestComentariosSuperPanel.add(centroMRestComentariosSubPanel, "Center");
-//        mRestComentariosSuperPanel.add(sulMRestComentariosSubPanel, "South");
-//
-//        JPanel norteMRestComentariosSSPanel = new JPanel();
-//        norteMRestComentariosSSPanel.setLayout(new FlowLayout());
-//        norteMRestComentariosSSPanel.add(mRestComentariosLabel);
-//        norteMRestComentariosSubPanel.add(norteMRestComentariosSSPanel, BorderLayout.CENTER);
-//        norteMRestComentariosSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);
-//
-//        JPanel centroMRestReservasSSPanel1 = new JPanel();
-//        centroMRestReservasSSPanel1.setLayout(new FlowLayout());
-//        centroMRestComentariosSubPanel.add(tabela, BorderLayout.WEST);
-//
-//        sulMRestComentariosSubPanel.setLayout(new FlowLayout());
-//        sulMRestComentariosSubPanel.add(voltarMRestComentariosButton);
-//        sulMRestComentariosSubPanel.add(responderMRestComentariosButton);
-//
-//
-//        voltarMRestComentariosButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENURESTAURANTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//
-//        //todo ver os encaminhamentos para responder comentário
-//        responderMRestComentariosButton.addActionListener(e -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, LOGIN_CARD);
-//            this.setSize(500, 180);
-//        });
-//
-//    }
-//
-//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS//////////
-//    private void construirPanelMCliMRestFOrdRests(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestsSuperPanel) {
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMRestFOrdRestsSubPanel = new JPanel();
-//        norteMCliMRestFOrdRestsSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMRestFOrdRestsSubPanel = new JPanel();
-//        JPanel sulMCliMRestFOrdRestsSubPanel = new JPanel();
-//
-//        JLabel mCliMRestFOrdRestsLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
-//
-//        JLabel fMCliMRestFOrdRestsLabel = new JLabel("FILTRAR:");
-//        JButton fhoraFMCliMRestFOrdRestsButton = new JButton("HORA DE FUNCIONAMENTO");
-//        JButton fLotMCliMRestFOrdRestsButton = new JButton("LOTAÇÃO");
-//        JButton fCidCliMRestFOrdRestsButton = new JButton("CIDADE");
-//
-//        JLabel fOrdMCliMRestsFOrdRestLabel = new JLabel("FILTRAR/ORDENAR:");
-//        JButton fOrdPontCliMRestFOrdRestsButton = new JButton("PONTUAÇÃO");
-//        JButton fOrdValoresMCliMRestFOrdRestsButton = new JButton("VALORES MÉDIOS DOS PRATOS");
-//
-//        JButton ptEnMCliMRestFOrdRestsButton = new JButton("PT/EN");
-//        JButton voltarMCliMRestsFOrdRestButton = new JButton("MENU CLIENTE");
-//
-//        mCliMRestFOrdRestsSuperPanel.add(norteMCliMRestFOrdRestsSubPanel, "North");
-//        mCliMRestFOrdRestsSuperPanel.add(centroMCliMRestFOrdRestsSubPanel, "Center");
-//        mCliMRestFOrdRestsSuperPanel.add(sulMCliMRestFOrdRestsSubPanel, "South");
-//
-//        JPanel norteMCliMRestFOrdRestsSSPanel = new JPanel();
-//        norteMCliMRestFOrdRestsSSPanel.setLayout(new FlowLayout());
-//        norteMCliMRestFOrdRestsSSPanel.add(mCliMRestFOrdRestsLabel);
-//        norteMCliMRestFOrdRestsSubPanel.add(norteMCliMRestFOrdRestsSSPanel, BorderLayout.CENTER);
-//        norteMCliMRestFOrdRestsSubPanel.add(ptEnMCliMRestFOrdRestsButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMRestFOrdRestsSSPanel = new JPanel();
-//        centroMCliMRestFOrdRestsSSPanel.setLayout(new GridLayout(8, 1));
-//        centroMCliMRestFOrdRestsSubPanel.add(centroMCliMRestFOrdRestsSSPanel);
-//
-//        centroMCliMRestFOrdRestsSSPanel.add(fMCliMRestFOrdRestsLabel);
-//        centroMCliMRestFOrdRestsSSPanel.add(fhoraFMCliMRestFOrdRestsButton);
-//        centroMCliMRestFOrdRestsSSPanel.add(fLotMCliMRestFOrdRestsButton);
-//        centroMCliMRestFOrdRestsSSPanel.add(fCidCliMRestFOrdRestsButton);
-//        centroMCliMRestFOrdRestsSSPanel.add(fOrdMCliMRestsFOrdRestLabel);
-//        centroMCliMRestFOrdRestsSSPanel.add(fOrdPontCliMRestFOrdRestsButton);
-//        centroMCliMRestFOrdRestsSSPanel.add(fOrdValoresMCliMRestFOrdRestsButton);
-//
-//        sulMCliMRestFOrdRestsSubPanel.setLayout(new FlowLayout());
-//        sulMCliMRestFOrdRestsSubPanel.add(voltarMCliMRestsFOrdRestButton);
-//
-//        fhoraFMCliMRestFOrdRestsButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFRESTHFUNC_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        fLotMCliMRestFOrdRestsButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFRESTLOT_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        fCidCliMRestFOrdRestsButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFRESTCID_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        fOrdPontCliMRestFOrdRestsButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFRESTPONT_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        fOrdValoresMCliMRestFOrdRestsButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTVALOR_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        voltarMCliMRestsFOrdRestButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//    }
-//
-//    //////MENU RESTAURANTE – RESTAURANTES – FILTRAR POR PONTUAÇÃO//////////
-//    private void construirPanelMCliMRestFRestPont(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestPontSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMRestFRestPontSubPanel = new JPanel();
-//        norteMCliMRestFRestPontSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMRestFRestPontSubPanel = new JPanel();
-//        JPanel sulMCliMRestFRestPontSubPanel = new JPanel();
-//
-//        JLabel mCliMRestsFRestPontLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
-//        JLabel mCliMRestFRestPontLabel = new JLabel("PONTUAÇÃO");
-//
-//        JCheckBox umMCliMRestFRestPont = new JCheckBox("1 - Péssimo");
-//        umMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox doisMCliMRestFRestPont = new JCheckBox("2 - Ruim");
-//        doisMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox tresMCliMRestFRestPont = new JCheckBox("3 - Regular");
-//        tresMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox quatroMCliMRestFRestPont = new JCheckBox("4 - Bom");
-//        quatroMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox cincoMCliMRestFRestPont = new JCheckBox("5 - Muito Bom");
-//        cincoMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
-//
-//        JButton ptEnMCliMRestFRestPontButton = new JButton("PT/EN");
-//        JButton voltarMCliMRestFRestPontButton = new JButton("MENU CLIENTE");
-//        JButton retonarMCliMRestFRestPontButton = new JButton("VOLTAR");
-//
-//        mCliMRestFRestPontSuperPanel.add(norteMCliMRestFRestPontSubPanel, "North");
-//        mCliMRestFRestPontSuperPanel.add(centroMCliMRestFRestPontSubPanel, "Center");
-//        mCliMRestFRestPontSuperPanel.add(sulMCliMRestFRestPontSubPanel, "South");
-//
-//        JPanel norteMCliMRestFRestPontSSPanel = new JPanel();
-//        norteMCliMRestFRestPontSSPanel.setLayout(new FlowLayout());
-//        norteMCliMRestFRestPontSSPanel.add(mCliMRestsFRestPontLabel);
-//        norteMCliMRestFRestPontSubPanel.add(norteMCliMRestFRestPontSSPanel, BorderLayout.CENTER);
-//        norteMCliMRestFRestPontSubPanel.add(ptEnMCliMRestFRestPontButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMRestFRestPontSSPanel = new JPanel();
-//        centroMCliMRestFRestPontSSPanel.setLayout(new GridLayout(6, 1));
-//        centroMCliMRestFRestPontSubPanel.add(centroMCliMRestFRestPontSSPanel);
-//
-//        centroMCliMRestFRestPontSSPanel.add(mCliMRestFRestPontLabel);
-//        centroMCliMRestFRestPontSSPanel.add(umMCliMRestFRestPont);
-//        centroMCliMRestFRestPontSSPanel.add(doisMCliMRestFRestPont);
-//        centroMCliMRestFRestPontSSPanel.add(tresMCliMRestFRestPont);
-//        centroMCliMRestFRestPontSSPanel.add(quatroMCliMRestFRestPont);
-//        centroMCliMRestFRestPontSSPanel.add(cincoMCliMRestFRestPont);
-//
-//        sulMCliMRestFRestPontSubPanel.setLayout(new FlowLayout());
-//        sulMCliMRestFRestPontSubPanel.add(voltarMCliMRestFRestPontButton);
-//        sulMCliMRestFRestPontSubPanel.add(retonarMCliMRestFRestPontButton);
-//
-//        umMCliMRestFRestPont.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        doisMCliMRestFRestPont.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        tresMCliMRestFRestPont.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        quatroMCliMRestFRestPont.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        cincoMCliMRestFRestPont.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        retonarMCliMRestFRestPontButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        voltarMCliMRestFRestPontButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//
-//    }
-//
-//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS – VALORES MÉDIOS DOS PRATOS//////////
-//    private void construirPanelMCliMRestFOrdRestValor(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMRestFOrdRestValorSubPanel = new JPanel();
-//        norteMCliMRestFOrdRestValorSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMRestFOrdRestValorSubPanel = new JPanel();
-//        JPanel sulMCliMRestFOrdRestValorSubPanel = new JPanel();
-//
-//        JLabel mCliMRestFOrdRestsValorLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
-//        JLabel mCliMRestFOrdRestValorLabel = new JLabel("VALORES MÉDIOS DOS PRATOS");
-//
-//        JRadioButton fOrdValoresCartaMCliMRestFOrdRestValorRButton = new JRadioButton("CARTA");
-//        JRadioButton fOrdValoresPDiaMCliMRestFOrdRestValorRButton = new JRadioButton("PRATOS DO DIA");
-//
-//        ButtonGroup group = new ButtonGroup();
-//        group.add(fOrdValoresCartaMCliMRestFOrdRestValorRButton);
-//        group.add(fOrdValoresPDiaMCliMRestFOrdRestValorRButton);
-//
-//        JButton ptEnMCliMRestFOrdRestValorButton = new JButton("PT/EN");
-//        JButton voltarMCliMRestFOrdRestValorutton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMRestFOrdRestValorButton = new JButton("VOLTAR");
-//
-//        mCliMRestFOrdRestValorSuperPanel.add(norteMCliMRestFOrdRestValorSubPanel, "North");
-//        mCliMRestFOrdRestValorSuperPanel.add(centroMCliMRestFOrdRestValorSubPanel, "Center");
-//        mCliMRestFOrdRestValorSuperPanel.add(sulMCliMRestFOrdRestValorSubPanel, "South");
-//
-//        JPanel norteMCliMRestFOrdRestValorSSPanel = new JPanel();
-//        norteMCliMRestFOrdRestValorSSPanel.setLayout(new FlowLayout());
-//        norteMCliMRestFOrdRestValorSSPanel.add(mCliMRestFOrdRestsValorLabel);
-//        norteMCliMRestFOrdRestValorSubPanel.add(norteMCliMRestFOrdRestValorSSPanel, BorderLayout.CENTER);
-//        norteMCliMRestFOrdRestValorSubPanel.add(ptEnMCliMRestFOrdRestValorButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMRestFOrdRestValorSSPanel = new JPanel();
-//        centroMCliMRestFOrdRestValorSSPanel.setLayout(new GridLayout(3, 1));
-//        centroMCliMRestFOrdRestValorSubPanel.add(centroMCliMRestFOrdRestValorSSPanel);
-//
-//        JPanel centroMCliMRestFOrdRestValorSSPanel1 = new JPanel();
-//        centroMCliMRestFOrdRestValorSSPanel1.setLayout(new GridBagLayout());
-//        centroMCliMRestFOrdRestValorSubPanel.add(centroMCliMRestFOrdRestValorSSPanel1);
-//
-//        centroMCliMRestFOrdRestValorSSPanel.add(mCliMRestFOrdRestValorLabel);
-//        centroMCliMRestFOrdRestValorSSPanel.add(fOrdValoresCartaMCliMRestFOrdRestValorRButton);
-//        centroMCliMRestFOrdRestValorSSPanel.add(fOrdValoresPDiaMCliMRestFOrdRestValorRButton);
-//
-//        sulMCliMRestFOrdRestValorSubPanel.setLayout(new FlowLayout());
-//        sulMCliMRestFOrdRestValorSubPanel.add(voltarMCliMRestFOrdRestValorutton);
-//        sulMCliMRestFOrdRestValorSubPanel.add(retornarMCliMRestFOrdRestValorButton);
-//
-//
-//        fOrdValoresCartaMCliMRestFOrdRestValorRButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTVALORCARTA_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//
-//        fOrdValoresPDiaMCliMRestFOrdRestValorRButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTVALORPDIA_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//        retornarMCliMRestFOrdRestValorButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//        voltarMCliMRestFOrdRestValorutton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//    }
-//
-//
-//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTRAR POR VALORES MÉDIOS DOS PRATOS - CARTA//////////
-//    private void construirPanelMCliMRestFOrdRestValorCarta(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorCartaSuperPanel) {
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMRestFOrdRestValorCartaSubPanel = new JPanel();
-//        norteMCliMRestFOrdRestValorCartaSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMRestFOrdRestValorCartaSubPanel = new JPanel();
-//        JPanel sulMCliMRestFOrdRestValorCartaSubPanel = new JPanel();
-//
-//        JLabel mCliMRestFOrdRestsValorCartaLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
-//        JLabel mCliMRestFOrdRestValorCartaLabel = new JLabel("VALORES MÉDIOS DOS PRATOS - CARTA");
-//        JCheckBox dezMCliMRestFOrdRestValorCartaCBox = new JCheckBox(">10€");
-//        dezMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox dezVinteMCliMRestFOrdRestValorCartaCBox = new JCheckBox("10€-20€");
-//        dezVinteMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox vinteTrintaMCliMRestFOrdRestValorCartaCBox = new JCheckBox("20€-30€");
-//        vinteTrintaMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox trintaQuarentaMCliMRestFOrdRestValorCartaCBox = new JCheckBox("30€-40€");
-//        trintaQuarentaMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox quarentaMaisMCliMRestFOrdRestValorCartaCBox = new JCheckBox("<40€");
-//        quarentaMaisMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
-//
-//        JButton ptEnMCliMRestFOrdRestValorCartaButton = new JButton("PT/EN");
-//        JButton voltarMCliMRestFOrdRestValorCartaButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMRestFOrdRestValorCartaButton = new JButton("VOLTAR");
-//
-//
-//        mCliMRestFOrdRestValorCartaSuperPanel.add(norteMCliMRestFOrdRestValorCartaSubPanel, "North");
-//        mCliMRestFOrdRestValorCartaSuperPanel.add(centroMCliMRestFOrdRestValorCartaSubPanel, "Center");
-//        mCliMRestFOrdRestValorCartaSuperPanel.add(sulMCliMRestFOrdRestValorCartaSubPanel, "South");
-//
-//        JPanel norteMCliMRestFOrdRestValorCartaSSPanel = new JPanel();
-//        norteMCliMRestFOrdRestValorCartaSSPanel.setLayout(new FlowLayout());
-//        norteMCliMRestFOrdRestValorCartaSSPanel.add(mCliMRestFOrdRestsValorCartaLabel);
-//        norteMCliMRestFOrdRestValorCartaSubPanel.add(norteMCliMRestFOrdRestValorCartaSSPanel, BorderLayout.CENTER);
-//        norteMCliMRestFOrdRestValorCartaSubPanel.add(ptEnMCliMRestFOrdRestValorCartaButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMRestFOrdRestValorCartaSSPanel = new JPanel();
-//        centroMCliMRestFOrdRestValorCartaSSPanel.setLayout(new GridLayout(1, 2));
-//        centroMCliMRestFOrdRestValorCartaSubPanel.add(centroMCliMRestFOrdRestValorCartaSSPanel);
-//
-//        JPanel centroMCliMRestFOrdRestValorCartaSSPanel1 = new JPanel();
-//        centroMCliMRestFOrdRestValorCartaSSPanel1.setLayout(new GridBagLayout());
-//        centroMCliMRestFOrdRestValorCartaSubPanel.add(centroMCliMRestFOrdRestValorCartaSSPanel1);
-//
-//        centroMCliMRestFOrdRestValorCartaSSPanel.add(mCliMRestFOrdRestValorCartaLabel);
-//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(dezMCliMRestFOrdRestValorCartaCBox);
-//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(dezVinteMCliMRestFOrdRestValorCartaCBox);
-//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(vinteTrintaMCliMRestFOrdRestValorCartaCBox);
-//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(trintaQuarentaMCliMRestFOrdRestValorCartaCBox);
-//        centroMCliMRestFOrdRestValorCartaSSPanel1.add(quarentaMaisMCliMRestFOrdRestValorCartaCBox);
-//
-//        sulMCliMRestFOrdRestValorCartaSubPanel.setLayout(new FlowLayout());
-//        sulMCliMRestFOrdRestValorCartaSubPanel.add(voltarMCliMRestFOrdRestValorCartaButton);
-//        sulMCliMRestFOrdRestValorCartaSubPanel.add(retornarMCliMRestFOrdRestValorCartaButton);
-//
-//        dezMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        dezVinteMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        vinteTrintaMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        trintaQuarentaMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        quarentaMaisMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        retornarMCliMRestFOrdRestValorCartaButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        voltarMCliMRestFOrdRestValorCartaButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//    }
-//
-//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTRAR POR VALORES MÉDIOS DOS PRATOS – PRATO DO DIA//////////
-//    private void construirPanelMCliMRestFOrdRestValorPDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorPDiaSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();
-//        norteMCliMRestFOrdRestValorPDiaSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();
-//        JPanel sulMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();
-//        JLabel mCliMRestFOrdRestsValorPDiaLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
-//        JLabel mCliMRestFOrdRestValorMedPDiaLabel = new JLabel("VALORES MÉDIOS DOS PRATOS – PRATO DO DIA");
-//
-//        JCheckBox dezMCliMRestFOrdRestValorPDiaCBox = new JCheckBox(">10€");
-//        dezMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox dezVinteMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("10€-20€");
-//        dezVinteMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox vinteTrintaMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("20€-30€");
-//        vinteTrintaMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox trintaQuarentaMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("30€-40€");
-//        trintaQuarentaMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox quarentaMaisMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("<40€");
-//        quarentaMaisMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
-//
-//        JButton ptEnMCliMRestFOrdRestValorPDiaButton = new JButton("PT/EN");
-//        JButton voltarMCliMRestFOrdRestValorPDiaButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMRestFOrdRestValorPDiaButton = new JButton("VOLTAR");
-//
-//        mCliMRestFOrdRestValorPDiaSuperPanel.add(norteMCliMRestFOrdRestValorPDiaSubPanel, "North");
-//        mCliMRestFOrdRestValorPDiaSuperPanel.add(centroMCliMRestFOrdRestValorPDiaSubPanel, "Center");
-//        mCliMRestFOrdRestValorPDiaSuperPanel.add(sulMCliMRestFOrdRestValorPDiaSubPanel, "South");
-//
-//        JPanel norteMCliMRestFOrdRestValorPDiaSSPanel = new JPanel();
-//        norteMCliMRestFOrdRestValorPDiaSSPanel.setLayout(new FlowLayout());
-//        norteMCliMRestFOrdRestValorPDiaSSPanel.add(mCliMRestFOrdRestsValorPDiaLabel);
-//        norteMCliMRestFOrdRestValorPDiaSubPanel.add(norteMCliMRestFOrdRestValorPDiaSSPanel, BorderLayout.CENTER);
-//        norteMCliMRestFOrdRestValorPDiaSubPanel.add(ptEnMCliMRestFOrdRestValorPDiaButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMRestFOrdRestValorPDiaSSPanel = new JPanel();
-//        centroMCliMRestFOrdRestValorPDiaSSPanel.setLayout(new GridLayout(1, 2));
-//        centroMCliMRestFOrdRestValorPDiaSubPanel.add(centroMCliMRestFOrdRestValorPDiaSSPanel);
-//
-//        JPanel centroMCliMRestFOrdRestValorPDiaSSPanel1 = new JPanel();
-//        centroMCliMRestFOrdRestValorPDiaSSPanel1.setLayout(new GridBagLayout());
-//        centroMCliMRestFOrdRestValorPDiaSubPanel.add(centroMCliMRestFOrdRestValorPDiaSSPanel1);
-//
-//        centroMCliMRestFOrdRestValorPDiaSSPanel.add(mCliMRestFOrdRestValorMedPDiaLabel);
-//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(dezMCliMRestFOrdRestValorPDiaCBox);
-//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(dezVinteMCliMRestFOrdRestValorPDiaCBox);
-//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(vinteTrintaMCliMRestFOrdRestValorPDiaCBox);
-//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(trintaQuarentaMCliMRestFOrdRestValorPDiaCBox);
-//        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(quarentaMaisMCliMRestFOrdRestValorPDiaCBox);
-//
-//        sulMCliMRestFOrdRestValorPDiaSubPanel.setLayout(new FlowLayout());
-//        sulMCliMRestFOrdRestValorPDiaSubPanel.add(voltarMCliMRestFOrdRestValorPDiaButton);
-//        sulMCliMRestFOrdRestValorPDiaSubPanel.add(retornarMCliMRestFOrdRestValorPDiaButton);
-//
-//        dezMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        dezVinteMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        vinteTrintaMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        trintaQuarentaMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        quarentaMaisMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        retornarMCliMRestFOrdRestValorPDiaButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//        voltarMCliMRestFOrdRestValorPDiaButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//    }
-//
-//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS – HORÁRIO DE FUNCIONAMENTO//////////
-//    private void construirPanelMCliMRestFRestHFunc(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestHFuncSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMRestFRestHFuncSubPanel = new JPanel();
-//        norteMCliMRestFRestHFuncSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMRestFRestHFuncSubPanel = new JPanel();
-//        JPanel sulMCliMRestFRestHFuncSubPanel = new JPanel();
-//
-//        JLabel mCliMRestsFRestsHFuncLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
-//        JLabel mCliMRestFRestHFuncLabel = new JLabel("HORÁRIOS DE FUNCIONAMENTO");
-//
-//        JLabel fHoraMCliMRestFRestHFuncLabel = new JLabel("HORA");
-//        JLabel fDataMCliMRestFRestHFuncLabel = new JLabel("DATA");
-//
-////Calendário
-//        UtilDateModel modelMCliMRestFRestHFun = new UtilDateModel();
-//
-//        ResourceBundle b = ResourceBundle.getBundle("Text");
-//
-//        Properties p = convertResourceBundleToProperties(b);
-//        JDatePanelImpl datePanelMCliMRestFRestHFun = new JDatePanelImpl(modelMCliMRestFRestHFun, p);
-//        JDatePickerImpl datePickerMCliMRestFRestHFun = new JDatePickerImpl(datePanelMCliMRestFRestHFun, new DateLabelFormatter());
-//
-////TODO ver melhor forma de apresentar para conseguir selecionar
-//        String[] fHoraMCliMRestFRestHFun = {"", "11h", "11h30", "12h", "12h30", "13h", "13h30", "14h", "14h30", "15h", "15h30", "19h", "19h30", "20h", "20h30", "21h", "21h30", "22h", "22h30"};
-//        JComboBox arrayfHoraFMCliMRestFRestHFuncJCBox = new JComboBox(fHoraMCliMRestFRestHFun);
-//
-//        JButton ptEnMCliMRestFRestHFuncButton = new JButton("PT/EN");
-//        JButton voltarMCliMRestFRestHFuncButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMRestFRestHFuncButton = new JButton("VOLTAR");
-//
-//
-//        mCliMRestFRestHFuncSuperPanel.add(norteMCliMRestFRestHFuncSubPanel, "North");
-//        mCliMRestFRestHFuncSuperPanel.add(centroMCliMRestFRestHFuncSubPanel, "Center");
-//        mCliMRestFRestHFuncSuperPanel.add(sulMCliMRestFRestHFuncSubPanel, "South");
-//
-//        JPanel norteMCliMRestFRestHFuncSSPanel = new JPanel();
-//        norteMCliMRestFRestHFuncSSPanel.setLayout(new FlowLayout());
-//        norteMCliMRestFRestHFuncSSPanel.add(mCliMRestsFRestsHFuncLabel);
-//        norteMCliMRestFRestHFuncSubPanel.add(norteMCliMRestFRestHFuncSSPanel, BorderLayout.CENTER);
-//        norteMCliMRestFRestHFuncSubPanel.add(ptEnMCliMRestFRestHFuncButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMRestFRestHFuncSSPanel = new JPanel();
-//        centroMCliMRestFRestHFuncSSPanel.setLayout(new FlowLayout());
-//        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel);
-//
-//        JPanel centroMCliMRestFRestHFuncSSPanel1 = new JPanel();
-//        centroMCliMRestFRestHFuncSSPanel1.setLayout(new FlowLayout());
-//        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel1);
-//
-//        JPanel centroMCliMRestFRestHFuncSSPanel2 = new JPanel();
-//        centroMCliMRestFRestHFuncSSPanel2.setLayout(new FlowLayout());
-//        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel2);
-//
-//        JPanel centroMCliMRestFRestHFuncSSPanel3 = new JPanel();
-//        centroMCliMRestFRestHFuncSSPanel3.setLayout(new FlowLayout());
-//        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel3);
-//
-//        centroMCliMRestFRestHFuncSSPanel.add(mCliMRestFRestHFuncLabel);
-//        centroMCliMRestFRestHFuncSSPanel1.add(fDataMCliMRestFRestHFuncLabel);
-//        centroMCliMRestFRestHFuncSSPanel1.add(datePickerMCliMRestFRestHFun);
-//        centroMCliMRestFRestHFuncSSPanel2.add(fHoraMCliMRestFRestHFuncLabel);
-//        centroMCliMRestFRestHFuncSSPanel2.add(arrayfHoraFMCliMRestFRestHFuncJCBox);
-//
-//        sulMCliMRestFRestHFuncSubPanel.setLayout(new FlowLayout());
-//        sulMCliMRestFRestHFuncSubPanel.add(voltarMCliMRestFRestHFuncButton);
-//        sulMCliMRestFRestHFuncSubPanel.add(retornarMCliMRestFRestHFuncButton);
-//
-//        //todo faltar ver botões
-//        retornarMCliMRestFRestHFuncButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        voltarMCliMRestFRestHFuncButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//    }
-//
-//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS - LOTAÇÃO//////////
-//    private void construirPanelMCliMRestFRestLot(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestLotSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMRestFRestLotSubPanel = new JPanel();
-//        norteMCliMRestFRestLotSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMRestFRestLotSubPanel = new JPanel();
-//        JPanel sulMCliMRestFRestLotSubPanel = new JPanel();
-//
-//        JLabel mCliMRestsFRestsLotLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
-//        JLabel mCliMRestFRestLotLabel = new JLabel("LOTAÇÃO");
-//        JLabel dataMCliMRestFRestLotLabel = new JLabel("DATA");
-//
-//        //todo exemplo a verificar (HÁ FORMA MELHOR?)
-//        String[] nomeColunasMCliMRestFRestLot = new String[]{
-//                "RESTAURANTE”, “ZONA", "TOTAL", "DISPONÍVEIS"
-//        };
-//
-//        Object[][] dadosMCliMRestFRestLot = new Object[][]{
-//                {"RESTAURANTE”, “ZONA", "TOTAL", "DISPONÍVEIS"},
-//                {"A", "Esplanada", 20, 5},
-//                {"B", "Interior Ñ Fumadores", 20, 10},
-//                {"C", "Interior Fumadores", 5, 2},
-//        };
-//
-//        //criação da tabela
-//        JTable tabelaMCliMRestFRestLot = new JTable(dadosMCliMRestFRestLot, nomeColunasMCliMRestFRestLot);
-//
-//
-////Calendário
-//        UtilDateModel modelMCliMRestFRestLot = new UtilDateModel();
-//
-//        ResourceBundle b = ResourceBundle.getBundle("Text");
-//
-//        Properties p = convertResourceBundleToProperties(b);
-//        JDatePanelImpl datePanelMCliMRestFRestLot = new JDatePanelImpl(modelMCliMRestFRestLot, p);
-//        JDatePickerImpl datePickerMCliMRestFRestLot = new JDatePickerImpl(datePanelMCliMRestFRestLot, new DateLabelFormatter());
-//
-//        //todo verificar porque não deu certo
-//        JComboBox fLotCliMRestFRestLotJCBox = new JComboBox();
-//        for (int i = 1; i <= 50; i++) {
-//            fLotCliMRestFRestLotJCBox.addItem(i);
-//        }
-//
-//        JButton ptEnMCliMRestFRestLotButton = new JButton("PT/EN");
-//        JButton voltarMCliMRestFRestLotButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMRestFRestLotButton = new JButton("VOLTAR");
-//
-//        mCliMRestFRestLotSuperPanel.add(norteMCliMRestFRestLotSubPanel, "North");
-//        mCliMRestFRestLotSuperPanel.add(centroMCliMRestFRestLotSubPanel, "Center");
-//        mCliMRestFRestLotSuperPanel.add(sulMCliMRestFRestLotSubPanel, "South");
-//
-//        JPanel norteMCliMRestFRestLotSSPanel = new JPanel();
-//        norteMCliMRestFRestLotSSPanel.setLayout(new FlowLayout());
-//        norteMCliMRestFRestLotSSPanel.add(mCliMRestsFRestsLotLabel);
-//        norteMCliMRestFRestLotSubPanel.add(norteMCliMRestFRestLotSSPanel, BorderLayout.CENTER);
-//        norteMCliMRestFRestLotSubPanel.add(ptEnMCliMRestFRestLotButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMRestFRestLotSSPanel = new JPanel();
-//        centroMCliMRestFRestLotSSPanel.setLayout(new GridLayout(4, 2));
-//        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel);
-//
-//        JPanel centroMCliMRestFRestLotSSPanel1 = new JPanel();
-//        centroMCliMRestFRestLotSSPanel1.setLayout(new GridBagLayout());
-//        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel1);
-//
-//        JPanel centroMCliMRestFRestLotSSPanel2 = new JPanel();
-//        centroMCliMRestFRestLotSSPanel2.setLayout(new GridBagLayout());
-//        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel2);
-//
-//        centroMCliMRestFRestLotSSPanel.add(mCliMRestFRestLotLabel);
-//        centroMCliMRestFRestLotSSPanel1.add(dataMCliMRestFRestLotLabel);
-//        centroMCliMRestFRestLotSSPanel1.add(datePickerMCliMRestFRestLot);
-//        centroMCliMRestFRestLotSSPanel2.add(tabelaMCliMRestFRestLot);
-//
-//        sulMCliMRestFRestLotSubPanel.setLayout(new FlowLayout());
-//        sulMCliMRestFRestLotSubPanel.add(voltarMCliMRestFRestLotButton);
-//        sulMCliMRestFRestLotSubPanel.add(retornarMCliMRestFRestLotButton);
-//
-//        retornarMCliMRestFRestLotButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        voltarMCliMRestFRestLotButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//    }
-//
-//    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS - CIDADE//////////
-//    private void construirPanelMCliMRestFRestCid(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestCidSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMRestFRestCidSubPanel = new JPanel();
-//        norteMCliMRestFRestCidSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMRestFRestCidSubPanel = new JPanel();
-//        JPanel sulMCliMRestFRestCidSubPanel = new JPanel();
-//
-//        JLabel mCliMRestsFRestsCidLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
-//        JLabel mCliMRestFRestCidLabel = new JLabel("CIDADE");
-//
-//        JCheckBox coimbraMCliMRestFOrdRestJCBox = new JCheckBox("Coimbra");
-//        coimbraMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox portoMCliMRestFOrdRestJCBox = new JCheckBox("Porto");
-//        portoMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox lisboaMCliMRestFOrdRestJCBox = new JCheckBox("Lisboa");
-//        lisboaMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox guimaraesMCliMRestFOrdRestJCBox = new JCheckBox("Guimarães");
-//        guimaraesMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox bragaMCliMRestFOrdRestJCBox = new JCheckBox("Braga");
-//        bragaMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
-//        JCheckBox vilaDoCondeMCliMRestFOrdRestJCBox = new JCheckBox("Vila do Conde");
-//        vilaDoCondeMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
-//
-//        JButton ptEnMCliMRestFRestCidButton = new JButton("PT/EN");
-//        JButton voltarMCliMRestFRestCidButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMRestFRestCidButton = new JButton("VOLTAR");
-//
-//        mCliMRestFRestCidSuperPanel.add(norteMCliMRestFRestCidSubPanel, "North");
-//        mCliMRestFRestCidSuperPanel.add(centroMCliMRestFRestCidSubPanel, "Center");
-//        mCliMRestFRestCidSuperPanel.add(sulMCliMRestFRestCidSubPanel, "South");
-//
-//        JPanel norteMCliMRestFRestCidSSPanel = new JPanel();
-//        norteMCliMRestFRestCidSSPanel.setLayout(new FlowLayout());
-//        norteMCliMRestFRestCidSSPanel.add(mCliMRestsFRestsCidLabel);
-//        norteMCliMRestFRestCidSubPanel.add(norteMCliMRestFRestCidSSPanel, BorderLayout.CENTER);
-//        norteMCliMRestFRestCidSubPanel.add(ptEnMCliMRestFRestCidButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMRestFRestCidSSPanel = new JPanel();
-//        centroMCliMRestFRestCidSSPanel.setLayout(new GridLayout(8, 2));
-//        centroMCliMRestFRestCidSubPanel.add(centroMCliMRestFRestCidSSPanel);
-//
-//        centroMCliMRestFRestCidSSPanel.add(mCliMRestFRestCidLabel);
-//        centroMCliMRestFRestCidSSPanel.add(coimbraMCliMRestFOrdRestJCBox);
-//        centroMCliMRestFRestCidSSPanel.add(portoMCliMRestFOrdRestJCBox);
-//        centroMCliMRestFRestCidSSPanel.add(lisboaMCliMRestFOrdRestJCBox);
-//        centroMCliMRestFRestCidSSPanel.add(bragaMCliMRestFOrdRestJCBox);
-//        centroMCliMRestFRestCidSSPanel.add(guimaraesMCliMRestFOrdRestJCBox);
-//        centroMCliMRestFRestCidSSPanel.add(vilaDoCondeMCliMRestFOrdRestJCBox);
-//
-//        sulMCliMRestFRestCidSubPanel.setLayout(new FlowLayout());
-//        sulMCliMRestFRestCidSubPanel.add(voltarMCliMRestFRestCidButton);
-//        sulMCliMRestFRestCidSubPanel.add(retornarMCliMRestFRestCidButton);
-//
-//        coimbraMCliMRestFOrdRestJCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        portoMCliMRestFOrdRestJCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        lisboaMCliMRestFOrdRestJCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//        bragaMCliMRestFOrdRestJCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//        guimaraesMCliMRestFOrdRestJCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//        vilaDoCondeMCliMRestFOrdRestJCBox.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        retornarMCliMRestFRestCidButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//        voltarMCliMRestFRestCidButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//    }
-//
-//
-//    //todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK
-////////MENU CLIENTE – CONSULTAR COMENTÁRIOS MENU//////////
-//
-//private void construirPanelMCliMCom(Interface janela, Container contentor, JPanel
-//        loginSuperPanel, JPanel MCliMComSuperPanel) {
-//
-//
-//    /////SUBPAINEIS//////
-//    JPanel norteMCliMComSubPanel = new JPanel();
-//    norteMCliMComSubPanel.setLayout(new BorderLayout());
-//    JPanel centroMCliMComSubPanel = new JPanel();
-//    JPanel sulMCliMComSubPanel = new JPanel();
-//
-//    JLabel mCliMComLabel = new JLabel("MENU CLIENTE - CONSULTAR COMENTÁRIOS:");
-//
-//    JRadioButton mCliMComFPPRButton = new JRadioButton("PRÓPRIOS");
-//JRadioButton mCliMComFCliRButton = new JRadioButton("CLIENTE ESPECÍFICO");
-//JRadioButton mCliMComFRestRButton = new JRadioButton("RESTAURANTE ESPECÍFICO");
-//JRadioButton mCliMComFIDRButton = new JRadioButton("INTERVALO DE DATAS");
-//
-//
-//
-//
-//        ButtonGroup group = new ButtonGroup();
-//       group.add(mCliMComFPPRButton);
-//        group.add(mCliMComFCliRButton);
-//group.add (mCliMComFRestRButton);
-//group.add (mCliMComFIDRButton);
-//
-//
-//    //JTextField mCliMComFCliText = new JTextField(17);
-//    //JTextField mCliFComRestText = new JTextField(17);
-//
-//
-//JButton ptEnMCliMComButton = new JButton("PT/EN");
-//    JButton voltarMCliMComButton = new JButton("MENU CLIENTE");
-//    //JButton okMCliMComButton = new JButton("OK");
-//
-//    mCliMComSuperPanel.add(norteMCliMComSubPanel, "North");
-//    mCliMComSuperPanel.add(centroMCliMComSubPanel, "Center");
-//    mCliMComSuperPanel.add(sulMCliMComSubPanel, "South");
-//
-//    JPanel norteMCliMComSSPanel = new JPanel();
-//    norteMCliMComSSPanel.setLayout(new FlowLayout());
-//    norteMCliMComSSPanel.add(mCliMComLabel);
-//    norteMCliMComSubPanel.add(norteMCliMComSSPanel, BorderLayout.CENTER);
-//    norteMCliMComSubPanel.add(ptEnMCliMComButton, BorderLayout.EAST);
-//
-//    JPanel centroMCliMComSSPanel = new JPanel();
-//    centroMCliMComSSPanel.setLayout(new FlowLayout());
-//    centroMCliMComSubPanel.add(centroMCliMComSSPanel, BorderLayout.WEST);
-//
-//    JPanel centroMCliMComSSPanel1 = new JPanel();
-//    centroMCliMComSSPanel1.setLayout(new FlowLayout());
-//    centroMCliMComSubPanel.add(centroMCliMComSSPanel1, BorderLayout.WEST);
-//
-//    JPanel centroMCliMComSSPanel2 = new JPanel();
-//    centroMCliMComSSPanel2.setLayout(new FlowLayout());
-//    centroMCliMComSubPanel.add(centroMCliMComSSPanel2, BorderLayout.WEST);
-//
-//    JPanel centroMCliMComSSPanel3 = new JPanel();
-//    centroMCliMComSSPanel3.setLayout(new FlowLayout());
-//    centroMCliMComSubPanel.add(centroMCliMComSSPanel3, BorderLayout.WEST);
-//
-//    JPanel centroMCliMComSSPanel4 = new JPanel();
-//    centroMCliMComSSPanel4.setLayout(new FlowLayout());
-//    centroMCliMComSubPanel.add(centroMCliMComSSPanel4, BorderLayout.CENTER);
-//
-//
-//centroMCliMComSSPanel.add(mCliMComFPPRButton);
-//centroMCliMComSSPanel.add(mCliMComFCliRButton);
-//centroMCliMComSSPanel.add(mCliMComFRestRButton);
-//centroMCliMComSSPanel.add(mCliMComFIDRButton);
-//
-//        sulMCliMComSubPanel.setLayout(new FlowLayout());
-//    sulMCliMComSubPanel.add(voltarMCliMComButton);
-//    //sulMCliMComSubPanel.add(okMCliMComButton);
-//
-//mCliMComFPPRButton.addActionListener(a -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//    });
-//
-//mCliMComFCliRButton.addActionListener(a -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//    });
-//
-//mCliMComFRestRButton.addActionListener(a -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//    });
-//
-//mCliMComFIDRButton.addActionListener(a -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//    });
-//
-//
-//    voltarMCliMComButton.addActionListener(a -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//    });
-//
-//sobras
-//centroMCliMComSSPanel.add(mCliMComLabel);
-//    centroMCliMComSSPanel.add(tabelaMCliFCom);
-//
-//    centroMCliMComSSPanel1.add(mCliFComCliLabel);
-//    centroMCliMComSSPanel1.add(mCliFComCliText);
-//
-//    centroMCliMComSSPanel1.add(mCliFComRestLabel);
-//    centroMCliMComSSPanel1.add(mCliFComRestText);
-//
-//    centroMCliMComSSPanel2.add(mCliFComDatasLabel);
-//    centroMCliMComSSPanel3.add(mCliMComLabel);
-//    centroMCliMComSSPanel3.add(datePicker4);
-//    centroMCliMComSSPanel3.add(mCliMComAteLabel);
-//    centroMCliMComSSPanel3.add(datePicker5);
-//
-//
-//   //todo ver os encaminhamentos para responder comentário
-//    okMCliMComButton.addActionListener(e -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, LOGIN_CARD);
-//        this.setSize(500, 180);
-//    });
-//
-//}
+//      });
+
+        mRestConsultarComentariosButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MRESTCOMENTARIOS_CARD);
+            this.setSize(LARGURA_PADRAO, 350);
+        });
+
+        logoutMenuRestauranteButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
+        });
+    }
+
+    ///////////MENU RESTAURANTE - ADICIONAR PRATO//////////////////////
+    private void construirPanelMRestAdPrato(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAdPratoSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteAdPratoSubPanel = new JPanel();
+        norteAdPratoSubPanel.setLayout(new BorderLayout());
+        JPanel centroAdPratoSubPanel = new JPanel();
+        JPanel sulAdPratoSubPanel = new JPanel();
+
+        JLabel adPratoLabel = new JLabel("ADICIONAR PRATO");
+        JLabel nomePratoLabel = new JLabel("Nome Prato");
+        JLabel descricaoPratoLabel = new JLabel("Descrição");
+        JLabel precoPratoLabel = new JLabel("Preço");
+
+        JTextField nomePratoText = new JTextField(20);
+        JTextField descricaoPratoText = new JTextField(20);
+        JTextField precoPratoText = new JTextField(10);
+
+
+        JButton ptEnAdPratoButton = new JButton("PT/EN");
+        JButton voltarMenuRestAdPratoButton = new JButton("MENU RESTAURANTE");
+        JButton confirmarAdPratoButton = new JButton("CONFIRMAR");
+
+
+        JComboBox tipoPratoAd = new JComboBox();
+        tipoPratoAd.addItem("Carta");
+        tipoPratoAd.addItem("Prato do dia");
+
+
+        mRestAdPratoSuperPanel.add(norteAdPratoSubPanel, "North");
+        mRestAdPratoSuperPanel.add(centroAdPratoSubPanel, "Center");
+        mRestAdPratoSuperPanel.add(sulAdPratoSubPanel, "South");
+
+        JPanel norteAdPratoSSPanel = new JPanel();
+        norteAdPratoSSPanel.setLayout(new FlowLayout());
+        norteAdPratoSSPanel.add(adPratoLabel);
+        norteAdPratoSubPanel.add(norteAdPratoSSPanel, BorderLayout.CENTER);
+        norteAdPratoSubPanel.add(ptEnAdPratoButton, BorderLayout.EAST);
+
+        JPanel centroAdPratoSSPanelForm = new JPanel();
+        centroAdPratoSSPanelForm.setLayout(new GridLayout(5, 2));
+        centroAdPratoSubPanel.add(centroAdPratoSSPanelForm);
+        centroAdPratoSubPanel.add(tipoPratoAd);
+        centroAdPratoSSPanelForm.add(nomePratoLabel);
+        centroAdPratoSSPanelForm.add(nomePratoText);
+        centroAdPratoSSPanelForm.add(descricaoPratoLabel);
+        centroAdPratoSSPanelForm.add(descricaoPratoText);
+        centroAdPratoSSPanelForm.add(precoPratoLabel);
+        centroAdPratoSSPanelForm.add(precoPratoText);
+
+        sulAdPratoSubPanel.setLayout(new FlowLayout());
+        sulAdPratoSubPanel.add(voltarMenuRestAdPratoButton);
+        sulAdPratoSubPanel.add(confirmarAdPratoButton);
+
+
+        voltarMenuRestAdPratoButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        confirmarAdPratoButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+    }
+
+    /////////MENU RESTAURANTE – ACTUALIZAR PRATO//////////////////////
+    private void construirPanelMRestAtPratoDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtPratoSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteAtPratoSubPanel = new JPanel();
+        norteAtPratoSubPanel.setLayout(new BorderLayout());
+        JPanel centroAtPratoSubPanel = new JPanel();
+        JPanel sulAtPratoSubPanel = new JPanel();
+
+        JLabel atPratoLabel = new JLabel("ACTUALIZAR PRATO DO DIA");
+        JLabel atNomePratoLabel = new JLabel("Nome Prato");
+        JLabel atDescricaoPratoLabel = new JLabel("Descrição");
+        JLabel atPrecoPratoLabel = new JLabel("Preço");
+
+        JTextField atNomePratoText = new JTextField(20);
+        JTextField atDescricaoPratoText = new JTextField(20);
+        JTextField atPrecoPratoText = new JTextField(10);
+
+        JButton ptEnAtPratoButton = new JButton("PT/EN");
+        JButton voltarMenuRestAtPratoButton = new JButton("MENU RESTAURANTE");
+        JButton confirmarAtPratoButton = new JButton("CONFIRMAR");
+
+        mRestAtPratoSuperPanel.add(norteAtPratoSubPanel, "North");
+        mRestAtPratoSuperPanel.add(centroAtPratoSubPanel, "Center");
+        mRestAtPratoSuperPanel.add(sulAtPratoSubPanel, "South");
+
+        JPanel norteAtPratoSSPanel = new JPanel();
+        norteAtPratoSSPanel.setLayout(new FlowLayout());
+        norteAtPratoSSPanel.add(atPratoLabel);
+        norteAtPratoSubPanel.add(norteAtPratoSSPanel, BorderLayout.CENTER);
+        norteAtPratoSubPanel.add(ptEnAtPratoButton, BorderLayout.EAST);
+
+        JPanel centroAtPratoSSPanelForm = new JPanel();
+        centroAtPratoSSPanelForm.setLayout(new GridLayout(3, 2));
+        centroAtPratoSubPanel.add(centroAtPratoSSPanelForm);
+        //centroAtPratoSSPanelForm.add(atPratoLabel);
+        centroAtPratoSSPanelForm.add(atNomePratoLabel);
+        centroAtPratoSSPanelForm.add(atNomePratoText);
+        centroAtPratoSSPanelForm.add(atDescricaoPratoLabel);
+        centroAtPratoSSPanelForm.add(atDescricaoPratoText);
+        centroAtPratoSSPanelForm.add(atPrecoPratoLabel);
+        centroAtPratoSSPanelForm.add(atPrecoPratoText);
+
+        sulAtPratoSubPanel.setLayout(new FlowLayout());
+        sulAtPratoSubPanel.add(voltarMenuRestAtPratoButton);
+        sulAtPratoSubPanel.add(confirmarAtPratoButton);
+
+
+        voltarMenuRestAtPratoButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+        confirmarAtPratoButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
+
+    ///////////////////MENU RESTAURANTE - ACTUALIZAR DADOS /////////////////////////
+    private void construirPanelMRestAtDados(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtDadosSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMRestAtDadosSubPanel = new JPanel();
+        norteMRestAtDadosSubPanel.setLayout(new BorderLayout());
+        JPanel centroMRestAtDadosSubPanel = new JPanel();
+        JPanel sulMRestAtDadosSubPanel = new JPanel();
+
+        JLabel atDadosRestLabel = new JLabel("ACTUALIZAR DADOS");
+        JLabel nomeAtDadosRestLabel = new JLabel("Nome");
+        JLabel emailAtDadosRestLabel = new JLabel("E-mail");
+        JLabel moradaAtDadosRestLabel = new JLabel("Morada");
+        JLabel cidadeAtDadosRestLabel = new JLabel("Cidade");
+        JLabel telemovelAtDadosRestLabel = new JLabel("Telemóvel");
+///////////////////////
+        JLabel lotacaoAtDadosRestLabel = new JLabel("Lotação:");
+        JLabel esplanadaAtDadosRestLabel = new JLabel("Esplanada");
+        JLabel zonaInteriorAtDadosRestLabel = new JLabel("Zona Interior:");
+        JLabel zonaInteriorNFumAtDadosRestLabel = new JLabel("Ñ Fumadores");
+        JLabel zonaInteriorFumAtDadosRestLabel = new JLabel("Fumadores");
+        JLabel horariosAtDadosRestLabel = new JLabel("Horários:");
+        JLabel horariosAlmocoAtDadosRestLabel = new JLabel("Almoço:");
+        JLabel horarioAlmocoInicioAtDadosRestLabel = new JLabel("Início");
+        JLabel horarioAlmocoFimAtDadosRestLabel = new JLabel("Fim");
+        JLabel horariosJantarAtDadosRestLabel = new JLabel("Jantar:");
+        JLabel horarioJantarInicioAtDadosRestLabel = new JLabel("Início");
+        JLabel horarioJantarFimAtDadosRestLabel = new JLabel("Fim");
+        JLabel usernameAtDadosRestLabel = new JLabel("Username");
+        JLabel passwordAtDadosRestLabel = new JLabel("Password");
+        JLabel confirmarPasswordAtDadosRestLabel = new JLabel("Confirmar password ");
+
+        JTextField nomeAtDadosRestText = new JTextField(18);
+        nomeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField emailAtDadosRestText = new JTextField(18);
+        emailAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField moradaAtDadosRestText = new JTextField(20);
+        moradaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField cidadeAtDadosRestText = new JTextField(15);
+        cidadeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField telemovelAtDadosRestText = new JFormattedTextField(mascaraTelemovel);
+        telemovelAtDadosRestText.setColumns(8);
+        telemovelAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+
+        //JTextField lotacaoAtDadosRestText = new JTextField(5);
+        JTextField esplanadaAtDadosRestText = new JTextField(3);
+        esplanadaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField zonaInteriorNFumAtDadosRestText = new JTextField(3);
+        zonaInteriorNFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField zonaInteriorFumAtDadosRestText = new JTextField(3);
+        zonaInteriorFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField horarioAlmocoInicioAtDadosRestText = new JTextField(3);
+        horarioAlmocoInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField horarioAlmocoFimAtDadosRestText = new JTextField(3);
+        horarioAlmocoFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField horarioJantarInicioAtDadosRestText = new JTextField(3);
+        horarioJantarInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField horarioJantarFimAtDadosRestText = new JTextField(3);
+        horarioJantarFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        ///////
+        JTextField usernameAtDadosRestText = new JTextField(20);
+        usernameAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+
+        JPasswordField passwordAtDadosRestField = new JPasswordField(15);
+        passwordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JPasswordField confirmarPasswordAtDadosRestField = new JPasswordField(15);
+        confirmarPasswordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+
+        JButton ptEnAtDadosRestButton = new JButton("PT/EN");
+        JButton voltarMenuRestAtDadosRestButton = new JButton("MENU RESTAURANTE");
+        JButton atDadosRestButton = new JButton("ACTUALIZAR");
+
+        mRestAtDadosSuperPanel.add(norteMRestAtDadosSubPanel, "North");
+        mRestAtDadosSuperPanel.add(centroMRestAtDadosSubPanel, "Center");
+        mRestAtDadosSuperPanel.add(sulMRestAtDadosSubPanel, "South");
+
+        JPanel norteAtDadosRestSSPanel = new JPanel();
+        norteAtDadosRestSSPanel.setLayout(new FlowLayout());
+        norteAtDadosRestSSPanel.add(atDadosRestLabel);
+        norteMRestAtDadosSubPanel.add(norteAtDadosRestSSPanel, BorderLayout.CENTER);
+        norteMRestAtDadosSubPanel.add(ptEnAtDadosRestButton, BorderLayout.EAST);
+
+        JPanel centroAtDadosRestSSPanelForm1 = new JPanel();
+        centroAtDadosRestSSPanelForm1.setLayout(new FlowLayout());
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm1, BorderLayout.WEST);
+
+        JPanel centroAtDadosRestSSPanelForm2 = new JPanel();
+        centroAtDadosRestSSPanelForm2.setLayout(new FlowLayout());
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2, BorderLayout.WEST);
+
+        JPanel centroAtDadosRestSSPanelForm2A = new JPanel();
+        centroAtDadosRestSSPanelForm2A.setLayout(new FlowLayout());
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2A, BorderLayout.WEST);
+
+        JPanel centroAtDadosRestSSPanelForm3 = new JPanel();
+        //centroAtDadosRestSSPanelForm3.setLayout(new FlowLayout());
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm3, BorderLayout.WEST);
+
+        JPanel centroAtDadosRestSSPanelForm4 = new JPanel();
+        centroAtDadosRestSSPanelForm4.setLayout(new FlowLayout());
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm4, BorderLayout.WEST);
+
+        JPanel centroAtDadosRestSSPanelForm5 = new JPanel();
+        centroAtDadosRestSSPanelForm5.setLayout(new FlowLayout());
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm5, BorderLayout.WEST);
+
+        JPanel centroAtDadosRestSSPanelForm6 = new JPanel();
+        centroAtDadosRestSSPanelForm6.setLayout(new FlowLayout());
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm6, BorderLayout.WEST);
+
+        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestText);
+        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestText);
+
+        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestText);
+        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestText);
+        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestText);
+
+        centroAtDadosRestSSPanelForm3.add(lotacaoAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestText);
+        centroAtDadosRestSSPanelForm3.add(zonaInteriorAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestText);
+        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestText);
+
+
+        centroAtDadosRestSSPanelForm4.add(horariosAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm4.add(horariosAlmocoAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestText);
+        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestText);
+        centroAtDadosRestSSPanelForm4.add(horariosJantarAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestText);
+        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestText);
+
+        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestText);
+
+        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestField);
+        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestField);
+
+        sulMRestAtDadosSubPanel.setLayout(new FlowLayout());
+        sulMRestAtDadosSubPanel.add(voltarMenuRestAtDadosRestButton);
+        sulMRestAtDadosSubPanel.add(atDadosRestButton);
+
+        voltarMenuRestAtDadosRestButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        atDadosRestButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+    }
+
+    //////MENU RESTAURANTE – HISTÓRICO DE RESERVAS//////////
+    private void construirPanelMRestReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestReservasSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMRestReservasSubPanel = new JPanel();
+        norteMRestReservasSubPanel.setLayout(new BorderLayout());
+        JPanel centroMRestReservasSubPanel = new JPanel();
+        JPanel sulMRestReservasSubPanel = new JPanel();
+
+        JLabel mRestReservasLabel = new JLabel("HISTÓRICO DE RESERVAS");
+        JLabel usernameMRestReservasLabel = new JLabel("Username");
+        //JLabel filtrarTipomRestResLabel = new JLabel("Escolha a opção em que a lista será mostrada:");
+        JLabel filtrarDataInicioMRestReservasLabel = new JLabel("De");
+        JLabel filtrarDataFimMRestReservasLabel = new JLabel("Até");
+
+
+        JTextField usernameMRestReservasText = new JTextField(20);
+
+        JCheckBox cem = new JCheckBox("Até 100");
+        cem.setMnemonic(KeyEvent.VK_C);
+        JCheckBox duzentos = new JCheckBox("100-200");
+        duzentos.setMnemonic(KeyEvent.VK_C);
+        JCheckBox trezentos = new JCheckBox("200-300");
+        trezentos.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quatrocentos = new JCheckBox("+ de 300");
+        quatrocentos.setMnemonic(KeyEvent.VK_C);
+
+
+        JRadioButton filtrarIntervDatasMRestResRButton = new JRadioButton("DATAS");
+        //todo verificar a questão do calendário
+        JRadioButton filtrarTipomRestResRButton = new JRadioButton("TIPO");
+        JRadioButton filtrarIntervValmRestResRButton = new JRadioButton("VALORES");
+        JRadioButton filtrarClientemRestResRButton = new JRadioButton("CLIENTE");
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(filtrarIntervDatasMRestResRButton);
+        group.add(filtrarTipomRestResRButton);
+        group.add(filtrarIntervValmRestResRButton);
+        group.add(filtrarClientemRestResRButton);
+
+        JComboBox<String> filtrosTipoMRestReservasJCBox = new JComboBox<>();
+        filtrosTipoMRestReservasJCBox.addItem("");
+        filtrosTipoMRestReservasJCBox.addItem("Presencial");
+        filtrosTipoMRestReservasJCBox.addItem("Take-Away");
+
+        JButton ptEnMRestReservasButton = new JButton("PT/EN");
+        JButton voltarMRestReservasButton = new JButton("MENU RESTAURANTE");
+        JButton okMRestReservasButton = new JButton("OK");
+
+        //Adição do calendário
+        UtilDateModel model1 = new UtilDateModel();
+        UtilDateModel model2 = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanel = new JDatePanelImpl(model1, p);
+        JDatePickerImpl datePicker1 = new JDatePickerImpl(datePanel, new DateLabelFormatter());
+
+        JDatePanelImpl datePanel1 = new JDatePanelImpl(model2, p);
+        JDatePickerImpl datePicker2 = new JDatePickerImpl(datePanel1, new DateLabelFormatter());
+
+        mRestReservasSuperPanel.add(norteMRestReservasSubPanel, "North");
+        mRestReservasSuperPanel.add(centroMRestReservasSubPanel, "Center");
+        mRestReservasSuperPanel.add(sulMRestReservasSubPanel, "South");
+
+        JPanel norteMRestReservasSSPanel = new JPanel();
+        norteMRestReservasSSPanel.setLayout(new FlowLayout());
+        norteMRestReservasSSPanel.add(mRestReservasLabel);
+        norteMRestReservasSubPanel.add(norteMRestReservasSSPanel, BorderLayout.CENTER);
+        norteMRestReservasSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);
+
+        JPanel centroMRestReservasSSPanel = new JPanel();
+        centroMRestReservasSSPanel.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel1 = new JPanel();
+        centroMRestReservasSSPanel1.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel2 = new JPanel();
+        centroMRestReservasSSPanel2.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel2A = new JPanel();
+        centroMRestReservasSSPanel2A.setLayout(new GridLayout(1, 1));
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2A, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel3 = new JPanel();
+        centroMRestReservasSSPanel3.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel3, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel4 = new JPanel();
+        centroMRestReservasSSPanel4.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel4, BorderLayout.WEST);
+
+        centroMRestReservasSSPanel.add(filtrarIntervDatasMRestResRButton);
+        centroMRestReservasSSPanel1.add(filtrarDataInicioMRestReservasLabel);
+        centroMRestReservasSSPanel1.add(datePicker1);
+        centroMRestReservasSSPanel1.add(filtrarDataFimMRestReservasLabel);
+        centroMRestReservasSSPanel1.add(datePicker2);
+
+        centroMRestReservasSSPanel2.add(filtrarTipomRestResRButton);
+        centroMRestReservasSSPanel2A.add(filtrosTipoMRestReservasJCBox);
+
+        centroMRestReservasSSPanel3.add(filtrarIntervValmRestResRButton);
+        centroMRestReservasSSPanel3.add(cem);
+        centroMRestReservasSSPanel3.add(duzentos);
+        centroMRestReservasSSPanel3.add(trezentos);
+        centroMRestReservasSSPanel3.add(quatrocentos);
+
+        centroMRestReservasSSPanel4.add(filtrarClientemRestResRButton);
+        centroMRestReservasSSPanel4.add(usernameMRestReservasLabel);
+        centroMRestReservasSSPanel4.add(usernameMRestReservasText);
+
+        sulMRestReservasSubPanel.setLayout(new FlowLayout());
+        sulMRestReservasSubPanel.add(voltarMRestReservasButton);
+        sulMRestReservasSubPanel.add(okMRestReservasButton);
+
+
+        voltarMRestReservasButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        //todo ver os encaminhamentos
+        okMRestReservasButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+    }
+
+    /**
+     * Convert ResourceBundle into a Properties object.
+     *
+     * @param resource a resource bundle to convert.
+     * @return Properties a properties version of the resource bundle.
+     */
+
+
+////////COMENTEI AQUI NOVAMENTE////////////////////
+    private static Properties convertResourceBundleToProperties(ResourceBundle resource) {
+        Properties properties = new Properties();
+        Enumeration<String> keys = resource.getKeys();
+        while (keys.hasMoreElements()) {
+            String key = keys.nextElement();
+            properties.put(key, resource.getString(key));
+        }
+        return properties;
+    }
+
+
+    //////MENU RESTAURANTE – COMENTÁRIOS//////////
+    private void construirPanelMRestComentarios(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestComentariosSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMRestComentariosSubPanel = new JPanel();
+        norteMRestComentariosSubPanel.setLayout(new BorderLayout());
+        JPanel centroMRestComentariosSubPanel = new JPanel();
+        JPanel sulMRestComentariosSubPanel = new JPanel();
+
+        JLabel mRestComentariosLabel = new JLabel("COMENTÁRIOS RECEBIDOS");
+
+
+        String[] nomeColunasMRestComentarios = new String[]{
+                "USERNAME", "COMENTÁRIO", "PONTUAÇÃO"
+        };
+
+        //todo exemplo a verificar
+        Object[][] dados = new Object[][]{
+                {"USERNAME", "COMENTÁRIO", "PONTUAÇÃO"},
+                {"Nuno", "Muito bom", 4.0},
+                {"Manuel", "Excelente", 5.0},
+                {"André", "Pouco espaço interno", 3.0},
+        };
+        //criação da tabela
+        JTable tabela = new JTable(dados, nomeColunasMRestComentarios);
+
+//        JPopupMenu popupMenu = new JPopupMenu();
+//        JMenuItem menuItemAdd = new JMenuItem("Responder");
+
+        JButton ptEnMRestReservasButton = new JButton("PT/EN");
+        JButton voltarMRestComentariosButton = new JButton("MENU RESTAURANTE");
+        JButton responderMRestComentariosButton = new JButton("OK");
+
+        mRestComentariosSuperPanel.add(norteMRestComentariosSubPanel, "North");
+        mRestComentariosSuperPanel.add(centroMRestComentariosSubPanel, "Center");
+        mRestComentariosSuperPanel.add(sulMRestComentariosSubPanel, "South");
+
+        JPanel norteMRestComentariosSSPanel = new JPanel();
+        norteMRestComentariosSSPanel.setLayout(new FlowLayout());
+        norteMRestComentariosSSPanel.add(mRestComentariosLabel);
+        norteMRestComentariosSubPanel.add(norteMRestComentariosSSPanel, BorderLayout.CENTER);
+        norteMRestComentariosSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);
+
+        JPanel centroMRestReservasSSPanel1 = new JPanel();
+        centroMRestReservasSSPanel1.setLayout(new FlowLayout());
+        centroMRestComentariosSubPanel.add(tabela, BorderLayout.WEST);
+
+        sulMRestComentariosSubPanel.setLayout(new FlowLayout());
+        sulMRestComentariosSubPanel.add(voltarMRestComentariosButton);
+        sulMRestComentariosSubPanel.add(responderMRestComentariosButton);
+
+
+        voltarMRestComentariosButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        //todo ver os encaminhamentos para responder comentário
+        responderMRestComentariosButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS//////////
+    private void construirPanelMCliMRestFOrdRests(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestsSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFOrdRestsSubPanel = new JPanel();
+        norteMCliMRestFOrdRestsSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFOrdRestsSubPanel = new JPanel();
+        JPanel sulMCliMRestFOrdRestsSubPanel = new JPanel();
+
+        JLabel mCliMRestFOrdRestsLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+
+        JLabel fMCliMRestFOrdRestsLabel = new JLabel("FILTRAR:");
+        JButton fhoraFMCliMRestFOrdRestsButton = new JButton("HORA DE FUNCIONAMENTO");
+        JButton fLotMCliMRestFOrdRestsButton = new JButton("LOTAÇÃO");
+        JButton fCidCliMRestFOrdRestsButton = new JButton("CIDADE");
+
+        JLabel fOrdMCliMRestsFOrdRestLabel = new JLabel("FILTRAR/ORDENAR:");
+        JButton fOrdPontCliMRestFOrdRestsButton = new JButton("PONTUAÇÃO");
+        JButton fOrdValoresMCliMRestFOrdRestsButton = new JButton("VALORES MÉDIOS DOS PRATOS");
+
+        JButton ptEnMCliMRestFOrdRestsButton = new JButton("PT/EN");
+        JButton voltarMCliMRestsFOrdRestButton = new JButton("MENU CLIENTE");
+
+        mCliMRestFOrdRestsSuperPanel.add(norteMCliMRestFOrdRestsSubPanel, "North");
+        mCliMRestFOrdRestsSuperPanel.add(centroMCliMRestFOrdRestsSubPanel, "Center");
+        mCliMRestFOrdRestsSuperPanel.add(sulMCliMRestFOrdRestsSubPanel, "South");
+
+        JPanel norteMCliMRestFOrdRestsSSPanel = new JPanel();
+        norteMCliMRestFOrdRestsSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFOrdRestsSSPanel.add(mCliMRestFOrdRestsLabel);
+        norteMCliMRestFOrdRestsSubPanel.add(norteMCliMRestFOrdRestsSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFOrdRestsSubPanel.add(ptEnMCliMRestFOrdRestsButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFOrdRestsSSPanel = new JPanel();
+        centroMCliMRestFOrdRestsSSPanel.setLayout(new GridLayout(8, 1));
+        centroMCliMRestFOrdRestsSubPanel.add(centroMCliMRestFOrdRestsSSPanel);
+
+        centroMCliMRestFOrdRestsSSPanel.add(fMCliMRestFOrdRestsLabel);
+        centroMCliMRestFOrdRestsSSPanel.add(fhoraFMCliMRestFOrdRestsButton);
+        centroMCliMRestFOrdRestsSSPanel.add(fLotMCliMRestFOrdRestsButton);
+        centroMCliMRestFOrdRestsSSPanel.add(fCidCliMRestFOrdRestsButton);
+        centroMCliMRestFOrdRestsSSPanel.add(fOrdMCliMRestsFOrdRestLabel);
+        centroMCliMRestFOrdRestsSSPanel.add(fOrdPontCliMRestFOrdRestsButton);
+        centroMCliMRestFOrdRestsSSPanel.add(fOrdValoresMCliMRestFOrdRestsButton);
+
+        sulMCliMRestFOrdRestsSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFOrdRestsSubPanel.add(voltarMCliMRestsFOrdRestButton);
+
+        fhoraFMCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFRESTHFUNC_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        fLotMCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFRESTLOT_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        fCidCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFRESTCID_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        fOrdPontCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFRESTPONT_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        fOrdValoresMCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTVALOR_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestsFOrdRestButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – FILTRAR POR PONTUAÇÃO//////////
+    private void construirPanelMCliMRestFRestPont(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestPontSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFRestPontSubPanel = new JPanel();
+        norteMCliMRestFRestPontSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFRestPontSubPanel = new JPanel();
+        JPanel sulMCliMRestFRestPontSubPanel = new JPanel();
+
+        JLabel mCliMRestsFRestPontLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFRestPontLabel = new JLabel("PONTUAÇÃO");
+
+        JCheckBox umMCliMRestFRestPont = new JCheckBox("1 - Péssimo");
+        umMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+        JCheckBox doisMCliMRestFRestPont = new JCheckBox("2 - Ruim");
+        doisMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+        JCheckBox tresMCliMRestFRestPont = new JCheckBox("3 - Regular");
+        tresMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quatroMCliMRestFRestPont = new JCheckBox("4 - Bom");
+        quatroMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+        JCheckBox cincoMCliMRestFRestPont = new JCheckBox("5 - Muito Bom");
+        cincoMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+
+        JButton ptEnMCliMRestFRestPontButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFRestPontButton = new JButton("MENU CLIENTE");
+        JButton retonarMCliMRestFRestPontButton = new JButton("VOLTAR");
+
+        mCliMRestFRestPontSuperPanel.add(norteMCliMRestFRestPontSubPanel, "North");
+        mCliMRestFRestPontSuperPanel.add(centroMCliMRestFRestPontSubPanel, "Center");
+        mCliMRestFRestPontSuperPanel.add(sulMCliMRestFRestPontSubPanel, "South");
+
+        JPanel norteMCliMRestFRestPontSSPanel = new JPanel();
+        norteMCliMRestFRestPontSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFRestPontSSPanel.add(mCliMRestsFRestPontLabel);
+        norteMCliMRestFRestPontSubPanel.add(norteMCliMRestFRestPontSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFRestPontSubPanel.add(ptEnMCliMRestFRestPontButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFRestPontSSPanel = new JPanel();
+        centroMCliMRestFRestPontSSPanel.setLayout(new GridLayout(6, 1));
+        centroMCliMRestFRestPontSubPanel.add(centroMCliMRestFRestPontSSPanel);
+
+        centroMCliMRestFRestPontSSPanel.add(mCliMRestFRestPontLabel);
+        centroMCliMRestFRestPontSSPanel.add(umMCliMRestFRestPont);
+        centroMCliMRestFRestPontSSPanel.add(doisMCliMRestFRestPont);
+        centroMCliMRestFRestPontSSPanel.add(tresMCliMRestFRestPont);
+        centroMCliMRestFRestPontSSPanel.add(quatroMCliMRestFRestPont);
+        centroMCliMRestFRestPontSSPanel.add(cincoMCliMRestFRestPont);
+
+        sulMCliMRestFRestPontSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFRestPontSubPanel.add(voltarMCliMRestFRestPontButton);
+        sulMCliMRestFRestPontSubPanel.add(retonarMCliMRestFRestPontButton);
+
+        umMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        doisMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        tresMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        quatroMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        cincoMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retonarMCliMRestFRestPontButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestFRestPontButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS – VALORES MÉDIOS DOS PRATOS//////////
+    private void construirPanelMCliMRestFOrdRestValor(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFOrdRestValorSubPanel = new JPanel();
+        norteMCliMRestFOrdRestValorSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFOrdRestValorSubPanel = new JPanel();
+        JPanel sulMCliMRestFOrdRestValorSubPanel = new JPanel();
+
+        JLabel mCliMRestFOrdRestsValorLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFOrdRestValorLabel = new JLabel("VALORES MÉDIOS DOS PRATOS");
+
+        JRadioButton fOrdValoresCartaMCliMRestFOrdRestValorRButton = new JRadioButton("CARTA");
+        JRadioButton fOrdValoresPDiaMCliMRestFOrdRestValorRButton = new JRadioButton("PRATOS DO DIA");
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(fOrdValoresCartaMCliMRestFOrdRestValorRButton);
+        group.add(fOrdValoresPDiaMCliMRestFOrdRestValorRButton);
+
+        JButton ptEnMCliMRestFOrdRestValorButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFOrdRestValorutton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFOrdRestValorButton = new JButton("VOLTAR");
+
+        mCliMRestFOrdRestValorSuperPanel.add(norteMCliMRestFOrdRestValorSubPanel, "North");
+        mCliMRestFOrdRestValorSuperPanel.add(centroMCliMRestFOrdRestValorSubPanel, "Center");
+        mCliMRestFOrdRestValorSuperPanel.add(sulMCliMRestFOrdRestValorSubPanel, "South");
+
+        JPanel norteMCliMRestFOrdRestValorSSPanel = new JPanel();
+        norteMCliMRestFOrdRestValorSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFOrdRestValorSSPanel.add(mCliMRestFOrdRestsValorLabel);
+        norteMCliMRestFOrdRestValorSubPanel.add(norteMCliMRestFOrdRestValorSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFOrdRestValorSubPanel.add(ptEnMCliMRestFOrdRestValorButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFOrdRestValorSSPanel = new JPanel();
+        centroMCliMRestFOrdRestValorSSPanel.setLayout(new GridLayout(3, 1));
+        centroMCliMRestFOrdRestValorSubPanel.add(centroMCliMRestFOrdRestValorSSPanel);
+
+        JPanel centroMCliMRestFOrdRestValorSSPanel1 = new JPanel();
+        centroMCliMRestFOrdRestValorSSPanel1.setLayout(new GridBagLayout());
+        centroMCliMRestFOrdRestValorSubPanel.add(centroMCliMRestFOrdRestValorSSPanel1);
+
+        centroMCliMRestFOrdRestValorSSPanel.add(mCliMRestFOrdRestValorLabel);
+        centroMCliMRestFOrdRestValorSSPanel.add(fOrdValoresCartaMCliMRestFOrdRestValorRButton);
+        centroMCliMRestFOrdRestValorSSPanel.add(fOrdValoresPDiaMCliMRestFOrdRestValorRButton);
+
+        sulMCliMRestFOrdRestValorSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFOrdRestValorSubPanel.add(voltarMCliMRestFOrdRestValorutton);
+        sulMCliMRestFOrdRestValorSubPanel.add(retornarMCliMRestFOrdRestValorButton);
+
+
+        fOrdValoresCartaMCliMRestFOrdRestValorRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTVALORCARTA_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        fOrdValoresPDiaMCliMRestFOrdRestValorRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTVALORPDIA_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+        retornarMCliMRestFOrdRestValorButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        voltarMCliMRestFOrdRestValorutton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
+
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTRAR POR VALORES MÉDIOS DOS PRATOS - CARTA//////////
+    private void construirPanelMCliMRestFOrdRestValorCarta(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorCartaSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFOrdRestValorCartaSubPanel = new JPanel();
+        norteMCliMRestFOrdRestValorCartaSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFOrdRestValorCartaSubPanel = new JPanel();
+        JPanel sulMCliMRestFOrdRestValorCartaSubPanel = new JPanel();
+
+        JLabel mCliMRestFOrdRestsValorCartaLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFOrdRestValorCartaLabel = new JLabel("VALORES MÉDIOS DOS PRATOS - CARTA");
+        JCheckBox dezMCliMRestFOrdRestValorCartaCBox = new JCheckBox(">10€");
+        dezMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox dezVinteMCliMRestFOrdRestValorCartaCBox = new JCheckBox("10€-20€");
+        dezVinteMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox vinteTrintaMCliMRestFOrdRestValorCartaCBox = new JCheckBox("20€-30€");
+        vinteTrintaMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox trintaQuarentaMCliMRestFOrdRestValorCartaCBox = new JCheckBox("30€-40€");
+        trintaQuarentaMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quarentaMaisMCliMRestFOrdRestValorCartaCBox = new JCheckBox("<40€");
+        quarentaMaisMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+
+        JButton ptEnMCliMRestFOrdRestValorCartaButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFOrdRestValorCartaButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFOrdRestValorCartaButton = new JButton("VOLTAR");
+
+
+        mCliMRestFOrdRestValorCartaSuperPanel.add(norteMCliMRestFOrdRestValorCartaSubPanel, "North");
+        mCliMRestFOrdRestValorCartaSuperPanel.add(centroMCliMRestFOrdRestValorCartaSubPanel, "Center");
+        mCliMRestFOrdRestValorCartaSuperPanel.add(sulMCliMRestFOrdRestValorCartaSubPanel, "South");
+
+        JPanel norteMCliMRestFOrdRestValorCartaSSPanel = new JPanel();
+        norteMCliMRestFOrdRestValorCartaSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFOrdRestValorCartaSSPanel.add(mCliMRestFOrdRestsValorCartaLabel);
+        norteMCliMRestFOrdRestValorCartaSubPanel.add(norteMCliMRestFOrdRestValorCartaSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFOrdRestValorCartaSubPanel.add(ptEnMCliMRestFOrdRestValorCartaButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFOrdRestValorCartaSSPanel = new JPanel();
+        centroMCliMRestFOrdRestValorCartaSSPanel.setLayout(new GridLayout(1, 2));
+        centroMCliMRestFOrdRestValorCartaSubPanel.add(centroMCliMRestFOrdRestValorCartaSSPanel);
+
+        JPanel centroMCliMRestFOrdRestValorCartaSSPanel1 = new JPanel();
+        centroMCliMRestFOrdRestValorCartaSSPanel1.setLayout(new GridBagLayout());
+        centroMCliMRestFOrdRestValorCartaSubPanel.add(centroMCliMRestFOrdRestValorCartaSSPanel1);
+
+        centroMCliMRestFOrdRestValorCartaSSPanel.add(mCliMRestFOrdRestValorCartaLabel);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(dezMCliMRestFOrdRestValorCartaCBox);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(dezVinteMCliMRestFOrdRestValorCartaCBox);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(vinteTrintaMCliMRestFOrdRestValorCartaCBox);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(trintaQuarentaMCliMRestFOrdRestValorCartaCBox);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(quarentaMaisMCliMRestFOrdRestValorCartaCBox);
+
+        sulMCliMRestFOrdRestValorCartaSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFOrdRestValorCartaSubPanel.add(voltarMCliMRestFOrdRestValorCartaButton);
+        sulMCliMRestFOrdRestValorCartaSubPanel.add(retornarMCliMRestFOrdRestValorCartaButton);
+
+        dezMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        dezVinteMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        vinteTrintaMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        trintaQuarentaMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        quarentaMaisMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMRestFOrdRestValorCartaButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestFOrdRestValorCartaButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTRAR POR VALORES MÉDIOS DOS PRATOS – PRATO DO DIA//////////
+    private void construirPanelMCliMRestFOrdRestValorPDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorPDiaSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();
+        norteMCliMRestFOrdRestValorPDiaSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();
+        JPanel sulMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();
+        JLabel mCliMRestFOrdRestsValorPDiaLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFOrdRestValorMedPDiaLabel = new JLabel("VALORES MÉDIOS DOS PRATOS – PRATO DO DIA");
+
+        JCheckBox dezMCliMRestFOrdRestValorPDiaCBox = new JCheckBox(">10€");
+        dezMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox dezVinteMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("10€-20€");
+        dezVinteMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox vinteTrintaMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("20€-30€");
+        vinteTrintaMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox trintaQuarentaMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("30€-40€");
+        trintaQuarentaMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quarentaMaisMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("<40€");
+        quarentaMaisMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+
+        JButton ptEnMCliMRestFOrdRestValorPDiaButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFOrdRestValorPDiaButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFOrdRestValorPDiaButton = new JButton("VOLTAR");
+
+        mCliMRestFOrdRestValorPDiaSuperPanel.add(norteMCliMRestFOrdRestValorPDiaSubPanel, "North");
+        mCliMRestFOrdRestValorPDiaSuperPanel.add(centroMCliMRestFOrdRestValorPDiaSubPanel, "Center");
+        mCliMRestFOrdRestValorPDiaSuperPanel.add(sulMCliMRestFOrdRestValorPDiaSubPanel, "South");
+
+        JPanel norteMCliMRestFOrdRestValorPDiaSSPanel = new JPanel();
+        norteMCliMRestFOrdRestValorPDiaSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFOrdRestValorPDiaSSPanel.add(mCliMRestFOrdRestsValorPDiaLabel);
+        norteMCliMRestFOrdRestValorPDiaSubPanel.add(norteMCliMRestFOrdRestValorPDiaSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFOrdRestValorPDiaSubPanel.add(ptEnMCliMRestFOrdRestValorPDiaButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFOrdRestValorPDiaSSPanel = new JPanel();
+        centroMCliMRestFOrdRestValorPDiaSSPanel.setLayout(new GridLayout(1, 2));
+        centroMCliMRestFOrdRestValorPDiaSubPanel.add(centroMCliMRestFOrdRestValorPDiaSSPanel);
+
+        JPanel centroMCliMRestFOrdRestValorPDiaSSPanel1 = new JPanel();
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.setLayout(new GridBagLayout());
+        centroMCliMRestFOrdRestValorPDiaSubPanel.add(centroMCliMRestFOrdRestValorPDiaSSPanel1);
+
+        centroMCliMRestFOrdRestValorPDiaSSPanel.add(mCliMRestFOrdRestValorMedPDiaLabel);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(dezMCliMRestFOrdRestValorPDiaCBox);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(dezVinteMCliMRestFOrdRestValorPDiaCBox);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(vinteTrintaMCliMRestFOrdRestValorPDiaCBox);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(trintaQuarentaMCliMRestFOrdRestValorPDiaCBox);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(quarentaMaisMCliMRestFOrdRestValorPDiaCBox);
+
+        sulMCliMRestFOrdRestValorPDiaSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFOrdRestValorPDiaSubPanel.add(voltarMCliMRestFOrdRestValorPDiaButton);
+        sulMCliMRestFOrdRestValorPDiaSubPanel.add(retornarMCliMRestFOrdRestValorPDiaButton);
+
+        dezMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        dezVinteMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        vinteTrintaMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        trintaQuarentaMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        quarentaMaisMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMRestFOrdRestValorPDiaButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        voltarMCliMRestFOrdRestValorPDiaButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS – HORÁRIO DE FUNCIONAMENTO//////////
+    private void construirPanelMCliMRestFRestHFunc(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestHFuncSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFRestHFuncSubPanel = new JPanel();
+        norteMCliMRestFRestHFuncSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFRestHFuncSubPanel = new JPanel();
+        JPanel sulMCliMRestFRestHFuncSubPanel = new JPanel();
+
+        JLabel mCliMRestsFRestsHFuncLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFRestHFuncLabel = new JLabel("HORÁRIOS DE FUNCIONAMENTO");
+
+        JLabel fHoraMCliMRestFRestHFuncLabel = new JLabel("HORA");
+        JLabel fDataMCliMRestFRestHFuncLabel = new JLabel("DATA");
+
+//Calendário
+        UtilDateModel modelMCliMRestFRestHFun = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanelMCliMRestFRestHFun = new JDatePanelImpl(modelMCliMRestFRestHFun, p);
+        JDatePickerImpl datePickerMCliMRestFRestHFun = new JDatePickerImpl(datePanelMCliMRestFRestHFun, new DateLabelFormatter());
+
+//TODO ver melhor forma de apresentar para conseguir selecionar
+        String[] fHoraMCliMRestFRestHFun = {"", "11h", "11h30", "12h", "12h30", "13h", "13h30", "14h", "14h30", "15h", "15h30", "19h", "19h30", "20h", "20h30", "21h", "21h30", "22h", "22h30"};
+        JComboBox arrayfHoraFMCliMRestFRestHFuncJCBox = new JComboBox(fHoraMCliMRestFRestHFun);
+
+        JButton ptEnMCliMRestFRestHFuncButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFRestHFuncButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFRestHFuncButton = new JButton("VOLTAR");
+
+
+        mCliMRestFRestHFuncSuperPanel.add(norteMCliMRestFRestHFuncSubPanel, "North");
+        mCliMRestFRestHFuncSuperPanel.add(centroMCliMRestFRestHFuncSubPanel, "Center");
+        mCliMRestFRestHFuncSuperPanel.add(sulMCliMRestFRestHFuncSubPanel, "South");
+
+        JPanel norteMCliMRestFRestHFuncSSPanel = new JPanel();
+        norteMCliMRestFRestHFuncSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFRestHFuncSSPanel.add(mCliMRestsFRestsHFuncLabel);
+        norteMCliMRestFRestHFuncSubPanel.add(norteMCliMRestFRestHFuncSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFRestHFuncSubPanel.add(ptEnMCliMRestFRestHFuncButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFRestHFuncSSPanel = new JPanel();
+        centroMCliMRestFRestHFuncSSPanel.setLayout(new FlowLayout());
+        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel);
+
+        JPanel centroMCliMRestFRestHFuncSSPanel1 = new JPanel();
+        centroMCliMRestFRestHFuncSSPanel1.setLayout(new FlowLayout());
+        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel1);
+
+        JPanel centroMCliMRestFRestHFuncSSPanel2 = new JPanel();
+        centroMCliMRestFRestHFuncSSPanel2.setLayout(new FlowLayout());
+        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel2);
+
+        JPanel centroMCliMRestFRestHFuncSSPanel3 = new JPanel();
+        centroMCliMRestFRestHFuncSSPanel3.setLayout(new FlowLayout());
+        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel3);
+
+        centroMCliMRestFRestHFuncSSPanel.add(mCliMRestFRestHFuncLabel);
+        centroMCliMRestFRestHFuncSSPanel1.add(fDataMCliMRestFRestHFuncLabel);
+        centroMCliMRestFRestHFuncSSPanel1.add(datePickerMCliMRestFRestHFun);
+        centroMCliMRestFRestHFuncSSPanel2.add(fHoraMCliMRestFRestHFuncLabel);
+        centroMCliMRestFRestHFuncSSPanel2.add(arrayfHoraFMCliMRestFRestHFuncJCBox);
+
+        sulMCliMRestFRestHFuncSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFRestHFuncSubPanel.add(voltarMCliMRestFRestHFuncButton);
+        sulMCliMRestFRestHFuncSubPanel.add(retornarMCliMRestFRestHFuncButton);
+
+        //todo faltar ver botões
+        retornarMCliMRestFRestHFuncButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestFRestHFuncButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS - LOTAÇÃO//////////
+    private void construirPanelMCliMRestFRestLot(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestLotSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFRestLotSubPanel = new JPanel();
+        norteMCliMRestFRestLotSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFRestLotSubPanel = new JPanel();
+        JPanel sulMCliMRestFRestLotSubPanel = new JPanel();
+
+        JLabel mCliMRestsFRestsLotLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFRestLotLabel = new JLabel("LOTAÇÃO");
+        JLabel dataMCliMRestFRestLotLabel = new JLabel("DATA");
+
+        //todo exemplo a verificar (HÁ FORMA MELHOR?)
+        String[] nomeColunasMCliMRestFRestLot = new String[]{
+                "RESTAURANTE”, “ZONA", "TOTAL", "DISPONÍVEIS"
+        };
+
+        Object[][] dadosMCliMRestFRestLot = new Object[][]{
+                {"RESTAURANTE”, “ZONA", "TOTAL", "DISPONÍVEIS"},
+                {"A", "Esplanada", 20, 5},
+                {"B", "Interior Ñ Fumadores", 20, 10},
+                {"C", "Interior Fumadores", 5, 2},
+        };
+
+        //criação da tabela
+        JTable tabelaMCliMRestFRestLot = new JTable(dadosMCliMRestFRestLot, nomeColunasMCliMRestFRestLot);
+
+
+//Calendário
+        UtilDateModel modelMCliMRestFRestLot = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanelMCliMRestFRestLot = new JDatePanelImpl(modelMCliMRestFRestLot, p);
+        JDatePickerImpl datePickerMCliMRestFRestLot = new JDatePickerImpl(datePanelMCliMRestFRestLot, new DateLabelFormatter());
+
+        //todo verificar porque não deu certo
+        JComboBox fLotCliMRestFRestLotJCBox = new JComboBox();
+        for (int i = 1; i <= 50; i++) {
+            fLotCliMRestFRestLotJCBox.addItem(i);
+        }
+
+        JButton ptEnMCliMRestFRestLotButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFRestLotButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFRestLotButton = new JButton("VOLTAR");
+
+        mCliMRestFRestLotSuperPanel.add(norteMCliMRestFRestLotSubPanel, "North");
+        mCliMRestFRestLotSuperPanel.add(centroMCliMRestFRestLotSubPanel, "Center");
+        mCliMRestFRestLotSuperPanel.add(sulMCliMRestFRestLotSubPanel, "South");
+
+        JPanel norteMCliMRestFRestLotSSPanel = new JPanel();
+        norteMCliMRestFRestLotSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFRestLotSSPanel.add(mCliMRestsFRestsLotLabel);
+        norteMCliMRestFRestLotSubPanel.add(norteMCliMRestFRestLotSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFRestLotSubPanel.add(ptEnMCliMRestFRestLotButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFRestLotSSPanel = new JPanel();
+        centroMCliMRestFRestLotSSPanel.setLayout(new GridLayout(4, 2));
+        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel);
+
+        JPanel centroMCliMRestFRestLotSSPanel1 = new JPanel();
+        centroMCliMRestFRestLotSSPanel1.setLayout(new GridBagLayout());
+        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel1);
+
+        JPanel centroMCliMRestFRestLotSSPanel2 = new JPanel();
+        centroMCliMRestFRestLotSSPanel2.setLayout(new GridBagLayout());
+        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel2);
+
+        centroMCliMRestFRestLotSSPanel.add(mCliMRestFRestLotLabel);
+        centroMCliMRestFRestLotSSPanel1.add(dataMCliMRestFRestLotLabel);
+        centroMCliMRestFRestLotSSPanel1.add(datePickerMCliMRestFRestLot);
+        centroMCliMRestFRestLotSSPanel2.add(tabelaMCliMRestFRestLot);
+
+        sulMCliMRestFRestLotSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFRestLotSubPanel.add(voltarMCliMRestFRestLotButton);
+        sulMCliMRestFRestLotSubPanel.add(retornarMCliMRestFRestLotButton);
+
+        retornarMCliMRestFRestLotButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestFRestLotButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS - CIDADE//////////
+    private void construirPanelMCliMRestFRestCid(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestCidSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFRestCidSubPanel = new JPanel();
+        norteMCliMRestFRestCidSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFRestCidSubPanel = new JPanel();
+        JPanel sulMCliMRestFRestCidSubPanel = new JPanel();
+
+        JLabel mCliMRestsFRestsCidLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFRestCidLabel = new JLabel("CIDADE");
+
+        JCheckBox coimbraMCliMRestFOrdRestJCBox = new JCheckBox("Coimbra");
+        coimbraMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox portoMCliMRestFOrdRestJCBox = new JCheckBox("Porto");
+        portoMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox lisboaMCliMRestFOrdRestJCBox = new JCheckBox("Lisboa");
+        lisboaMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox guimaraesMCliMRestFOrdRestJCBox = new JCheckBox("Guimarães");
+        guimaraesMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox bragaMCliMRestFOrdRestJCBox = new JCheckBox("Braga");
+        bragaMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox vilaDoCondeMCliMRestFOrdRestJCBox = new JCheckBox("Vila do Conde");
+        vilaDoCondeMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+
+        JButton ptEnMCliMRestFRestCidButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFRestCidButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFRestCidButton = new JButton("VOLTAR");
+
+        mCliMRestFRestCidSuperPanel.add(norteMCliMRestFRestCidSubPanel, "North");
+        mCliMRestFRestCidSuperPanel.add(centroMCliMRestFRestCidSubPanel, "Center");
+        mCliMRestFRestCidSuperPanel.add(sulMCliMRestFRestCidSubPanel, "South");
+
+        JPanel norteMCliMRestFRestCidSSPanel = new JPanel();
+        norteMCliMRestFRestCidSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFRestCidSSPanel.add(mCliMRestsFRestsCidLabel);
+        norteMCliMRestFRestCidSubPanel.add(norteMCliMRestFRestCidSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFRestCidSubPanel.add(ptEnMCliMRestFRestCidButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFRestCidSSPanel = new JPanel();
+        centroMCliMRestFRestCidSSPanel.setLayout(new GridLayout(8, 2));
+        centroMCliMRestFRestCidSubPanel.add(centroMCliMRestFRestCidSSPanel);
+
+        centroMCliMRestFRestCidSSPanel.add(mCliMRestFRestCidLabel);
+        centroMCliMRestFRestCidSSPanel.add(coimbraMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(portoMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(lisboaMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(bragaMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(guimaraesMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(vilaDoCondeMCliMRestFOrdRestJCBox);
+
+        sulMCliMRestFRestCidSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFRestCidSubPanel.add(voltarMCliMRestFRestCidButton);
+        sulMCliMRestFRestCidSubPanel.add(retornarMCliMRestFRestCidButton);
+
+        coimbraMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        portoMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        lisboaMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        bragaMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        guimaraesMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        vilaDoCondeMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMRestFRestCidButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        voltarMCliMRestFRestCidButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
+
+
+    //todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK
+//////MENU CLIENTE – CONSULTAR COMENTÁRIOS MENU//////////
+
+    private void construirPanelMCliMCom(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliMComSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMComSubPanel = new JPanel();
+        norteMCliMComSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMComSubPanel = new JPanel();
+        JPanel sulMCliMComSubPanel = new JPanel();
+
+        JLabel mCliMComLabel = new JLabel("MENU CLIENTE - CONSULTAR COMENTÁRIOS:");
+
+        JRadioButton mCliMComFPPRButton = new JRadioButton("PRÓPRIOS");
+        JRadioButton mCliMComFCliRButton = new JRadioButton("CLIENTE ESPECÍFICO");
+        JRadioButton mCliMComFRestRButton = new JRadioButton("RESTAURANTE ESPECÍFICO");
+        JRadioButton mCliMComFIDRButton = new JRadioButton("INTERVALO DE DATAS");
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(mCliMComFPPRButton);
+        group.add(mCliMComFCliRButton);
+        group.add(mCliMComFRestRButton);
+        group.add(mCliMComFIDRButton);
+
+        JButton ptEnMCliMComButton = new JButton("PT/EN");
+        JButton voltarMCliMComButton = new JButton("MENU CLIENTE");
+
+        mCliMComSuperPanel.add(norteMCliMComSubPanel, "North");
+        mCliMComSuperPanel.add(centroMCliMComSubPanel, "Center");
+        mCliMComSuperPanel.add(sulMCliMComSubPanel, "South");
+
+        JPanel norteMCliMComSSPanel = new JPanel();
+        norteMCliMComSSPanel.setLayout(new FlowLayout());
+        norteMCliMComSSPanel.add(mCliMComLabel);
+        norteMCliMComSubPanel.add(norteMCliMComSSPanel, BorderLayout.CENTER);
+        norteMCliMComSubPanel.add(ptEnMCliMComButton, BorderLayout.EAST);
+
+        JPanel centroMCliMComSSPanel = new JPanel();
+        centroMCliMComSSPanel.setLayout(new GridLayout(6,1));
+        centroMCliMComSubPanel.add(centroMCliMComSSPanel, BorderLayout.WEST);
+
+        centroMCliMComSSPanel.add(mCliMComFPPRButton);
+        centroMCliMComSSPanel.add(mCliMComFCliRButton);
+        centroMCliMComSSPanel.add(mCliMComFRestRButton);
+        centroMCliMComSSPanel.add(mCliMComFIDRButton);
+
+        sulMCliMComSubPanel.setLayout(new FlowLayout());
+        sulMCliMComSubPanel.add(voltarMCliMComButton);
+
+        mCliMComFPPRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMCOMFPP_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        mCliMComFCliRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMCOMFCLI_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        mCliMComFRestRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMCOMFREST_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        mCliMComFIDRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMCOMFID_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+
+        voltarMCliMComButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
+
+////MENU CLIENTE – CONSULTAR COMENTÁRIOS – COMENTÁRIOS PRÓPRIOS//////////
+
+    private void construirPanelMCliMComFPP(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliMComFPPSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMComFPPSubPanel = new JPanel();
+        norteMCliMComFPPSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMComFPPSubPanel = new JPanel();
+        JPanel sulMCliMComFPPSubPanel = new JPanel();
+
+        JLabel mCliMComsFPPLabel = new JLabel("MENU CLIENTE - CONSULTAR:");
+        JLabel mCliMComFPPLabel = new JLabel("COMENTÁRIOS PRÓPRIOS");
+
+        JLabel idMCliMComFPPLabel = new JLabel("ID");
+
+        String[] idMCliMComFPPCBox = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"};
+        JComboBox arrayIdMCliMComFPPCBox = new JComboBox(idMCliMComFPPCBox);
+
+//todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, editar e cancelar
+        String[] nomeColunasMCliMComFPP = new String[]{
+                "ID", "DATA", "RESTAURNATE"
+        };
+
+        Object[][] dadosMCliMComFPP = new Object[][]{
+                {"ID", "DATA", "RESTAURANTE"},
+                {1, "dd/MM/yyy", "A"},
+                {2, "dd/MM/yyy", "B"},
+                {3, "dd/MM/yyy", "C"},
+        };
+        //criação da tabela
+        JTable tabelaMCliMComFPP = new JTable(dadosMCliMComFPP, nomeColunasMCliMComFPP);
+
+        JRadioButton apagarMCliMComFPPButton = new JRadioButton("APAGAR");
+        JRadioButton editarMCliMComFPPButton = new JRadioButton("EDITAR");
+        JRadioButton visualizarMCliMComFPPButton = new JRadioButton("VISUALIZAR");
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(visualizarMCliMComFPPButton);
+        group.add(editarMCliMComFPPButton);
+        group.add(apagarMCliMComFPPButton);
+
+        JButton ptEnMCliMComFPPButton = new JButton("PT/EN");
+        JButton voltarMCliMComFPPButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMComFPPButton = new JButton("VOLTAR");
+
+        mCliMComFPPSuperPanel.add(norteMCliMComFPPSubPanel, "North");
+        mCliMComFPPSuperPanel.add(centroMCliMComFPPSubPanel, "Center");
+        mCliMComFPPSuperPanel.add(sulMCliMComFPPSubPanel, "South");
+
+        JPanel norteMCliMComFPPSSPanel = new JPanel();
+        norteMCliMComFPPSSPanel.setLayout(new FlowLayout());
+        norteMCliMComFPPSSPanel.add(mCliMComsFPPLabel);
+        norteMCliMComFPPSubPanel.add(norteMCliMComFPPSSPanel, BorderLayout.CENTER);
+        norteMCliMComFPPSubPanel.add(ptEnMCliMComFPPButton, BorderLayout.EAST);
+
+        JPanel centroMCliMComFPPSSPanel = new JPanel();
+        centroMCliMComFPPSSPanel.setLayout(new GridLayout());
+        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel, BorderLayout.CENTER);
+
+        JPanel centroMCliMComFPPSSPanel1 = new JPanel();
+        centroMCliMComFPPSSPanel1.setLayout(new GridBagLayout());
+        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel1);
+        JPanel centroMCliMComFPPSSPanel2 = new JPanel();
+        centroMCliMComFPPSSPanel2.setLayout(new FlowLayout());
+        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel2);
+
+        JPanel centroMCliMComFPPSSPanel3 = new JPanel();
+        centroMCliMComFPPSSPanel3.setLayout(new GridLayout());
+        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel3);
+
+        centroMCliMComFPPSSPanel.add(mCliMComFPPLabel);
+        centroMCliMComFPPSSPanel1.add(tabelaMCliMComFPP);
+        centroMCliMComFPPSSPanel2.add(idMCliMComFPPLabel);
+        centroMCliMComFPPSSPanel2.add(arrayIdMCliMComFPPCBox);
+
+        centroMCliMComFPPSSPanel3.add(visualizarMCliMComFPPButton);
+        centroMCliMComFPPSSPanel3.add(editarMCliMComFPPButton);
+        centroMCliMComFPPSSPanel3.add(apagarMCliMComFPPButton);
+
+        sulMCliMComFPPSubPanel.setLayout(new FlowLayout());
+        sulMCliMComFPPSubPanel.add(voltarMCliMComFPPButton);
+        sulMCliMComFPPSubPanel.add(retornarMCliMComFPPButton);
+
+        visualizarMCliMComFPPButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        editarMCliMComFPPButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        apagarMCliMComFPPButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMComFPPButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMComFPPButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMCOM_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+
+//todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK
+//////MENU CLIENTE – CONSULTAR COMENTÁRIOS – CLIENTE ESPECÍFICO//////////
+
+    private void construirPanelMCliMComFCli(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMComFCliSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMComFCliSubPanel = new JPanel();
+        norteMCliMComFCliSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMComFCliSubPanel = new JPanel();
+        JPanel sulMCliMComFCliSubPanel = new JPanel();
+
+        JLabel mCliMComFCliLabel = new JLabel("MENU CLIENTE - CONSULTAR COMENTÁRIOS:");
+        JLabel nomeMCliMComFCliLabel = new JLabel("NOME DO CLIENTE");
+
+        JTextField nomeMCliMComFCliText = new JTextField(20);
+
+        JButton ptEnMCliMComFCliButton = new JButton("PT/EN");
+        JButton voltarMCliMComFCliButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMComFCliButton = new JButton("VOLTAR");
+        JButton okMCliMComFCliButton = new JButton("OK");
+
+        mCliMComFCliSuperPanel.add(norteMCliMComFCliSubPanel, "North");
+        mCliMComFCliSuperPanel.add(centroMCliMComFCliSubPanel, "Center");
+        mCliMComFCliSuperPanel.add(sulMCliMComFCliSubPanel, "South");
+
+        JPanel norteMCliMComFClinSSPanel = new JPanel();
+        norteMCliMComFClinSSPanel.setLayout(new FlowLayout());
+        norteMCliMComFClinSSPanel.add(mCliMComFCliLabel);
+        norteMCliMComFCliSubPanel.add(norteMCliMComFClinSSPanel, BorderLayout.CENTER);
+        norteMCliMComFCliSubPanel.add(ptEnMCliMComFCliButton, BorderLayout.EAST);
+
+        JPanel centroMCliMComFClinSSPanel = new JPanel();
+        centroMCliMComFClinSSPanel.setLayout(new FlowLayout());
+        centroMCliMComFCliSubPanel.add(centroMCliMComFClinSSPanel, BorderLayout.WEST);
+
+        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliLabel);
+        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliText);
+
+        sulMCliMComFCliSubPanel.setLayout(new FlowLayout());
+        sulMCliMComFCliSubPanel.add(voltarMCliMComFCliButton);
+        sulMCliMComFCliSubPanel.add(retornarMCliMComFCliButton);
+        sulMCliMComFCliSubPanel.add(okMCliMComFCliButton);
+
+        voltarMCliMComFCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMComFCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMCOM_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        okMCliMComFCliButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+
+    }
+
+//todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK
+//////MENU CLIENTE – CONSULTAR COMENTÁRIOS - RESTAURANTES//////////
+
+    private void construirPanelMCliMComFRest(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliMComFRestSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMComFRestSubPanel = new JPanel();
+        norteMCliMComFRestSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMComFRestSubPanel = new JPanel();
+        JPanel sulMCliMComFRestSubPanel = new JPanel();
+
+        JLabel mCliMComFRestLabel = new JLabel("MENU CLIENTE - CONSULTAR COMENTÁRIOS:");
+        JLabel nomeRestMCliMComFRestLabel = new JLabel("NOME DO RESTAURANTE");
+
+        JTextField nomeResMCliMComFRestText = new JTextField(20);
+
+        JButton ptEnMCliMComFRestButton = new JButton("PT/EN");
+        JButton voltarMCliMComFRestButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMComFRestButton = new JButton("VOLTAR");
+        JButton okMCliMComFRestButton = new JButton("OK");
+
+        mCliMComFRestSuperPanel.add(norteMCliMComFRestSubPanel, "North");
+        mCliMComFRestSuperPanel.add(centroMCliMComFRestSubPanel, "Center");
+        mCliMComFRestSuperPanel.add(sulMCliMComFRestSubPanel, "South");
+
+        JPanel norteMCliMComFRestSSPanel = new JPanel();
+        norteMCliMComFRestSSPanel.setLayout(new FlowLayout());
+        norteMCliMComFRestSSPanel.add(mCliMComFRestLabel);
+        norteMCliMComFRestSubPanel.add(norteMCliMComFRestSSPanel, BorderLayout.CENTER);
+        norteMCliMComFRestSubPanel.add(ptEnMCliMComFRestButton, BorderLayout.EAST);
+
+        JPanel centroMCliMComFRestSSPanel = new JPanel();
+        centroMCliMComFRestSSPanel.setLayout(new FlowLayout());
+        centroMCliMComFRestSubPanel.add(centroMCliMComFRestSSPanel, BorderLayout.WEST);
+
+        centroMCliMComFRestSSPanel.add(nomeRestMCliMComFRestLabel);
+        centroMCliMComFRestSSPanel.add(nomeResMCliMComFRestText);
+
+        sulMCliMComFRestSubPanel.setLayout(new FlowLayout());
+        sulMCliMComFRestSubPanel.add(voltarMCliMComFRestButton);
+        sulMCliMComFRestSubPanel.add(retornarMCliMComFRestButton);
+        sulMCliMComFRestSubPanel.add(okMCliMComFRestButton);
+
+        voltarMCliMComFRestButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMComFRestButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMCOM_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        okMCliMComFRestButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+
+    }
+
+//////MENU CLIENTE – CONSULTAR COMENTÁRIOS - INTERVALO DE DATAS//////////
+
+    private void construirPanelMCliMComFID(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliMComFIDSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMComFIDSubPanel = new JPanel();
+        norteMCliMComFIDSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMComFIDSubPanel = new JPanel();
+        JPanel sulMCliMComFIDSubPanel = new JPanel();
+
+        JLabel mCliMComFIDLabel = new JLabel("MENU CLIENTE - CONSULTAR COMENTÁRIOS:");
+        JLabel intervaloDatasMCliMComFIDLabel = new JLabel("INTERVALO DE DATAS");
+        JLabel deMCliMComFIDLabel = new JLabel("De");
+        JLabel ateMCliMComFIDLabel = new JLabel("Até");
+
+
+//Adição do calendário
+        UtilDateModel modelMCliMComFID1 = new UtilDateModel();
+        UtilDateModel modelMCliMComFID2 = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanelMCliMComFID1 = new JDatePanelImpl(modelMCliMComFID1, p);
+        JDatePickerImpl datePickerMCliMComFID1 = new JDatePickerImpl(datePanelMCliMComFID1, new DateLabelFormatter());
+
+        JDatePanelImpl datePanelMCliMComFID2 = new JDatePanelImpl(modelMCliMComFID2, p);
+        JDatePickerImpl datePickerMCliMComFID2 = new JDatePickerImpl(datePanelMCliMComFID2, new DateLabelFormatter());
+
+        JButton ptEnMCliMComFIDButton = new JButton("PT/EN");
+        JButton voltarMCliMComFIDButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMComFIDButton = new JButton("VOLTAR");
+        JButton okMCliMComFIDButton = new JButton("OK");
+
+        mCliMComFIDSuperPanel.add(norteMCliMComFIDSubPanel, "North");
+        mCliMComFIDSuperPanel.add(centroMCliMComFIDSubPanel, "Center");
+        mCliMComFIDSuperPanel.add(sulMCliMComFIDSubPanel, "South");
+
+        JPanel norteMCliMComFIDSSPanel = new JPanel();
+        norteMCliMComFIDSSPanel.setLayout(new FlowLayout());
+        norteMCliMComFIDSSPanel.add(mCliMComFIDLabel);
+        norteMCliMComFIDSubPanel.add(norteMCliMComFIDSSPanel, BorderLayout.CENTER);
+        norteMCliMComFIDSubPanel.add(ptEnMCliMComFIDButton, BorderLayout.EAST);
+
+        JPanel centroMCliMComFIDSSPanel = new JPanel();
+        centroMCliMComFIDSSPanel.setLayout(new FlowLayout());
+        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliMComFIDSSPanel1 = new JPanel();
+        centroMCliMComFIDSSPanel1.setLayout(new FlowLayout());
+        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliMComFIDSSPanel2 = new JPanel();
+        centroMCliMComFIDSSPanel2.setLayout(new FlowLayout());
+        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel2, BorderLayout.WEST);
+
+        centroMCliMComFIDSSPanel.add(intervaloDatasMCliMComFIDLabel);
+        centroMCliMComFIDSSPanel1.add(deMCliMComFIDLabel);
+        centroMCliMComFIDSSPanel1.add(datePickerMCliMComFID1);
+        centroMCliMComFIDSSPanel2.add(ateMCliMComFIDLabel);
+        centroMCliMComFIDSSPanel2.add(datePickerMCliMComFID2);
+
+        sulMCliMComFIDSubPanel.setLayout(new FlowLayout());
+        sulMCliMComFIDSubPanel.add(voltarMCliMComFIDButton);
+        sulMCliMComFIDSubPanel.add(retornarMCliMComFIDButton);
+        sulMCliMComFIDSubPanel.add(okMCliMComFIDButton);
+
+        voltarMCliMComFIDButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMComFIDButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMCOM_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        okMCliMComFIDButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+
+    }
+
+    ////////////////////MENU CLIENTE - ACTUALIZAR DADOS /////////////////////////
+    private void construirPanelMCliAtDados(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliAtDadosSuperPanel) {
+
+        passwordValido = false;
+        confirmarPasswordValido = false;
+
+        /////SUBPAINEIS//////
+        JPanel norteAtDadosMCliSubPanel = new JPanel();
+        norteAtDadosMCliSubPanel.setLayout(new BorderLayout());
+        JPanel centroAtDadosMCliSubPanel = new JPanel();
+        JPanel sulAtDadosMCliSubPanel = new JPanel();
+
+        JLabel atDadosMCliLabel = new JLabel("ACTUALIZAR DADOS");
+        atDadosMCliLabel.setForeground(Color.BLUE);
+        JLabel nomeCliMCliLabel = new JLabel("Nome");
+        //nomeCliMCliLabel.setBounds(50,80,100,20);
+        JLabel emailCliMCliLabel = new JLabel("E-mail");
+        JLabel moradaCliMCliLabel = new JLabel("Morada");
+        JLabel telemovelCliMCliLabel = new JLabel("Telemóvel");
+        JLabel usernameCliMCliLabel = new JLabel("Username");
+        JLabel passwordCliMCliLabel = new JLabel("Password");
+        JLabel confirmarPasswordCliMCliLabel = new JLabel("Confirmar password: ");
+
+        JTextField nomeCliMCliText = new JTextField(20);
+        nomeCliMCliText.setMargin(new Insets(3, 3, 3, 3));
+        JTextField emailCliMCliText = new JTextField(20);
+        JTextField moradaCliMCliText = new JTextField(20);
+        JTextField telemovelCliMCliText = new JFormattedTextField(mascaraTelemovel);
+        telemovelCliMCliText.setColumns(20);
+        JTextField usernameCliMCliText = new JTextField(20);
+
+        JPasswordField passwordCliMCliField = new JPasswordField(20);
+        passwordCliMCliField.addFocusListener(new FocusListener() {
+            @Override
+            public void focusGained(FocusEvent e) {
+                passwordValido = true;
+            }
+
+            @Override
+            public void focusLost(FocusEvent e) {
+                if (passwordCliMCliField.getPassword().length < 6) {
+                    passwordValido = false;
+                }
+
+            }
+        });
+        JPasswordField confirmarPassawordCliMCliField = new JPasswordField(20);
+        confirmarPassawordCliMCliField.addFocusListener(new FocusListener() {
+            @Override
+            public void focusGained(FocusEvent e) {
+                confirmarPasswordValido = true;
+            }
+
+            @Override
+            public void focusLost(FocusEvent e) {
+                if (!passwordCliMCliField.getPassword().equals(confirmarPassawordCliMCliField.getPassword())) {
+                    confirmarPasswordValido = false;
+                }
+
+            }
+        });
+        JButton ptEnAtDadosMCliButton = new JButton("PT/EN");
+        JButton voltarCliMCliButton = new JButton("MENU CLIENTE");
+        JButton actualizarCliMCliButton = new JButton("ACTUALIZAR");
+
+        mCliAtDadosSuperPanel.add(norteAtDadosMCliSubPanel, "North");
+        mCliAtDadosSuperPanel.add(centroAtDadosMCliSubPanel, "Center");
+        mCliAtDadosSuperPanel.add(sulAtDadosMCliSubPanel, "South");
+
+        JPanel norteAtDadosMCliSSPanel = new JPanel();
+        norteAtDadosMCliSSPanel.setLayout(new FlowLayout());
+        norteAtDadosMCliSSPanel.add(atDadosMCliLabel);
+        norteAtDadosMCliSubPanel.add(norteAtDadosMCliSSPanel, BorderLayout.CENTER);
+        norteAtDadosMCliSubPanel.add(ptEnAtDadosMCliButton, BorderLayout.EAST);
+
+        JPanel centroAtDadosMCliSSPanel = new JPanel();
+        centroAtDadosMCliSSPanel.setLayout(new GridLayout(7, 2));
+        centroAtDadosMCliSubPanel.add(centroAtDadosMCliSSPanel);
+        centroAtDadosMCliSSPanel.add(nomeCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(nomeCliMCliText);
+        centroAtDadosMCliSSPanel.add(emailCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(emailCliMCliText);
+        centroAtDadosMCliSSPanel.add(moradaCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(moradaCliMCliText);
+        centroAtDadosMCliSSPanel.add(telemovelCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(telemovelCliMCliText);
+        centroAtDadosMCliSSPanel.add(usernameCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(usernameCliMCliText);
+        centroAtDadosMCliSSPanel.add(passwordCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(passwordCliMCliField);
+        centroAtDadosMCliSSPanel.add(confirmarPasswordCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(confirmarPassawordCliMCliField);
+
+        sulAtDadosMCliSubPanel.setLayout(new FlowLayout());
+        sulAtDadosMCliSubPanel.add(voltarCliMCliButton);
+        sulAtDadosMCliSubPanel.add(actualizarCliMCliButton);
+
+        actualizarCliMCliButton.addActionListener(a -> {
+            if (!passwordValido) {
+                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(), "Password Inválido: deve conter o mínimo de 6 caracteres!");
+                passwordCliMCliField.requestFocus();
+                return;
+            }
+            if (!confirmarPasswordValido) {
+                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(), "Password Inválido: deve ser igual password!");
+                confirmarPassawordCliMCliField.requestFocus();
+                return;
+            }
+            //TODO faz-se necessário atualizar  método atualizarDados Cliente, retirando o password e criar um novo metodo para atualização de password
+            sistema.atualizarDadosCliente(nomeCliMCliText.getText(),
+                    moradaCliMCliText.getText(),
+                    telemovelCliMCliText.getText(),
+                    emailCliMCliText.getText(),
+                    passwordCliMCliField.getPassword().toString(),
+                    confirmarPassawordCliMCliField.getPassword().toString(),
+                    confirmarPassawordCliMCliField.getPassword().toString());
+        });
+        voltarCliMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+// todo verificar os botões editar e apagar que estão em conflito com visualizar
+
+    //////MENU CLIENTE – RESERVAS - ACTIVAS//////////
+
+    private void construirPanelMCliResAct(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliResActSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliResActSubPanel = new JPanel();
+        norteMCliResActSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliResActSubPanel = new JPanel();
+        JPanel sulMCliResActSubPanel = new JPanel();
+
+        JLabel mCliTitHistResActLabel = new JLabel("MENU CLIENTE - RESERVAS ACTIVAS");
+        JLabel mCliIdHistResActLabel = new JLabel("ID");
+
+        String[] mCliIdHistResAct = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
+        JComboBox arrayMCliIdHistResActCBox = new JComboBox(mCliIdHistResAct);
+
+//todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, editar e cancelar
+        String[] nomeColunasMCliResAct = new String[]{
+                "ID", "DATA", "RESTAURNATE"
+        };
+
+        Object[][] dados = new Object[][]{
+                {"ID", "DATA", "RESTAURANTE"},
+                {1, "dd/MM/yyy", "A"},
+                {2, "dd/MM/yyy", "B"},
+                {3, "dd/MM/yyy", "C"},
+        };
+        //criação da tabela
+        JTable tabelaMCliResAct = new JTable(dados, nomeColunasMCliResAct);
+
+        JButton ptEnMCliRestButton = new JButton("PT/EN");
+        JButton voltarMCliResActButton = new JButton("MENU CLIENTE");
+        JButton visualizarMCliResActButton = new JButton("VISUALIZAR");
+        JButton retonarMCliResActButton = new JButton("RETORNAR");
+
+        JRadioButton editarMCliResActButton = new JRadioButton("EDITAR");
+        JRadioButton apagarMCliResActButton = new JRadioButton("APAGAR");
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(editarMCliResActButton);
+        group.add(apagarMCliResActButton);
+
+        mCliResActSuperPanel.add(norteMCliResActSubPanel, "North");
+        mCliResActSuperPanel.add(centroMCliResActSubPanel, "Center");
+        mCliResActSuperPanel.add(sulMCliResActSubPanel, "South");
+
+        JPanel norteMCliResActSSPanel = new JPanel();
+        norteMCliResActSSPanel.setLayout(new FlowLayout());
+        norteMCliResActSSPanel.add(mCliTitHistResActLabel);
+        norteMCliResActSubPanel.add(norteMCliResActSSPanel, BorderLayout.CENTER);
+        norteMCliResActSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);
+
+        JPanel centroMCliResActSSPanel = new JPanel();
+        centroMCliResActSSPanel.setLayout(new FlowLayout());
+        centroMCliResActSubPanel.add(centroMCliResActSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliResActSSPanel1 = new JPanel();
+        centroMCliResActSSPanel1.setLayout(new FlowLayout());
+        centroMCliResActSubPanel.add(centroMCliResActSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliResActSSPanel2 = new JPanel();
+        centroMCliResActSSPanel2.setLayout(new FlowLayout());
+        centroMCliResActSubPanel.add(centroMCliResActSSPanel2, BorderLayout.WEST);
+
+        centroMCliResActSSPanel.add(tabelaMCliResAct);
+        centroMCliResActSSPanel1.add(mCliIdHistResActLabel);
+        centroMCliResActSSPanel1.add(arrayMCliIdHistResActCBox);
+        centroMCliResActSSPanel2.add(editarMCliResActButton);
+        centroMCliResActSSPanel2.add(apagarMCliResActButton);
+
+        sulMCliResActSubPanel.setLayout(new FlowLayout());
+        sulMCliResActSubPanel.add(voltarMCliResActButton);
+        sulMCliResActSubPanel.add(retonarMCliResActButton);
+        sulMCliResActSubPanel.add(visualizarMCliResActButton);
+
+
+        visualizarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        editarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        apagarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retonarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+
+    //////MENU CLIENTE – FAZER RESERVAS//////////
+    private void construirPanelMCliFazerRes(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliFazerResSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliFResSubPanel = new JPanel();
+        norteMCliFResSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliFResSubPanel = new JPanel();
+        JPanel sulMCliFResSubPanel = new JPanel();
+
+        JLabel mCliTitFResLabel = new JLabel("MENU CLIENTE - FAZER RESERVAS");
+        JLabel tipoResMCliFResLabel = new JLabel("TIPO DE RESERVA:");
+        JLabel nomeResMCliFResLabel = new JLabel("RESTAURANTE:");
+
+        JTextField nomeResMCliFResText = new JTextField(25);
+
+        JRadioButton presencialMCliFResRButton = new JRadioButton("PRESENCIAL");
+        JRadioButton takeAwayMCliFResRButton = new JRadioButton("TAKE-AWAY");
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(presencialMCliFResRButton);
+        group.add(takeAwayMCliFResRButton);
+
+        JButton ptEnMCliFResButton = new JButton("PT/EN");
+        JButton voltarMCliFResButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliFResButton = new JButton("VOLTAR");
+
+        mCliFazerResSuperPanel.add(norteMCliFResSubPanel, "North");
+        mCliFazerResSuperPanel.add(centroMCliFResSubPanel, "Center");
+        mCliFazerResSuperPanel.add(sulMCliFResSubPanel, "South");
+
+        JPanel norteMCliFResSSPanel = new JPanel();
+        norteMCliFResSSPanel.setLayout(new FlowLayout());
+        norteMCliFResSSPanel.add(mCliTitFResLabel);
+        norteMCliFResSubPanel.add(norteMCliFResSSPanel, BorderLayout.CENTER);
+        norteMCliFResSubPanel.add(ptEnMCliFResButton, BorderLayout.EAST);
+
+        JPanel centroMCliFResSSPanel = new JPanel();
+        centroMCliFResSSPanel.setLayout(new FlowLayout());
+        centroMCliFResSubPanel.add(centroMCliFResSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliFResSSPanel1 = new JPanel();
+        centroMCliFResSSPanel1.setLayout(new FlowLayout());
+        centroMCliFResSubPanel.add(centroMCliFResSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliFResSSPanel2 = new JPanel();
+        centroMCliFResSSPanel2.setLayout(new FlowLayout());
+        centroMCliFResSubPanel.add(centroMCliFResSSPanel2, BorderLayout.WEST);
+
+        JPanel centroMCliFResSSPanel3 = new JPanel();
+        centroMCliFResSSPanel3.setLayout(new GridLayout(1, 1));
+        centroMCliFResSubPanel.add(centroMCliFResSSPanel3, BorderLayout.WEST);
+
+        //todo ver como listar o restaurantes
+        centroMCliFResSSPanel1.add(nomeResMCliFResLabel);
+        centroMCliFResSSPanel1.add(nomeResMCliFResText);
+        centroMCliFResSSPanel2.add(tipoResMCliFResLabel);
+        centroMCliFResSSPanel3.add(presencialMCliFResRButton);
+        centroMCliFResSSPanel3.add(takeAwayMCliFResRButton);
+
+        sulMCliFResSubPanel.setLayout(new FlowLayout());
+        sulMCliFResSubPanel.add(voltarMCliFResButton);
+        sulMCliFResSubPanel.add(retornarMCliFResButton);
+
+        presencialMCliFResRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRESP_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        takeAwayMCliFResRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRESTA_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliFResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliFResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+    }
+
+
+    //////MENU CLIENTE – FAZER RESERVA PRESENCIAL//////////
+    private void construirPanelMCliFazerResP(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliFazerResPSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliFResPSubPanel = new JPanel();
+        norteMCliFResPSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliFResPSubPanel = new JPanel();
+        JPanel sulMCliFResPSubPanel = new JPanel();
+
+        JLabel mCliTitFResPLabel = new JLabel("FAZER RESERVAS PRESENCIAL");
+        JLabel diaMCliFResPLabel = new JLabel("DIA");
+        JLabel horaMCliFResPLabel = new JLabel("HORA");
+        //JLabel horaDeMCliFResPLabel = new JLabel("De");
+        //JLabel horaAteMCliFResPLabel = new JLabel("Até");
+        JLabel qtdePessoasMCliFResPLabel = new JLabel("QUANTIDADE DE PESSOAS");
+        JLabel msgMCliFResPLabel = new JLabel("Contatar diretamente o restaurante no caso de reservas para mais de 20 pessoas");
+
+        String[] horaDeMCliFRes = {"", "11h", "11h30", "12h", "12h30", "13h", "13h30", "14h", "14h30", "15h", "15h30", "19h", "19h30", "20h", "20h30", "21h", "21h30", "22h", "22h30"};
+        JComboBox arrayHoraDeMCliFResPCBox = new JComboBox(horaDeMCliFRes);
+
+        //todo verificar se não deve mesmo constar
+        //String [] horaAteMCliFRes = {"","12h","12h30","13h","13h30","14h","14h30","15h","15h30","19h","19h30","20h","20h30","21h","21h30","22h","22h30"};
+        //JComboBox arrayHoraAteMCliFResPCBox = new JComboBox(horaAteMCliFRes);
+
+        String[] qtdePessoasMCliFRes = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"};
+        JComboBox arrayQtdePessoasMCliFResPCBox = new JComboBox(qtdePessoasMCliFRes);
+
+        JButton ptEnMCliFResPButton = new JButton("PT/EN");
+        JButton voltarMCliFResPButton = new JButton("MENU CLIENTE");
+        JButton confirmarMCliFResPButton = new JButton("OK");
+        JButton retornarMCliFResPButton = new JButton("VOLTAR");
+
+        //Adição do calendário
+        //UtilDateModel model1 = new UtilDateModel();
+        UtilDateModel model6 = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanel5 = new JDatePanelImpl(model6, p);
+        JDatePickerImpl datePicker6 = new JDatePickerImpl(datePanel5, new DateLabelFormatter());
+
+        mCliFazerResPSuperPanel.add(norteMCliFResPSubPanel, "North");
+        mCliFazerResPSuperPanel.add(centroMCliFResPSubPanel, "Center");
+        mCliFazerResPSuperPanel.add(sulMCliFResPSubPanel, "South");
+
+        JPanel norteMCliFResSPPSSPanel = new JPanel();
+        norteMCliFResSPPSSPanel.setLayout(new FlowLayout());
+        norteMCliFResSPPSSPanel.add(mCliTitFResPLabel);
+        norteMCliFResPSubPanel.add(norteMCliFResSPPSSPanel, BorderLayout.CENTER);
+        norteMCliFResPSubPanel.add(ptEnMCliFResPButton, BorderLayout.EAST);
 
-//////MENU CLIENTE – CONSULTAR COMENTÁRIOS – COMENTÁRIOS PRÓPRIOS//////////
-//
-//private void construirPanelMCliMComFPP(Interface janela, Container contentor, JPanel
-//        loginSuperPanel, JPanel MCliMComFPPSuperPanel){
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMComFPPSubPanel=new JPanel();
-//        norteMCliMComFPPSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMComFPPSubPanel=new JPanel();
-//        JPanel sulMCliMComFPPSubPanel=new JPanel();
-//
-//        JLabel mCliMComsFPPLabel=new JLabel("MENU CLIENTE - CONSULTAR:");
-//        JLabel mCliMComFPPLabel=new JLabel("COMENTÁRIOS PRÓPRIOS");
-//
-//        JLabel idMCliMComFPPLabel=new JLabel();
-//
-//        String[]idMCliMComFPPCBox={"","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"};
-////        JComboBox arrayIdMCliMComFPP CBox = new JComboBox(idMCliMComFPPCBox);
-//
-////todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, editar e cancelar
-//        String[]nomeColunasMCliMComFPP=new String[]{
-//        "ID","DATA","RESTAURNATE"
-//        };
-//
-//        Object[][]dadosMCliMComFPP=new Object[][]{
-//        {"ID","DATA","RESTAURANTE"},
-//        {1,"dd/MM/yyy","A"},
-//        {2,"dd/MM/yyy","B"},
-//        {3,"dd/MM/yyy","C"},
-//        };
-//        //criação da tabela
-//        JTable tabelaMCliMComFPP=new JTable(dados,nomeColunasMCliResAct);
-//
-//        JRadioButton apagarMCliMComFPPButton=new JRadioButton("APAGAR");
-//        JRadioButton editarMCliMComFPPButton=new JRadioButton("EDITAR");
-//        JRadioButton visualizarMCliMComFPPButton=new JRadioButton("VISUALIZAR");
-//
-//        ButtonGroup group=new ButtonGroup();
-//        group.add(visualizarMCliMComFPPButton);
-//        group.add(editarMCliMComFPPButton);
-//        group.add(apagarMCliMComFPPButton);
-//
-//
-//        JButton ptEnMCliMComFPPButton=new JButton("PT/EN");
-//        JButton voltarMCliMComFPPButton=new JButton("MENU CLIENTE");
-//        JButton retornarMCliMComFPPButton=new JButton("VOLTAR");
-//
-//        mCliMComFPPSuperPanel.add(norteMCliMComSubPanel,"North");
-//        mCliMComFPPSuperPanel.add(centroMCliMComSubPanel,"Center");
-//        mCliMComFPPSuperPanel.add(sulMCliMComSubPanel,"South");
-//
-//        JPanel norteMCliMComFPPSSPanel=new JPanel();
-//        norteMCliMComFPPSSPanel.setLayout(new FlowLayout());
-//        norteMCliMComFPPSSPanel.add(mCliMComsFPPLabel);
-//        norteMCliMComFPPSubPanel.add(norteMCliMComFPPSSPanel,BorderLayout.CENTER);
-//        norteMCliMComFPPSubPanel.add(ptEnMCliMComButton,BorderLayout.EAST);
-//
-//        JPanel centroMCliMComFPPSSPanel=new JPanel();
-//        centroMCliMComFPPSSPanel.setLayout(new FlowLayout());
-//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel,BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFPPSSPanel1=new JPanel();
-//        centroMCliMComFPPSSPanel1.setLayout(new FlowLayout());
-//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel1,BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFPPSSPanel2=new JPanel();
-//        centroMCliMComFPPSSPanel2.setLayout(new FlowLayout());
-//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel2,BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFPPSSPanel3=new JPanel();
-//        centroMCliMComFPPSSPanel3.setLayout(new FlowLayout());
-//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel3,BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFPPSSPanel4=new JPanel();
-//        centroMCliMComFPPSSPanel4.setLayout(new FlowLayout());
-//        centroMCliMComFPPSubPanel.add(centroMCliMComFPPSSPanel4,BorderLayout.CENTER);
-//
-//
-//        centroMCliMComFPPSSPanel.add(mCliMComFPPLabel);
-//        centroMCliMComFPPSSPanel.add(tabelaMCliMComFPP);
-//        centroMCliMComFPPSSPanel.add(idMCliMComFPPLabel);
-//        centroMCliMComFPPSSPanel.add(idMCliMComFPPCBox);
-//
-//        centroMCliMComFPPSSPanel.add(visualizarMCliMComFPPButton);
-//        centroMCliMComFPPSSPanel.add(editarMCliMComFPPButton);
-//        centroMCliMComFPPSSPanel.add(apagarMCliMComFPPButton);
-//
-//        sulMCliMComFPPSubPanel.setLayout(new FlowLayout());
-//        sulMCliMComFPPSubPanel.add(voltarMCliMComFPPButton);
-//        //sulMCliMComFPPSubPanel.add(retornarMCliMComFPPButton);
-//
-//        visualizarMCliMComFPPButton.addActionListener(a->{
-//        CardLayout cl=(CardLayout)contentor.getLayout();
-//        cl.show(contentor,MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);
-//        });
-//        editarMCliMComFPPButton.addActionListener(a->{
-//        CardLayout cl=(CardLayout)contentor.getLayout();
-//        cl.show(contentor,MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);
-//        });
-//
-//        apagarMCliMComFPPButton.addActionListener(a->{
-//        CardLayout cl=(CardLayout)contentor.getLayout();
-//        cl.show(contentor,MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);
-//        });
-//
-//
-//        voltarMCliMComFPPButton.addActionListener(a->{
-//        CardLayout cl=(CardLayout)contentor.getLayout();
-//        cl.show(contentor,MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);
-//        });
-//
-//        retornarMCliMComFPPButton.addActionListener(a->{
-//        CardLayout cl=(CardLayout)contentor.getLayout();
-//        cl.show(contentor,MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO,ALTURA_PADRAO);
-//        });
-//
-//
-//        }
-//
-////todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK
-////////MENU CLIENTE – CONSULTAR COMENTÁRIOS – CLIENTE ESPECÍFICO//////////
-//
-//private void construirPanelMCliMComFCli (Interface janela, Container contentor, JPanel
-//        loginSuperPanel, JPanel MCliMComFCliSuperPanel) {
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMComFCliSubPanel = new JPanel();
-//        norteMCliMComFCliSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMComFCliSubPanel = new JPanel();
-//        JPanel sulMCliMComFCliSubPanel = new JPanel();
-//
-//        JLabel mCliMComFCliLabel = new JLabel("MENU CLIENTE - CONSULTAR COMENTÁRIOS:");
-//        JLabel nomeMCliMComFCliLabel = new JLabel("NOME DO CLIENTE");
-//
-//        JTextField nomeMCliMComFCliText = new JTextField(20);
-//
-//
-//        JButton ptEnMCliMComFClinButton = new JButton("PT/EN");
-//        JButton voltarMCliMComFClinButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMComFClinButton = new JButton("VOLTAR");
-//        JButton okMCliMComFClinButton = new JButton("OK");
-//
-//        mCliMComFClinSuperPanel.add(norteMCliMComFClinSubPanel, "North");
-//        mCliMComFClinSuperPanel.add(centroMCliMComFClinSubPanel, "Center");
-//        mCliMComFClinSuperPanel.add(sulMCliMComFClinSubPanel, "South");
-//
-//        JPanel norteMCliMComFClinSSPanel = new JPanel();
-//        norteMCliMComFClinSSPanel.setLayout(new FlowLayout());
-//        norteMCliMComFClinSSPanel.add(mCliMComFCliLabel);
-//        norteMCliMComFClinSubPanel.add(norteMCliMComFClinSSPanel, BorderLayout.CENTER);
-//        norteMCliMComFClinSubPanel.add(ptEnMCliMComFClinButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMComFClinSSPanel = new JPanel();
-//        centroMCliMComFClinSSPanel.setLayout(new FlowLayout());
-//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFClinSSPanel1 = new JPanel();
-//        centroMCliMComFClinSSPanel1.setLayout(new FlowLayout());
-//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel1, BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFClinSSPanel2 = new JPanel();
-//        centroMCliMComFClinSSPanel2.setLayout(new FlowLayout());
-//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel2, BorderLayout.WEST);
-//
-//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel4, BorderLayout.CENTER);
-//
-//
-//        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliLabel);
-//        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliText);
-//
-//        sulMCliMComFClinSubPanel.setLayout(new FlowLayout());
-//        sulMCliMComFClinSubPanel.add(voltarMCliMComFClinButton);
-//        sulMCliMComFClinSubPanel.add(retornarMCliMComFClinButton);
-//        sulMCliMComFClinSubPanel.add(oknarMCliMComFClinButton);
-//
-//        voltarMCliMComFClinButton.addActionListener(a -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//        okMCliMComFClinButton.addActionListener(e -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, LOGIN_CARD);
-//        this.setSize(500, 180);
-//        });
-//
-//        }
-//
-////todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK
-////////MENU CLIENTE – CONSULTAR COMENTÁRIOS – CLIENTE ESPECÍFICO//////////
-//
-//private void construirPanelMCliMComFCli (Interface janela, Container contentor, JPanel
-//        loginSuperPanel, JPanel MCliMComFCliSuperPanel) {
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMComFCliSubPanel = new JPanel();
-//        norteMCliMComFCliSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMComFCliSubPanel = new JPanel();
-//        JPanel sulMCliMComFCliSubPanel = new JPanel();
-//
-//        JLabel mCliMComFCliLabel = new JLabel("MENU CLIENTE - CONSULTAR COMENTÁRIOS:");
-//        JLabel nomeMCliMComFCliLabel = new JLabel("NOME DO CLIENTE");
-//
-//        JTextField nomeMCliMComFCliText = new JTextField(20);
-//
-//
-//        JButton ptEnMCliMComFClinButton = new JButton("PT/EN");
-//        JButton voltarMCliMComFClinButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMComFClinButton = new JButton("VOLTAR");
-//        JButton okMCliMComFClinButton = new JButton("OK");
-//
-//        mCliMComFClinSuperPanel.add(norteMCliMComFClinSubPanel, "North");
-//        mCliMComFClinSuperPanel.add(centroMCliMComFClinSubPanel, "Center");
-//        mCliMComFClinSuperPanel.add(sulMCliMComFClinSubPanel, "South");
-//
-//        JPanel norteMCliMComFClinSSPanel = new JPanel();
-//        norteMCliMComFClinSSPanel.setLayout(new FlowLayout());
-//        norteMCliMComFClinSSPanel.add(mCliMComFCliLabel);
-//        norteMCliMComFClinSubPanel.add(norteMCliMComFClinSSPanel, BorderLayout.CENTER);
-//        norteMCliMComFClinSubPanel.add(ptEnMCliMComFClinButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMComFClinSSPanel = new JPanel();
-//        centroMCliMComFClinSSPanel.setLayout(new FlowLayout());
-//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFClinSSPanel1 = new JPanel();
-//        centroMCliMComFClinSSPanel1.setLayout(new FlowLayout());
-//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel1, BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFClinSSPanel2 = new JPanel();
-//        centroMCliMComFClinSSPanel2.setLayout(new FlowLayout());
-//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel2, BorderLayout.WEST);
-//
-//        centroMCliMComFClinSubPanel.add(centroMCliMComFClinSSPanel4, BorderLayout.CENTER);
-//
-//
-//        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliLabel);
-//        centroMCliMComFClinSSPanel.add(nomeMCliMComFCliText);
-//
-//        sulMCliMComFClinSubPanel.setLayout(new FlowLayout());
-//        sulMCliMComFClinSubPanel.add(voltarMCliMComFClinButton);
-//        sulMCliMComFClinSubPanel.add(retornarMCliMComFClinButton);
-//        sulMCliMComFClinSubPanel.add(oknarMCliMComFClinButton);
-//
-//        voltarMCliMComFClinButton.addActionListener(a -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//        okMCliMComFClinButton.addActionListener(e -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, LOGIN_CARD);
-//        this.setSize(500, 180);
-//        });
-//
-//        }
-//
-////todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK
-////////MENU CLIENTE – CONSULTAR COMENTÁRIOS - RESTAURANTES//////////
-//
-//private void construirPanelMCliMComFRest (Interface janela, Container contentor, JPanel
-//        loginSuperPanel, JPanel MCliMComFRestSuperPanel) {
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMComFRestSubPanel = new JPanel();
-//        norteMCliMComFRestSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMComFRestSubPanel = new JPanel();
-//        JPanel sulMCliMComFRestSubPanel = new JPanel();
-//
-//        JLabel mCliMComFRestLabel = new JLabel("MENU CLIENTE - CONSULTAR COMENTÁRIOS:");
-//        JLabel nomeRestMCliMComFRestLabel = new JLabel("NOME DO RESTAURANTE");
-//
-//        JTextField nomeResMCliMComFRestText = new JTextField(20);
-//
-//
-//        JButton ptEnMCliMComFRestButton = new JButton("PT/EN");
-//        JButton voltarMCliMComFRestButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMComFRestButton = new JButton("VOLTAR");
-//        JButton okMCliMComFRestButton = new JButton("OK");
-//
-//        mCliMComFRestnSuperPanel.add(norteMCliMComFRestnSubPanel, "North");
-//        mCliMComFRestSuperPanel.add(centroMCliMComFRestSubPanel, "Center");
-//        mCliMComFRestSuperPanel.add(sulMCliMComFRestSubPanel, "South");
-//
-//        JPanel norteMCliMComFRestSSPanel = new JPanel();
-//        norteMCliMComFRestSSPanel.setLayout(new FlowLayout());
-//        norteMCliMComFRestSSPanel.add(mCliMComFRestLabel);
-//        norteMCliMComFRestSubPanel.add(norteMCliMComFRestSSPanel, BorderLayout.CENTER);
-//        norteMCliMComFRestSubPanel.add(ptEnMCliMComFRestButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMComFRestSSPanel = new JPanel();
-//        centroMCliMComFRestSSPanel.setLayout(new FlowLayout());
-//        centroMCliMComFRestSubPanel.add(centroMCliMComFRestSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFRestSSPanel1 = new JPanel();
-//        centroMCliMComFRestSSPanel1.setLayout(new FlowLayout());
-//        centroMCliMComFRestSubPanel.add(centroMCliMComFRestSSPanel1, BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFRestSSPanel2 = new JPanel();
-//        centroMCliMComFRestSSPanel2.setLayout(new FlowLayout());
-//        centroMCliMComFRestSubPanel.add(centroMCliMComFRestSSPanel2, BorderLayout.WEST);
-//
-//        centroMCliMComFRestSubPanel.add(centroMCliMComFRestSSPanel4, BorderLayout.CENTER);
-//
-//
-//        centroMCliMComFRestSSPanel.add(nomeRestMCliMComFRestLabel);
-//        centroMCliMComFRestSSPanel.add(nomeRestMCliMComFRestText);
-//
-//        sulMCliMComFRestSubPanel.setLayout(new FlowLayout());
-//        sulMCliMComFRestSubPanel.add(voltarMCliMComFRestButton);
-//        sulMCliMComFRestSubPanel.add(okMCliMComFRestButton);
-//
-//        voltarMCliMComFRestButton.addActionListener(a -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//        okMCliMComFRestButton.addActionListener(e -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, LOGIN_CARD);
-//        this.setSize(500, 180);
-//        });
-//
-//        }
-//
-////////MENU CLIENTE – CONSULTAR COMENTÁRIOS - RESTAURANTES//////////
-//
-//private void construirPanelMCliMComFID (Interface janela, Container contentor, JPanel
-//        loginSuperPanel, JPanel MCliMComFIDSuperPanel) {
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliMComFIDSubPanel = new JPanel();
-//        norteMCliMComFIDSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliMComFIDSubPanel = new JPanel();
-//        JPanel sulMCliMComFIDSubPanel = new JPanel();
-//
-//        JLabel mCliMComFIDLabel = new JLabel("MENU CLIENTE - CONSULTAR COMENTÁRIOS:");
-//        JLabel intervaloDatasMCliMComFIDLabel = new JLabel("INTERVALO DE DATAS");
-//        JLabel deMCliMComFIDLabel = new JLabel("De");
-//        JLabel ateMCliMComFIDLabel = new JLabel("Até");
-//
-//
-////Adição do calendário
-//        UtilDateModel modelMCliMComFID1 = new UtilDateModel();
-//        UtilDateModel modelMCliMComFID2 = new UtilDateModel();
-//
-//        ResourceBundle b = ResourceBundle.getBundle("Text");
-//
-//        Properties p = convertResourceBundleToProperties(b);
-//        JDatePanelImpl datePanelMCliMComFID1 = new JDatePanelImpl(modelMCliMComFID1, p);
-//        JDatePickerImpl datePickerMCliMComFID2 = new JDatePickerImpl(datePanelMCliMComFID2, new DateLabelFormatter());
-//        JDatePanelImpl datePanelMCliMComFID2 = new JDatePanelImpl(modelMCliMComFID2, p);
-//        JDatePickerImpl datePickerMCliMComFID2 = new JDatePickerImpl(datePanelMCliMComFID2, new DateLabelFormatter());
-//
-//        JButton ptEnMCliMComFIDButton = new JButton("PT/EN");
-//        JButton voltarMCliMComFIDButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliMComFIDButton = new JButton("VOLTAR");
-//        JButton okMCliMComFIDButton = new JButton("OK");
-//
-//        mCliMComFIDnSuperPanel.add(norteMCliMComFIDnSubPanel, "North");
-//        mCliMComFIDSuperPanel.add(centroMCliMComFIDSubPanel, "Center");
-//        mCliMComFIDSuperPanel.add(sulMCliMComFIDSubPanel, "South");
-//
-//        JPanel norteMCliMComFIDSSPanel = new JPanel();
-//        norteMCliMComFIDSSPanel.setLayout(new FlowLayout());
-//        norteMCliMComFIDSSPanel.add(mCliMComFIDLabe);
-//        norteMCliMComFIDSubPanel.add(norteMCliMComFIDSSPanel, BorderLayout.CENTER);
-//        norteMCliMComFIDSubPanel.add(ptEnMCliMComFIDButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliMComFIDSSPanel = new JPanel();
-//        centroMCliMComFIDSSPanel.setLayout(new FlowLayout());
-//        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFIDSSPanel1 = new JPanel();
-//        centroMCliMComFIDSSPanel1.setLayout(new FlowLayout());
-//        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel1, BorderLayout.WEST);
-//
-//        JPanel centroMCliMComFIDSSPanel2 = new JPanel();
-//        centroMCliMComFIDSSPanel2.setLayout(new FlowLayout());
-//        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel2, BorderLayout.WEST);
-//
-//        centroMCliMComFIDSubPanel.add(centroMCliMComFIDSSPanel4, BorderLayout.CENTER);
-//
-//
-//        centroMCliMComFIDSSPanel.add(intervaloDatasMCliMComFIDLabel);
-//        centroMCliMComFIDSSPanel.add(deMCliMComFIDLabel);
-//        centroMCliMComFIDSSPanel.add(datePickerMCliMComFID1);
-//        centroMCliMComFIDSSPanel.add(ateMCliMComFIDLabel);
-//        centroMCliMComFIDSSPanel.add(datePickerMCliMComFID2);
-//
-//        sulMCliMComFIDSubPanel.setLayout(new FlowLayout());
-//        sulMCliMComFIDSubPanel.add(voltarMCliMComFIDButton);
-//        sulMCliMComFIDSubPanel.add(okMCliMComFIDButton);
-//
-//        voltarMCliMComFIDButton.addActionListener(a -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, MENUCLIENTE_CARD);
-//        this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//        okMCliMComFIDButton.addActionListener(e -> {
-//        CardLayout cl = (CardLayout) contentor.getLayout();
-//        cl.show(contentor, LOGIN_CARD);
-//        this.setSize(500, 180);
-//        });
-//
-//        }
+        JPanel centroMCliFResPSSPanel = new JPanel();
+        centroMCliFResPSSPanel.setLayout(new FlowLayout());
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel, BorderLayout.WEST);
 
-//    ////////////////////MENU CLIENTE - ACTUALIZAR DADOS /////////////////////////
-//    private void construirPanelMCliAtDados(Interface janela, Container contentor, JPanel
-//            loginSuperPanel, JPanel mCliAtDadosSuperPanel) {
-//
-//        passwordValido = false;
-//        confirmarPasswordValido = false;
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteAtDadosMCliSubPanel = new JPanel();
-//        norteAtDadosMCliSubPanel.setLayout(new BorderLayout());
-//        JPanel centroAtDadosMCliSubPanel = new JPanel();
-//        JPanel sulAtDadosMCliSubPanel = new JPanel();
-//
-//        JLabel atDadosMCliLabel = new JLabel("ACTUALIZAR DADOS");
-//        atDadosMCliLabel.setForeground(Color.BLUE);
-//        JLabel nomeCliMCliLabel = new JLabel("Nome");
-//        //nomeCliMCliLabel.setBounds(50,80,100,20);
-//        JLabel emailCliMCliLabel = new JLabel("E-mail");
-//        JLabel moradaCliMCliLabel = new JLabel("Morada");
-//        JLabel telemovelCliMCliLabel = new JLabel("Telemóvel");
-//        JLabel usernameCliMCliLabel = new JLabel("Username");
-//        JLabel passwordCliMCliLabel = new JLabel("Password");
-//        JLabel confirmarPasswordCliMCliLabel = new JLabel("Confirmar password: ");
-//
-//        JTextField nomeCliMCliText = new JTextField(20);
-//        nomeCliMCliText.setMargin(new Insets(3, 3, 3, 3));
-//        JTextField emailCliMCliText = new JTextField(20);
-//        JTextField moradaCliMCliText = new JTextField(20);
-//        JTextField telemovelCliMCliText = new JFormattedTextField(mascaraTelemovel);
-//        telemovelCliMCliText.setColumns(20);
-//        JTextField usernameCliMCliText = new JTextField(20);
-//
-//        JPasswordField passwordCliMCliField = new JPasswordField(20);
-//        passwordCliMCliField.addFocusListener(new FocusListener() {
-//            @Override
-//            public void focusGained(FocusEvent e) {
-//                passwordValido = true;
-//            }
-//
-//            @Override
-//            public void focusLost(FocusEvent e) {
-//                if (passwordCliMCliField.getPassword().length < 6) {
-//                    passwordValido = false;
-//                }
-//
-//            }
-//        });
-//        JPasswordField confirmarPassawordCliMCliField = new JPasswordField(20);
-//        confirmarPassawordCliMCliField.addFocusListener(new FocusListener() {
-//            @Override
-//            public void focusGained(FocusEvent e) {
-//                confirmarPasswordValido = true;
-//            }
-//
-//            @Override
-//            public void focusLost(FocusEvent e) {
-//                if (!passwordCliMCliField.getPassword().equals(confirmarPassawordCliMCliField.getPassword())) {
-//                    confirmarPasswordValido = false;
-//                }
-//
-//            }
-//        });
-//        JButton ptEnAtDadosMCliButton = new JButton("PT/EN");
-//        JButton voltarCliMCliButton = new JButton("MENU CLIENTE");
-//        JButton actualizarCliMCliButton = new JButton("ACTUALIZAR");
-//
-//        mCliAtDadosSuperPanel.add(norteAtDadosMCliSubPanel, "North");
-//        mCliAtDadosSuperPanel.add(centroAtDadosMCliSubPanel, "Center");
-//        mCliAtDadosSuperPanel.add(sulAtDadosMCliSubPanel, "South");
-//
-//        JPanel norteAtDadosMCliSSPanel = new JPanel();
-//        norteAtDadosMCliSSPanel.setLayout(new FlowLayout());
-//        norteAtDadosMCliSSPanel.add(atDadosMCliLabel);
-//        norteAtDadosMCliSubPanel.add(norteAtDadosMCliSSPanel, BorderLayout.CENTER);
-//        norteAtDadosMCliSubPanel.add(ptEnAtDadosMCliButton, BorderLayout.EAST);
-//
-//        JPanel centroAtDadosMCliSSPanel = new JPanel();
-//        centroAtDadosMCliSSPanel.setLayout(new GridLayout(7, 2));
-//        centroAtDadosMCliSubPanel.add(centroAtDadosMCliSSPanel);
-//        centroAtDadosMCliSSPanel.add(nomeCliMCliLabel);
-//        centroAtDadosMCliSSPanel.add(nomeCliMCliText);
-//        centroAtDadosMCliSSPanel.add(emailCliMCliLabel);
-//        centroAtDadosMCliSSPanel.add(emailCliMCliText);
-//        centroAtDadosMCliSSPanel.add(moradaCliMCliLabel);
-//        centroAtDadosMCliSSPanel.add(moradaCliMCliText);
-//        centroAtDadosMCliSSPanel.add(telemovelCliMCliLabel);
-//        centroAtDadosMCliSSPanel.add(telemovelCliMCliText);
-//        centroAtDadosMCliSSPanel.add(usernameCliMCliLabel);
-//        centroAtDadosMCliSSPanel.add(usernameCliMCliText);
-//        centroAtDadosMCliSSPanel.add(passwordCliMCliLabel);
-//        centroAtDadosMCliSSPanel.add(passwordCliMCliField);
-//        centroAtDadosMCliSSPanel.add(confirmarPasswordCliMCliLabel);
-//        centroAtDadosMCliSSPanel.add(confirmarPassawordCliMCliField);
-//
-//        sulAtDadosMCliSubPanel.setLayout(new FlowLayout());
-//        sulAtDadosMCliSubPanel.add(voltarCliMCliButton);
-//        sulAtDadosMCliSubPanel.add(actualizarCliMCliButton);
-//
-//        actualizarCliMCliButton.addActionListener(a -> {
-//            if (!passwordValido) {
-//                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(), "Password Inválido: deve conter o mínimo de 6 caracteres!");
-//                passwordCliMCliField.requestFocus();
-//                return;
-//            }
-//            if (!confirmarPasswordValido) {
-//                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(), "Password Inválido: deve ser igual password!");
-//                confirmarPassawordCliMCliField.requestFocus();
-//                return;
-//            }
-//            //TODO faz-se necessário atualizar  método atualizarDados Cliente, retirando o password e criar um novo metodo para atualização de password
-//            sistema.atualizarDadosCliente(nomeCliMCliText.getText(),
-//                    moradaCliMCliText.getText(),
-//                    telemovelCliMCliText.getText(),
-//                    emailCliMCliText.getText(),
-//                    passwordCliMCliField.getPassword().toString(),
-//                    confirmarPassawordCliMCliField.getPassword().toString(),
-//                    confirmarPassawordCliMCliField.getPassword().toString());
-//        });
-//        voltarCliMCliButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//    }
-//// todo verificar os botões editar e apagar que estão em conflito com visualizar
-//
-//    //////MENU CLIENTE – RESERVAS - ACTIVAS//////////
-//
-//    private void construirPanelMCliResAct(Interface janela, Container contentor, JPanel
-//            loginSuperPanel, JPanel mCliResActSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliResActSubPanel = new JPanel();
-//        norteMCliResActSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliResActSubPanel = new JPanel();
-//        JPanel sulMCliResActSubPanel = new JPanel();
-//
-//        JLabel mCliTitHistResActLabel = new JLabel("MENU CLIENTE - RESERVAS ACTIVAS");
-//        JLabel mCliIdHistResActLabel = new JLabel("ID");
-//
-//        String[] mCliIdHistResAct = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
-//        JComboBox arrayMCliIdHistResActCBox = new JComboBox(mCliIdHistResAct);
-//
-////todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, editar e cancelar
-//        String[] nomeColunasMCliResAct = new String[]{
-//                "ID", "DATA", "RESTAURNATE"
-//        };
-//
-//        Object[][] dados = new Object[][]{
-//                {"ID", "DATA", "RESTAURANTE"},
-//                {1, "dd/MM/yyy", "A"},
-//                {2, "dd/MM/yyy", "B"},
-//                {3, "dd/MM/yyy", "C"},
-//        };
-//        //criação da tabela
-//        JTable tabelaMCliResAct = new JTable(dados, nomeColunasMCliResAct);
-//
-//        JButton ptEnMCliRestButton = new JButton("PT/EN");
-//        JButton voltarMCliResActButton = new JButton("MENU CLIENTE");
-//        JButton visualizarMCliResActButton = new JButton("VISUALIZAR");
-//        JButton retonarMCliResActButton = new JButton("RETORNAR");
-//
-//        JRadioButton editarMCliResActButton = new JRadioButton("EDITAR");
-//        JRadioButton apagarMCliResActButton = new JRadioButton("APAGAR");
-//
-//        ButtonGroup group = new ButtonGroup();
-//        group.add(editarMCliResActButton);
-//        group.add(apagarMCliResActButton);
-//
-//        mCliResActSuperPanel.add(norteMCliResActSubPanel, "North");
-//        mCliResActSuperPanel.add(centroMCliResActSubPanel, "Center");
-//        mCliResActSuperPanel.add(sulMCliResActSubPanel, "South");
-//
-//        JPanel norteMCliResActSSPanel = new JPanel();
-//        norteMCliResActSSPanel.setLayout(new FlowLayout());
-//        norteMCliResActSSPanel.add(mCliTitHistResActLabel);
-//        norteMCliResActSubPanel.add(norteMCliResActSSPanel, BorderLayout.CENTER);
-//        norteMCliResActSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliResActSSPanel = new JPanel();
-//        centroMCliResActSSPanel.setLayout(new FlowLayout());
-//        centroMCliResActSubPanel.add(centroMCliResActSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliResActSSPanel1 = new JPanel();
-//        centroMCliResActSSPanel1.setLayout(new FlowLayout());
-//        centroMCliResActSubPanel.add(centroMCliResActSSPanel1, BorderLayout.WEST);
-//
-//        JPanel centroMCliResActSSPanel2 = new JPanel();
-//        centroMCliResActSSPanel2.setLayout(new FlowLayout());
-//        centroMCliResActSubPanel.add(centroMCliResActSSPanel2, BorderLayout.WEST);
-//
-//        centroMCliResActSSPanel.add(tabelaMCliResAct);
-//        centroMCliResActSSPanel1.add(mCliIdHistResActLabel);
-//        centroMCliResActSSPanel1.add(arrayMCliIdHistResActCBox);
-//        centroMCliResActSSPanel2.add(editarMCliResActButton);
-//        centroMCliResActSSPanel2.add(apagarMCliResActButton);
-//
-//        sulMCliResActSubPanel.setLayout(new FlowLayout());
-//        sulMCliResActSubPanel.add(voltarMCliResActButton);
-//        sulMCliResActSubPanel.add(retonarMCliResActButton);
-//        sulMCliResActSubPanel.add(visualizarMCliResActButton);
-//
-//
-//        visualizarMCliResActButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//
-//        });
-//
-//        editarMCliResActButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        apagarMCliResActButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        retonarMCliResActButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIRESERVAS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        voltarMCliResActButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//    }
-//
-//    //////MENU CLIENTE – FAZER RESERVAS//////////
-//    private void construirPanelMCliFazerRes(Interface janela, Container contentor, JPanel
-//            loginSuperPanel, JPanel mCliFazerResSuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliFResSubPanel = new JPanel();
-//        norteMCliFResSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliFResSubPanel = new JPanel();
-//        JPanel sulMCliFResSubPanel = new JPanel();
-//
-//        JLabel mCliTitFResLabel = new JLabel("MENU CLIENTE - FAZER RESERVAS");
-//        JLabel tipoResMCliFResLabel = new JLabel("TIPO DE RESERVA:");
-//        JLabel nomeResMCliFResLabel = new JLabel("RESTAURANTE:");
-//
-//        JTextField nomeResMCliFResText = new JTextField(25);
-//
-//        JRadioButton presencialMCliFResRButton = new JRadioButton("PRESENCIAL");
-//        JRadioButton takeAwayMCliFResRButton = new JRadioButton("TAKE-AWAY");
-//
-//        ButtonGroup group = new ButtonGroup();
-//        group.add(presencialMCliFResRButton);
-//        group.add(takeAwayMCliFResRButton);
-//
-//        JButton ptEnMCliFResButton = new JButton("PT/EN");
-//        JButton voltarMCliFResButton = new JButton("MENU CLIENTE");
-//        JButton retornarMCliFResButton = new JButton("VOLTAR");
-//
-//        mCliFazerResSuperPanel.add(norteMCliFResSubPanel, "North");
-//        mCliFazerResSuperPanel.add(centroMCliFResSubPanel, "Center");
-//        mCliFazerResSuperPanel.add(sulMCliFResSubPanel, "South");
-//
-//        JPanel norteMCliFResSSPanel = new JPanel();
-//        norteMCliFResSSPanel.setLayout(new FlowLayout());
-//        norteMCliFResSSPanel.add(mCliTitFResLabel);
-//        norteMCliFResSubPanel.add(norteMCliFResSSPanel, BorderLayout.CENTER);
-//        norteMCliFResSubPanel.add(ptEnMCliFResButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliFResSSPanel = new JPanel();
-//        centroMCliFResSSPanel.setLayout(new FlowLayout());
-//        centroMCliFResSubPanel.add(centroMCliFResSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResSSPanel1 = new JPanel();
-//        centroMCliFResSSPanel1.setLayout(new FlowLayout());
-//        centroMCliFResSubPanel.add(centroMCliFResSSPanel1, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResSSPanel2 = new JPanel();
-//        centroMCliFResSSPanel2.setLayout(new FlowLayout());
-//        centroMCliFResSubPanel.add(centroMCliFResSSPanel2, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResSSPanel3 = new JPanel();
-//        centroMCliFResSSPanel3.setLayout(new GridLayout(1, 1));
-//        centroMCliFResSubPanel.add(centroMCliFResSSPanel3, BorderLayout.WEST);
-//
-//        //todo ver como listar o restaurantes
-//        centroMCliFResSSPanel1.add(nomeResMCliFResLabel);
-//        centroMCliFResSSPanel1.add(nomeResMCliFResText);
-//        centroMCliFResSSPanel2.add(tipoResMCliFResLabel);
-//        centroMCliFResSSPanel3.add(presencialMCliFResRButton);
-//        centroMCliFResSSPanel3.add(takeAwayMCliFResRButton);
-//
-//        sulMCliFResSubPanel.setLayout(new FlowLayout());
-//        sulMCliFResSubPanel.add(voltarMCliFResButton);
-//        sulMCliFResSubPanel.add(retornarMCliFResButton);
-//
-//        presencialMCliFResRButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIFAZERRESP_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        takeAwayMCliFResRButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIFAZERRESTA_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        retornarMCliFResButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIRESERVAS_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        voltarMCliFResButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//    }
-//
-//
-//    //////MENU CLIENTE – FAZER RESERVA PRESENCIAL//////////
-//    private void construirPanelMCliFazerResP(Interface janela, Container contentor, JPanel
-//            loginSuperPanel, JPanel mCliFazerResPSuperPanel) {
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliFResPSubPanel = new JPanel();
-//        norteMCliFResPSubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliFResPSubPanel = new JPanel();
-//        JPanel sulMCliFResPSubPanel = new JPanel();
-//
-//        JLabel mCliTitFResPLabel = new JLabel("FAZER RESERVAS PRESENCIAL");
-//        JLabel diaMCliFResPLabel = new JLabel("DIA");
-//        JLabel horaMCliFResPLabel = new JLabel("HORA");
-//        //JLabel horaDeMCliFResPLabel = new JLabel("De");
-//        //JLabel horaAteMCliFResPLabel = new JLabel("Até");
-//        JLabel qtdePessoasMCliFResPLabel = new JLabel("QUANTIDADE DE PESSOAS");
-//        JLabel msgMCliFResPLabel = new JLabel("Contatar diretamente o restaurante no caso de reservas para mais de 20 pessoas");
-//
-//        String[] horaDeMCliFRes = {"", "11h", "11h30", "12h", "12h30", "13h", "13h30", "14h", "14h30", "15h", "15h30", "19h", "19h30", "20h", "20h30", "21h", "21h30", "22h", "22h30"};
-//        JComboBox arrayHoraDeMCliFResPCBox = new JComboBox(horaDeMCliFRes);
-//
-//        //todo verificar se não deve mesmo constar
-//        //String [] horaAteMCliFRes = {"","12h","12h30","13h","13h30","14h","14h30","15h","15h30","19h","19h30","20h","20h30","21h","21h30","22h","22h30"};
-//        //JComboBox arrayHoraAteMCliFResPCBox = new JComboBox(horaAteMCliFRes);
-//
-//        String[] qtdePessoasMCliFRes = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"};
-//        JComboBox arrayQtdePessoasMCliFResPCBox = new JComboBox(qtdePessoasMCliFRes);
-//
-//        JButton ptEnMCliFResPButton = new JButton("PT/EN");
-//        JButton voltarMCliFResPButton = new JButton("MENU CLIENTE");
-//        JButton confirmarMCliFResPButton = new JButton("OK");
-//        JButton retornarMCliFResPButton = new JButton("VOLTAR");
-//
-//        //Adição do calendário
-//        //UtilDateModel model1 = new UtilDateModel();
-//        UtilDateModel model6 = new UtilDateModel();
-//
-//        ResourceBundle b = ResourceBundle.getBundle("Text");
-//
-//        Properties p = convertResourceBundleToProperties(b);
-//        JDatePanelImpl datePanel5 = new JDatePanelImpl(model6, p);
-//        JDatePickerImpl datePicker6 = new JDatePickerImpl(datePanel5, new DateLabelFormatter());
-//
-//        mCliFazerResPSuperPanel.add(norteMCliFResPSubPanel, "North");
-//        mCliFazerResPSuperPanel.add(centroMCliFResPSubPanel, "Center");
-//        mCliFazerResPSuperPanel.add(sulMCliFResPSubPanel, "South");
-//
-//        JPanel norteMCliFResSPPSSPanel = new JPanel();
-//        norteMCliFResSPPSSPanel.setLayout(new FlowLayout());
-//        norteMCliFResSPPSSPanel.add(mCliTitFResPLabel);
-//        norteMCliFResPSubPanel.add(norteMCliFResSPPSSPanel, BorderLayout.CENTER);
-//        norteMCliFResPSubPanel.add(ptEnMCliFResPButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliFResPSSPanel = new JPanel();
-//        centroMCliFResPSSPanel.setLayout(new FlowLayout());
-//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResPSSPanel1 = new JPanel();
-//        centroMCliFResPSSPanel1.setLayout(new FlowLayout());
-//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel1, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResPSSPanel2 = new JPanel();
-//        centroMCliFResPSSPanel2.setLayout(new FlowLayout());
-//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel2, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResPSSPanel3 = new JPanel();
-//        centroMCliFResPSSPanel3.setLayout(new GridLayout(1, 1));
-//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel3, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResPSSPanel4 = new JPanel();
-//        centroMCliFResPSSPanel4.setLayout(new FlowLayout());
-//        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel4, BorderLayout.WEST);
-//
-//        centroMCliFResPSSPanel.add(diaMCliFResPLabel);
-//        centroMCliFResPSSPanel.add(datePicker6);
-//        centroMCliFResPSSPanel1.add(horaMCliFResPLabel);
-//        //centroMCliFResPSSPanel2.add(horaDeMCliFResPLabel);
-//        centroMCliFResPSSPanel2.add(arrayHoraDeMCliFResPCBox);
-//        //centroMCliFResPSSPanel2.add(horaAteMCliFResPLabel);
-//        //centroMCliFResPSSPanel2.add(arrayHoraAteMCliFResPCBox);
-//
-//        centroMCliFResPSSPanel3.add(qtdePessoasMCliFResPLabel);
-//        centroMCliFResPSSPanel3.add(arrayQtdePessoasMCliFResPCBox);
-//        centroMCliFResPSSPanel4.add(msgMCliFResPLabel);
-//
-//        sulMCliFResPSubPanel.setLayout(new FlowLayout());
-//        sulMCliFResPSubPanel.add(voltarMCliFResPButton);
-//        sulMCliFResPSubPanel.add(retornarMCliFResPButton);
-//        sulMCliFResPSubPanel.add(confirmarMCliFResPButton);
-//
-//        voltarMCliFResPButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        retornarMCliFResPButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIFAZERRES_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        //todo ver os encaminhamentos
-//        confirmarMCliFResPButton.addActionListener(e -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, LOGIN_CARD);
-//            this.setSize(500, 180);
-//        });
-//
-//    }
-//
-//    //////MENU CLIENTE – FAZER RESERVA TAKE-AWAY//////////
-//    private void construirPanelMCliFazerResTA(Interface janela, Container contentor, JPanel
-//            loginSuperPanel, JPanel mCliFazerResTASuperPanel) {
-//
-//
-//        /////SUBPAINEIS//////
-//        JPanel norteMCliFResTASubPanel = new JPanel();
-//        norteMCliFResTASubPanel.setLayout(new BorderLayout());
-//        JPanel centroMCliFResTASubPanel = new JPanel();
-//        JPanel sulMCliFResTASubPanel = new JPanel();
-//
-//        JLabel mCliTitFResTALabel = new JLabel("FAZER RESERVAS TAKE-AWAY");
-//        JLabel horaMCliFResTALabel = new JLabel("HORA");
-//        JLabel idMCliFResTALabel = new JLabel("ID");
-//        JLabel qtdePratosMCliFResTALabel = new JLabel("QUANTIDADE");
-//        JLabel pratosMCliFResTALabel = new JLabel("PRATOS");
-//
-//        String[] horasMCliFResTA = {"", "11h30", "12h", "12h30", "13h", "13h30", "14h", "14h30", "15h", "15h30", "19h", "19h30", "20h", "20h30", "21h", "21h30", "22h", "22h30"};
-//        JComboBox arrayHorasMCliFResTACBox = new JComboBox(horasMCliFResTA);
-//
-//        String[] idMCliFResTA = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
-//        JComboBox arrayIdMCliFResTACBox = new JComboBox(idMCliFResTA);
-//
-//        String[] qtdePratosMCliFResTA = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"};
-//        JComboBox arrayQtdePratosMCliFResTACBox = new JComboBox(qtdePratosMCliFResTA);
-//
-////todo possibilitar que o prato possa ser selecionado
-//        String[] nomeColunasMCliFResTA = new String[]{
-//                "ID", "NOME", "DESCRIÇÃO", "PREÇO", "TIPO"
-//        };
-//
-//        Object[][] dados = new Object[][]{
-//                {"ID", "NOME", "DESCRIÇÃO", "PREÇO", "TIPO"},
-//                {1, "Sardinha", "Assada", "15.0", "Carta"},
-//                {2, "Peru", "Ensopado", "15.0", "Prato do Dia"},
-//                {3, "Bifana", "Frita", "15.0", "Carta"},
-//                {4, "Sardinha", "Assada", "15.0", "Carta"},
-//                {5, "Peru", "Ensopado", "15.0", "Prato do Dia"},
-//                {6, "Bifana", "Frita", "15.0", "Carta"},
-//
-//        };
-//        //criação da tabela
-//        JTable tabelaMCliFResTA = new JTable(dados, nomeColunasMCliFResTA);
-//
-//        JButton ptEnMCliFResTAButton = new JButton("PT/EN");
-//        JButton voltarMCliFResTAButton = new JButton("MENU CLIENTE");
-//        JButton adicionarMCliFResTAButton = new JButton("ADICIONAR");
-//        JButton retornarMCliFResButton = new JButton("VOLTAR");
-//        JButton finalizarMCliFResTAButton = new JButton("FINALIZAR");
-//
-//        mCliFazerResTASuperPanel.add(norteMCliFResTASubPanel, "North");
-//        mCliFazerResTASuperPanel.add(centroMCliFResTASubPanel, "Center");
-//        mCliFazerResTASuperPanel.add(sulMCliFResTASubPanel, "South");
-//
-//        JPanel norteMCliFResTASSPanel = new JPanel();
-//        norteMCliFResTASSPanel.setLayout(new FlowLayout());
-//        norteMCliFResTASSPanel.add(mCliTitFResTALabel);
-//        norteMCliFResTASubPanel.add(norteMCliFResTASSPanel, BorderLayout.CENTER);
-//        norteMCliFResTASubPanel.add(ptEnMCliFResTAButton, BorderLayout.EAST);
-//
-//        JPanel centroMCliFResTASSPanel = new JPanel();
-//        centroMCliFResTASSPanel.setLayout(new FlowLayout());
-//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResTASSPanel1 = new JPanel();
-//        centroMCliFResTASSPanel1.setLayout(new FlowLayout());
-//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel1, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResTASSPanel2 = new JPanel();
-//        centroMCliFResTASSPanel2.setLayout(new FlowLayout());
-//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel2, BorderLayout.WEST);
-//
-//        JPanel centroMCliFResTASSPanel3 = new JPanel();
-//        centroMCliFResTASSPanel3.setLayout(new FlowLayout());
-//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel3, BorderLayout.CENTER);
-//
-//        JPanel centroMCliFResTASSPanel4 = new JPanel();
-//        centroMCliFResTASSPanel4.setLayout(new FlowLayout());
-//        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel4, BorderLayout.WEST);
-//
-//        centroMCliFResTASSPanel.add(horaMCliFResTALabel);
-//        centroMCliFResTASSPanel1.add(arrayHorasMCliFResTACBox);
-//        centroMCliFResTASSPanel3.add(pratosMCliFResTALabel);
-//        centroMCliFResTASSPanel3.add(tabelaMCliFResTA);
-//        centroMCliFResTASSPanel4.add(idMCliFResTALabel);
-//        centroMCliFResTASSPanel4.add(arrayIdMCliFResTACBox);
-//        centroMCliFResTASSPanel4.add(qtdePratosMCliFResTALabel);
-//        centroMCliFResTASSPanel4.add(arrayQtdePratosMCliFResTACBox);
-//
-//        sulMCliFResTASubPanel.setLayout(new FlowLayout());
-//        sulMCliFResTASubPanel.add(voltarMCliFResTAButton);
-//        sulMCliFResTASubPanel.add(retornarMCliFResButton);
-//        sulMCliFResTASubPanel.add(adicionarMCliFResTAButton);
-//        sulMCliFResTASubPanel.add(finalizarMCliFResTAButton);
-//
-//
-//        voltarMCliFResTAButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MENUCLIENTE_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        retornarMCliFResButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIFAZERRES_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//        //todo fazer nova página com valor final (botoes de finalizar, editar e remover com quantidade)
-//        finalizarMCliFResTAButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIFAZERRES_CARD);
-//            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-//        });
-//
-//        //todo ver os encaminhamentos
-//        adicionarMCliFResTAButton.addActionListener(e -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, MCLIFAZERRES_CARD);
-//            this.setSize(500, 180);
-//        });
-//
-//
-//        this.setVisible(true);
-//    }
-//
-//}
\ No newline at end of file
+        JPanel centroMCliFResPSSPanel1 = new JPanel();
+        centroMCliFResPSSPanel1.setLayout(new FlowLayout());
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliFResPSSPanel2 = new JPanel();
+        centroMCliFResPSSPanel2.setLayout(new FlowLayout());
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel2, BorderLayout.WEST);
+
+        JPanel centroMCliFResPSSPanel3 = new JPanel();
+        centroMCliFResPSSPanel3.setLayout(new GridLayout(1, 1));
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel3, BorderLayout.WEST);
+
+        JPanel centroMCliFResPSSPanel4 = new JPanel();
+        centroMCliFResPSSPanel4.setLayout(new FlowLayout());
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel4, BorderLayout.WEST);
+
+        centroMCliFResPSSPanel.add(diaMCliFResPLabel);
+        centroMCliFResPSSPanel.add(datePicker6);
+        centroMCliFResPSSPanel1.add(horaMCliFResPLabel);
+        //centroMCliFResPSSPanel2.add(horaDeMCliFResPLabel);
+        centroMCliFResPSSPanel2.add(arrayHoraDeMCliFResPCBox);
+        //centroMCliFResPSSPanel2.add(horaAteMCliFResPLabel);
+        //centroMCliFResPSSPanel2.add(arrayHoraAteMCliFResPCBox);
+
+        centroMCliFResPSSPanel3.add(qtdePessoasMCliFResPLabel);
+        centroMCliFResPSSPanel3.add(arrayQtdePessoasMCliFResPCBox);
+        centroMCliFResPSSPanel4.add(msgMCliFResPLabel);
+
+        sulMCliFResPSubPanel.setLayout(new FlowLayout());
+        sulMCliFResPSubPanel.add(voltarMCliFResPButton);
+        sulMCliFResPSubPanel.add(retornarMCliFResPButton);
+        sulMCliFResPSubPanel.add(confirmarMCliFResPButton);
+
+        voltarMCliFResPButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliFResPButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        //todo ver os encaminhamentos
+        confirmarMCliFResPButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+
+    }
+
+    //////MENU CLIENTE – FAZER RESERVA TAKE-AWAY//////////
+    private void construirPanelMCliFazerResTA(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliFazerResTASuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliFResTASubPanel = new JPanel();
+        norteMCliFResTASubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliFResTASubPanel = new JPanel();
+        JPanel sulMCliFResTASubPanel = new JPanel();
+
+        JLabel mCliTitFResTALabel = new JLabel("FAZER RESERVAS TAKE-AWAY");
+        JLabel horaMCliFResTALabel = new JLabel("HORA");
+        JLabel idMCliFResTALabel = new JLabel("ID");
+        JLabel qtdePratosMCliFResTALabel = new JLabel("QUANTIDADE");
+        JLabel pratosMCliFResTALabel = new JLabel("PRATOS");
+
+        String[] horasMCliFResTA = {"", "11h30", "12h", "12h30", "13h", "13h30", "14h", "14h30", "15h", "15h30", "19h", "19h30", "20h", "20h30", "21h", "21h30", "22h", "22h30"};
+        JComboBox arrayHorasMCliFResTACBox = new JComboBox(horasMCliFResTA);
+
+        String[] idMCliFResTA = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
+        JComboBox arrayIdMCliFResTACBox = new JComboBox(idMCliFResTA);
+
+        String[] qtdePratosMCliFResTA = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"};
+        JComboBox arrayQtdePratosMCliFResTACBox = new JComboBox(qtdePratosMCliFResTA);
+
+//todo possibilitar que o prato possa ser selecionado
+        String[] nomeColunasMCliFResTA = new String[]{
+                "ID", "NOME", "DESCRIÇÃO", "PREÇO", "TIPO"
+        };
+
+        Object[][] dados = new Object[][]{
+                {"ID", "NOME", "DESCRIÇÃO", "PREÇO", "TIPO"},
+                {1, "Sardinha", "Assada", "15.0", "Carta"},
+                {2, "Peru", "Ensopado", "15.0", "Prato do Dia"},
+                {3, "Bifana", "Frita", "15.0", "Carta"},
+                {4, "Sardinha", "Assada", "15.0", "Carta"},
+                {5, "Peru", "Ensopado", "15.0", "Prato do Dia"},
+                {6, "Bifana", "Frita", "15.0", "Carta"},
+
+        };
+        //criação da tabela
+        JTable tabelaMCliFResTA = new JTable(dados, nomeColunasMCliFResTA);
+
+        JButton ptEnMCliFResTAButton = new JButton("PT/EN");
+        JButton voltarMCliFResTAButton = new JButton("MENU CLIENTE");
+        JButton adicionarMCliFResTAButton = new JButton("ADICIONAR");
+        JButton retornarMCliFResButton = new JButton("VOLTAR");
+        JButton finalizarMCliFResTAButton = new JButton("FINALIZAR");
+
+        mCliFazerResTASuperPanel.add(norteMCliFResTASubPanel, "North");
+        mCliFazerResTASuperPanel.add(centroMCliFResTASubPanel, "Center");
+        mCliFazerResTASuperPanel.add(sulMCliFResTASubPanel, "South");
+
+        JPanel norteMCliFResTASSPanel = new JPanel();
+        norteMCliFResTASSPanel.setLayout(new FlowLayout());
+        norteMCliFResTASSPanel.add(mCliTitFResTALabel);
+        norteMCliFResTASubPanel.add(norteMCliFResTASSPanel, BorderLayout.CENTER);
+        norteMCliFResTASubPanel.add(ptEnMCliFResTAButton, BorderLayout.EAST);
+
+        JPanel centroMCliFResTASSPanel = new JPanel();
+        centroMCliFResTASSPanel.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliFResTASSPanel1 = new JPanel();
+        centroMCliFResTASSPanel1.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliFResTASSPanel2 = new JPanel();
+        centroMCliFResTASSPanel2.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel2, BorderLayout.WEST);
+
+        JPanel centroMCliFResTASSPanel3 = new JPanel();
+        centroMCliFResTASSPanel3.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel3, BorderLayout.CENTER);
+
+        JPanel centroMCliFResTASSPanel4 = new JPanel();
+        centroMCliFResTASSPanel4.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel4, BorderLayout.WEST);
+
+        centroMCliFResTASSPanel.add(horaMCliFResTALabel);
+        centroMCliFResTASSPanel1.add(arrayHorasMCliFResTACBox);
+        centroMCliFResTASSPanel3.add(pratosMCliFResTALabel);
+        centroMCliFResTASSPanel3.add(tabelaMCliFResTA);
+        centroMCliFResTASSPanel4.add(idMCliFResTALabel);
+        centroMCliFResTASSPanel4.add(arrayIdMCliFResTACBox);
+        centroMCliFResTASSPanel4.add(qtdePratosMCliFResTALabel);
+        centroMCliFResTASSPanel4.add(arrayQtdePratosMCliFResTACBox);
+
+        sulMCliFResTASubPanel.setLayout(new FlowLayout());
+        sulMCliFResTASubPanel.add(voltarMCliFResTAButton);
+        sulMCliFResTASubPanel.add(retornarMCliFResButton);
+        sulMCliFResTASubPanel.add(adicionarMCliFResTAButton);
+        sulMCliFResTASubPanel.add(finalizarMCliFResTAButton);
+
+
+        voltarMCliFResTAButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliFResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        //todo fazer nova página com valor final (botoes de finalizar, editar e remover com quantidade)
+        finalizarMCliFResTAButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        //todo ver os encaminhamentos
+        adicionarMCliFResTAButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(500, 180);
+        });
+
+
+        this.setVisible(true);
+    }
+
+}
\ No newline at end of file
Index: src/com/company/gui/util/DateLabelFormatter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//package com.company.gui.util;\r\n//\r\n//import javax.swing.JFormattedTextField.AbstractFormatter;\r\n//import java.text.ParseException;\r\n//import java.text.SimpleDateFormat;\r\n//import java.util.Calendar;\r\n//\r\n//public class DateLabelFormatter extends AbstractFormatter {\r\n//\r\n//    private String datePattern = \"dd-MM-yyyy\";\r\n//    private SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);\r\n//\r\n//    @Override\r\n//    public Object stringToValue(String text) throws ParseException {\r\n//        return dateFormatter.parseObject(text);\r\n//    }\r\n//\r\n//    @Override\r\n//    public String valueToString(Object value) throws ParseException {\r\n//        if (value != null) {\r\n//            Calendar cal = (Calendar) value;\r\n//            return dateFormatter.format(cal.getTime());\r\n//        }\r\n//\r\n//        return \"\";\r\n//    }\r\n//\r\n//}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/gui/util/DateLabelFormatter.java	(revision 94d56b93f5cc2a5d5537a2f6b203d7f05233f991)
+++ src/com/company/gui/util/DateLabelFormatter.java	(date 1609536767474)
@@ -1,28 +1,28 @@
-//package com.company.gui.util;
-//
-//import javax.swing.JFormattedTextField.AbstractFormatter;
-//import java.text.ParseException;
-//import java.text.SimpleDateFormat;
-//import java.util.Calendar;
-//
-//public class DateLabelFormatter extends AbstractFormatter {
-//
-//    private String datePattern = "dd-MM-yyyy";
-//    private SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);
-//
-//    @Override
-//    public Object stringToValue(String text) throws ParseException {
-//        return dateFormatter.parseObject(text);
-//    }
-//
-//    @Override
-//    public String valueToString(Object value) throws ParseException {
-//        if (value != null) {
-//            Calendar cal = (Calendar) value;
-//            return dateFormatter.format(cal.getTime());
-//        }
-//
-//        return "";
-//    }
-//
-//}
\ No newline at end of file
+package com.company.gui.util;
+
+import javax.swing.JFormattedTextField.AbstractFormatter;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+
+public class DateLabelFormatter extends AbstractFormatter {
+
+    private String datePattern = "dd-MM-yyyy";
+    private SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);
+
+    @Override
+    public Object stringToValue(String text) throws ParseException {
+        return dateFormatter.parseObject(text);
+    }
+
+    @Override
+    public String valueToString(Object value) throws ParseException {
+        if (value != null) {
+            Calendar cal = (Calendar) value;
+            return dateFormatter.format(cal.getTime());
+        }
+
+        return "";
+    }
+
+}
\ No newline at end of file
