Index: src/GUI/Interface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport java.awt.*;\r\n\r\nimport javax.swing.*;\r\n\r\npublic class Interface extends JFrame {\r\n    private static final String RESTAURANTE_CARD = \"RESTAURANTE\";\r\n    private static final String CLIENTE_CARD = \"CLIENTE\";\r\n    private static final String LOGIN_CARD = \"LOGIN\";\r\n    private static final String MENUCLIENTE_CARD = \"MENU CLIENTE\";\r\n    private static final String MENURESTAURANTE_CARD = \"MENU RESTAURANTE\";\r\n    private static final String MRESTADICIONARPRATO_CARD = \"ADICIONAR PRATO\";\r\n    private static final String MRESTATUALIZARPRATO_CARD = \"ATUALIZAR PRATO\";\r\n    private static final String MRESTATUALIZARDADOS_CARD = \"ATUALIZAR DADOS\";\r\n    private static final String MRESTRESERVSUPERPANEL_CARD = \"RESERVAS\";\r\n    private static final int LARGURA_LOGIN = 400;\r\n    private static final int ALTURA_LOGIN = 180;\r\n    private static final int LARGURA_PADRAO = 500;\r\n    private static final int ALTURA_PADRAO = 300;\r\n\r\n\r\n    public Interface() {\r\n        ImageIcon logo = new ImageIcon(\"logo3.png\");\r\n        this.setIconImage(logo.getImage());\r\n        this.setTitle(\"RESERVAS DE RESTAURANTES\");\r\n        this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n        this.setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        Container contentor = this.getContentPane();\r\n        contentor.setLayout(new CardLayout());\r\n\r\n        /////// SUPERPAINEIS////////\r\n        JPanel loginSuperPanel = new JPanel();\r\n        loginSuperPanel.setLayout(new BorderLayout());\r\n        JPanel registarNovoClienteSuperPanel = new JPanel();\r\n        registarNovoClienteSuperPanel.setLayout(new BorderLayout());\r\n        JPanel registarNovoRestSuperPanel = new JPanel();\r\n        registarNovoRestSuperPanel.setLayout(new BorderLayout());\r\n        JPanel menuClienteSuperPanel = new JPanel();\r\n        menuClienteSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestSuperPanel = new JPanel();\r\n        mRestSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestAdPratoSuperPanel = new JPanel();\r\n        mRestAdPratoSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestAtPratoDiaSuperPanel = new JPanel();\r\n        mRestAtPratoDiaSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestAtDadosSuperPanel = new JPanel();\r\n        mRestAtDadosSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestReservasSuperPanel = new JPanel();\r\n        mRestReservasSuperPanel.setLayout(new BorderLayout());\r\n\r\n        construirPanelLogin(this, contentor, loginSuperPanel);\r\n\r\n        construirPanelCliente(this, contentor, loginSuperPanel, registarNovoClienteSuperPanel);\r\n\r\n        construirPanelRestaurante(this, contentor, loginSuperPanel, registarNovoRestSuperPanel);\r\n\r\n        construirPanelMenuCliente(this, contentor, loginSuperPanel, menuClienteSuperPanel);\r\n\r\n        ////PROBLEMA - não aceita this\r\n        construirPanelMRest(contentor, loginSuperPanel, mRestSuperPanel);\r\n\r\n        construirPanelMRestAdPrato(this, contentor, loginSuperPanel, mRestAdPratoSuperPanel);\r\n\r\n        construirPanelMRestAtPratoDia(this, contentor, loginSuperPanel, mRestAtPratoDiaSuperPanel);\r\n\r\n        construirPanelMRestAtDados (this, contentor, loginSuperPanel, mRestAtDadosSuperPanel);\r\n\r\n        construirPanelMRestReservas (this, contentor, loginSuperPanel, mRestReservasSuperPanel);\r\n\r\n        contentor.add(loginSuperPanel, LOGIN_CARD);\r\n        contentor.add(registarNovoClienteSuperPanel, CLIENTE_CARD);\r\n        contentor.add(registarNovoRestSuperPanel, RESTAURANTE_CARD);\r\n        contentor.add(menuClienteSuperPanel, MENUCLIENTE_CARD);\r\n        contentor.add(mRestSuperPanel, MENURESTAURANTE_CARD);\r\n        contentor.add(mRestAdPratoSuperPanel, MRESTADICIONARPRATO_CARD);\r\n        contentor.add(mRestAtPratoDiaSuperPanel, MRESTATUALIZARPRATO_CARD);\r\n        contentor.add(mRestAtDadosSuperPanel, MRESTATUALIZARDADOS_CARD);\r\n        contentor.add(mRestReservasSuperPanel, MRESTRESERVSUPERPANEL_CARD);\r\n\r\n\r\n    }\r\n\r\n\r\n    private void construirPanelLogin(Interface janela, Container contentor, JPanel loginSuperPanel) {\r\n        ////Criação dos subpaineis norte, centro e sul\r\n        JPanel norteLoginSubPanel = new JPanel();\r\n        JPanel centroLoginSubPanel = new JPanel();\r\n        JPanel sulLoginSubPanel = new JPanel();\r\n\r\n        JButton ptEnLoginButton = new JButton(\"PT/EN\");\r\n        ptEnLoginButton.setSize(15, 5);\r\n        JButton loginButton = new JButton(LOGIN_CARD);\r\n        loginButton.setSize(15, 5);\r\n        JButton clienteNovoButton = new JLinkButton(\"Novo Cliente\");\r\n        JButton restauranteNovoButton = new JLinkButton(\"Novo Restaurante\");\r\n\r\n        JLabel titleLoginLabel = new JLabel(\"LOGIN\");\r\n        JLabel usernameLoginLabel = new JLabel(\"Username:\");\r\n        JLabel passwordLoginLabel = new JLabel(\"Password:\");\r\n\r\n        JTextField usernameLoginText = new JTextField(20);\r\n\r\n        JPasswordField passwordLoginField = new JPasswordField(20);\r\n\r\n///Layout dos subPaineis north, centro e south\r\n        norteLoginSubPanel.setLayout(new BorderLayout());\r\n        centroLoginSubPanel.setLayout(new BorderLayout());\r\n        sulLoginSubPanel.setLayout(new BorderLayout());\r\n\r\n//Adicionar subPaineis no superpainel Login\r\n        loginSuperPanel.add(norteLoginSubPanel, BorderLayout.NORTH);\r\n        loginSuperPanel.add(centroLoginSubPanel, BorderLayout.CENTER);\r\n        loginSuperPanel.add(sulLoginSubPanel, BorderLayout.SOUTH);\r\n\r\n/// Criação dos subpaineis nos subpaineis norte, centro e sul\r\n        JPanel norteLoginSSPanelTitle = new JPanel();\r\n        JPanel centroLoginSSPanelForm = new JPanel();\r\n        JPanel centroLoginSSPanelButton = new JPanel();\r\n        JPanel sulLoginSSPanelLinks = new JPanel();\r\n\r\n//Layout dos subpaineis dos subpaineis norte, centro e sul\r\n        norteLoginSubPanel.add(norteLoginSSPanelTitle, BorderLayout.CENTER);\r\n        norteLoginSubPanel.add(ptEnLoginButton, BorderLayout.EAST);\r\n        norteLoginSSPanelTitle.setLayout(new FlowLayout());\r\n        norteLoginSSPanelTitle.add(titleLoginLabel);\r\n\r\n        centroLoginSubPanel.add(centroLoginSSPanelForm, BorderLayout.NORTH);\r\n        centroLoginSSPanelForm.setLayout(new GridLayout(2, 2));\r\n        centroLoginSSPanelForm.add(usernameLoginLabel);\r\n        centroLoginSSPanelForm.add(usernameLoginText);\r\n        centroLoginSSPanelForm.add(passwordLoginLabel);\r\n        centroLoginSSPanelForm.add(passwordLoginField);\r\n        centroLoginSubPanel.add(centroLoginSSPanelButton, BorderLayout.SOUTH);\r\n        centroLoginSSPanelButton.setLayout(new FlowLayout());\r\n        centroLoginSSPanelButton.add(loginButton);\r\n\r\n        sulLoginSubPanel.add(sulLoginSSPanelLinks);\r\n        sulLoginSSPanelLinks.setLayout(new BorderLayout());\r\n        sulLoginSSPanelLinks.add(clienteNovoButton, BorderLayout.EAST);\r\n        sulLoginSSPanelLinks.add(restauranteNovoButton, BorderLayout.WEST);\r\n\r\n\r\n        clienteNovoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, CLIENTE_CARD);\r\n            janela.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos\r\n            // no actionlistener)\r\n        });\r\n\r\n        restauranteNovoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, RESTAURANTE_CARD);\r\n            janela.setSize(LARGURA_PADRAO, 350);\r\n            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos\r\n            // no actionlistener)\r\n        });\r\n    }\r\n    ////////////////////NOVO CLIENTE/////////////////////////\r\n    private void construirPanelCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoClienteSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteNovoClienteSubPanel = new JPanel();\r\n        norteNovoClienteSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroNovoClienteSubPanel = new JPanel();\r\n        JPanel sulNovoClienteSubPanel = new JPanel();\r\n\r\n        JLabel registarNovoClienteLabel = new JLabel(\"NOVO CLIENTE\");\r\n        JLabel nomeClienteLabel = new JLabel(\"Nome\");\r\n        JLabel emailClienteLabel = new JLabel(\"E-mail\");\r\n        JLabel moradaClienteLabel = new JLabel(\"Morada\");\r\n        JLabel telemovelClienteLabel = new JLabel(\"Telemóvel\");\r\n        JLabel usernameClienteLabel = new JLabel(\"Username\");\r\n        JLabel passwordClienteLabel = new JLabel(\"Password: \");\r\n        JLabel confirmarPasswordClienteLabel = new JLabel(\"Confirmar password: \");\r\n\r\n        JTextField nomeClienteText = new JTextField(20);\r\n        JTextField emailClienteText = new JTextField(20);\r\n        JTextField moradaClienteText = new JTextField(20);\r\n        JTextField telemovelClienteText = new JTextField(20);\r\n        JTextField usernameClienteText = new JTextField(20);\r\n\r\n        JPasswordField passwordClienteField = new JPasswordField(20);\r\n        JPasswordField confirmarPassawordClienteField = new JPasswordField(20);\r\n\r\n        JButton ptEnNovoClienteButton = new JButton(\"PT/EN\");\r\n        JButton cancelarClienteButton = new JButton(\"CANCELAR\");\r\n        JButton registarClienteButton = new JButton(\"REGISTAR\");\r\n\r\n\r\n        registarNovoClienteSuperPanel.add(norteNovoClienteSubPanel, \"North\");\r\n        registarNovoClienteSuperPanel.add(centroNovoClienteSubPanel, \"Center\");\r\n        registarNovoClienteSuperPanel.add(sulNovoClienteSubPanel, \"South\");\r\n\r\n        JPanel norteNovoClienteSSPanel = new JPanel();\r\n        norteNovoClienteSSPanel.setLayout(new FlowLayout());\r\n        norteNovoClienteSSPanel.add(registarNovoClienteLabel);\r\n        norteNovoClienteSubPanel.add(norteNovoClienteSSPanel, BorderLayout.CENTER);\r\n        norteNovoClienteSubPanel.add(ptEnNovoClienteButton, BorderLayout.EAST);\r\n\r\n        JPanel centroNovoClienteSSPanelForm = new JPanel();\r\n        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));\r\n        centroNovoClienteSubPanel.add(centroNovoClienteSSPanelForm);\r\n        centroNovoClienteSSPanelForm.add(nomeClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(nomeClienteText);\r\n        centroNovoClienteSSPanelForm.add(emailClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(emailClienteText);\r\n        centroNovoClienteSSPanelForm.add(moradaClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(moradaClienteText);\r\n        centroNovoClienteSSPanelForm.add(telemovelClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(telemovelClienteText);\r\n        centroNovoClienteSSPanelForm.add(usernameClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(usernameClienteText);\r\n        centroNovoClienteSSPanelForm.add(passwordClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(passwordClienteField);\r\n        centroNovoClienteSSPanelForm.add(confirmarPasswordClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(confirmarPassawordClienteField);\r\n\r\n        sulNovoClienteSubPanel.setLayout(new FlowLayout());\r\n        sulNovoClienteSubPanel.add(cancelarClienteButton);\r\n        sulNovoClienteSubPanel.add(registarClienteButton);\r\n\r\n\r\n        registarClienteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n        cancelarClienteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n\r\n        });\r\n    }\r\n\r\n    ////// MENU CLIENTE//////////\r\n    private void construirPanelMenuCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel menuClienteSuperPanel) {\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMenuClienteSubPanel = new JPanel();\r\n        norteMenuClienteSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMenuClienteSubPanel = new JPanel();\r\n        JPanel sulMenuClienteSubPanel = new JPanel();\r\n\r\n        JLabel registarNovoClienteLabel = new JLabel(\"MENU CLIENTE\");\r\n\r\n        JButton ptEnMenuClienteButton = new JButton(\"PT/EN\");\r\n        ////\r\n        JButton consultarRest = new JButton(\"CONSULTAR RESTAURANTES\");\r\n        JButton comentarios = new JButton(\"COMENTÁRIOS\");\r\n        JButton histResComPon = new JButton(\"HISTÓRICO DE RESERVAS/COMENTAR E PONTUAR\");\r\n        JButton fazerReservas = new JButton(\"FAZER RESERVAS\");\r\n        JButton cancelarReserva = new JButton(\"CANCELAR RESERVA\");\r\n        JButton atualDados = new JButton(\"ATUALIZAR DADOS\");\r\n\r\n        ///\r\n        //JButton cancelarMenuClienteButton = new JButton(\"CANCELAR\");\r\n        JButton sairMenuClienteButton = new JButton(\"SAIR\");\r\n\r\n        menuClienteSuperPanel.add(norteMenuClienteSubPanel, \"North\");\r\n        menuClienteSuperPanel.add(centroMenuClienteSubPanel, \"Center\");\r\n        menuClienteSuperPanel.add(sulMenuClienteSubPanel, \"South\");\r\n\r\n        JPanel norteClienteSubPanel = new JPanel();\r\n        norteClienteSubPanel.setLayout(new FlowLayout());\r\n        norteClienteSubPanel.add(registarNovoClienteLabel);\r\n        norteMenuClienteSubPanel.add(norteClienteSubPanel, BorderLayout.CENTER);\r\n        norteMenuClienteSubPanel.add(ptEnMenuClienteButton, BorderLayout.EAST);\r\n\r\n        JPanel centroNovoClienteSSPanelForm = new JPanel();\r\n        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 1));\r\n        centroMenuClienteSubPanel.add(centroNovoClienteSSPanelForm);\r\n        centroNovoClienteSSPanelForm.add(consultarRest);\r\n        centroNovoClienteSSPanelForm.add(comentarios);\r\n        centroNovoClienteSSPanelForm.add(histResComPon);\r\n        centroNovoClienteSSPanelForm.add(fazerReservas);\r\n        centroNovoClienteSSPanelForm.add(cancelarReserva);\r\n        centroNovoClienteSSPanelForm.add(atualDados);\r\n\r\n\r\n        sulMenuClienteSubPanel.setLayout(new FlowLayout());\r\n        //sulMenuClienteSubPanel.add(cancelarMenuClienteButton);\r\n        sulMenuClienteSubPanel.add(sairMenuClienteButton);\r\n\r\n//        cancelarMenuClienteButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, CLIENTE_CARD);\r\n//            this.setSize(500, 300);\r\n//\r\n//        });\r\n\r\n        sairMenuClienteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(400, 180);\r\n\r\n        });\r\n\r\n    }\r\n    ////////////////////NOVO RESTAURANTE/////////////////////////\r\n    private void construirPanelRestaurante(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoRestauranteSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteNovoRestauranteSubPanel = new JPanel();\r\n        norteNovoRestauranteSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroNovoRestauranteSubPanel = new JPanel();\r\n        centroNovoRestauranteSubPanel.setLayout(new FlowLayout());\r\n        JPanel sulNovoRestauranteSubPanel = new JPanel();\r\n\r\n        JLabel registarNovoRestauranteLabel = new JLabel(\"NOVO RESTAURANTE\");\r\n        JLabel nomeRestauranteLabel = new JLabel(\"Nome\");\r\n        JLabel emailRestauranteLabel = new JLabel(\"E-mail\");\r\n        JLabel moradaRestauranteLabel = new JLabel(\"Morada\");\r\n        JLabel telemovelRestauranteLabel = new JLabel(\"Telemóvel\");\r\n///////////////////////\r\n        JLabel lotacaoRestauranteLabel = new JLabel(\"Lotação:\");\r\n        JLabel esplanadaRestauranteLabel = new JLabel(\"Esplanada\");\r\n        JLabel zonaInteriorLabel = new JLabel(\"Zona Interior:\");\r\n        JLabel zonaInteriorNFumRestauranteLabel = new JLabel(\"Ñ Fumadores\");\r\n        JLabel zonaInteriorFumRestauranteLabel = new JLabel(\"Fumadores\");\r\n        JLabel horariosRestauranteLabel = new JLabel(\"Horários:\");\r\n        JLabel horariosAlmocoRestauranteLabel = new JLabel(\"Almoço:\");\r\n        JLabel horarioAlmocoInicioRestauranteLabel = new JLabel(\"Início\");\r\n        JLabel horarioAlmocoFimRestauranteLabel = new JLabel(\"Fim\");\r\n        JLabel horariosJantarRestauranteLabel = new JLabel(\"Jantar:\");\r\n        JLabel horarioJantarInicioRestauranteLabel = new JLabel(\"Início\");\r\n        JLabel horarioJantarFimRestauranteLabel = new JLabel(\"Fim\");\r\n//////////////////////////////////\r\n\r\n\r\n        JLabel usernameRestauranteLabel = new JLabel(\"Username\");\r\n        JLabel passwordRestauranteLabel = new JLabel(\"Password \");\r\n        JLabel confirmarPasswordRestauranteLabel = new JLabel(\"Confirmar password \");\r\n\r\n        JTextField nomeRestauranteText = new JTextField(18);\r\n        nomeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField emailRestauranteText = new JTextField(18);\r\n        emailRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField moradaRestauranteText = new JTextField(15);\r\n        moradaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField telemovelRestauranteText = new JTextField(5);\r\n        telemovelRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        ////////\r\n        JTextField esplanadaRestauranteText = new JTextField(3);\r\n        esplanadaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField zonaInteriorNFumRestauranteText = new JTextField(3);\r\n        zonaInteriorNFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField zonaInteriorFumRestauranteText = new JTextField(3);\r\n        zonaInteriorFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioAlmocoInicioRestauranteText = new JTextField(3);\r\n        horarioAlmocoInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioAlmocoFimRestauranteText = new JTextField(3);\r\n        horarioAlmocoFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioJantarInicioRestauranteText = new JTextField(3);\r\n        horarioJantarInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioJantarFimRestauranteText = new JTextField(3);\r\n        horarioJantarFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        ///////\r\n        JTextField usernameRestauranteText = new JTextField(20);\r\n        usernameRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        JPasswordField passwordRestauranteField = new JPasswordField(15);\r\n        passwordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JPasswordField confirmarPasswordRestauranteField = new JPasswordField(15);\r\n        confirmarPasswordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        JButton ptEnNovoRestauranteButton = new JButton(\"PT/EN\");\r\n        JButton cancelarRestauranteButton = new JButton(\"CANCELAR\");\r\n        JButton registarRestauranteButton = new JButton(\"REGISTAR\");\r\n\r\n        registarNovoRestauranteSuperPanel.add(norteNovoRestauranteSubPanel, \"North\");\r\n        registarNovoRestauranteSuperPanel.add(centroNovoRestauranteSubPanel, \"Center\");\r\n        registarNovoRestauranteSuperPanel.add(sulNovoRestauranteSubPanel, \"South\");\r\n\r\n//        JPanel norteSupMRestSubPanel = new JPanel();\r\n//        norteSupMRestSubPanel.setLayout(new FlowLayout());\r\n//        norteNovoRestauranteSubPanel.add(norteSupMRestSubPanel, BorderLayout.CENTER);\r\n//        norteSupMRestSubPanel.add(registarNovoRestauranteLabel);\r\n//        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);\r\n\r\n        JPanel norteNovoRestSSPanel = new JPanel();\r\n        norteNovoRestSSPanel.setLayout(new FlowLayout());\r\n        norteNovoRestSSPanel.add(registarNovoRestauranteLabel);\r\n        norteNovoRestauranteSubPanel.add(norteNovoRestSSPanel, BorderLayout.CENTER);\r\n        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);\r\n\r\n        JPanel centroNovoRestSSPanelForm1 = new JPanel();\r\n        centroNovoRestSSPanelForm1.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm1);\r\n        JPanel centroNovoRestSSPanelForm2 = new JPanel();\r\n        centroNovoRestSSPanelForm2.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2, BorderLayout.CENTER);\r\n        JPanel centroNovoRestSSPanelForm3 = new JPanel();\r\n        //centroNovoRestSSPanelForm3.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm3, BorderLayout.CENTER);\r\n\r\n        JPanel centroNovoRestSSPanelForm4 = new JPanel();\r\n        centroNovoRestSSPanelForm4.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm4, BorderLayout.CENTER);\r\n\r\n        JPanel centroNovoRestSSPanelForm5 = new JPanel();\r\n        centroNovoRestSSPanelForm5.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm5, BorderLayout.CENTER);\r\n\r\n        JPanel centroNovoRestSSPanelForm6 = new JPanel();\r\n        centroNovoRestSSPanelForm6.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm6, BorderLayout.CENTER);\r\n\r\n        centroNovoRestSSPanelForm1.add(nomeRestauranteLabel);\r\n        centroNovoRestSSPanelForm1.add(nomeRestauranteText);\r\n        centroNovoRestSSPanelForm1.add(emailRestauranteLabel);\r\n        centroNovoRestSSPanelForm1.add(emailRestauranteText);\r\n        centroNovoRestSSPanelForm2.add(moradaRestauranteLabel);\r\n        centroNovoRestSSPanelForm2.add(moradaRestauranteText);\r\n        centroNovoRestSSPanelForm2.add(telemovelRestauranteLabel);\r\n        centroNovoRestSSPanelForm2.add(telemovelRestauranteText);\r\n        /////\r\n        centroNovoRestSSPanelForm3.add(lotacaoRestauranteLabel);\r\n        centroNovoRestSSPanelForm3.add(esplanadaRestauranteLabel);\r\n        centroNovoRestSSPanelForm3.add(esplanadaRestauranteText);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorLabel);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteLabel);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteText);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteLabel);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteText);\r\n\r\n        centroNovoRestSSPanelForm4.add(horariosRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horariosAlmocoRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteText);\r\n        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteText);\r\n        centroNovoRestSSPanelForm4.add(horariosJantarRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteText);\r\n        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteText);\r\n\r\n        //\r\n        centroNovoRestSSPanelForm5.add(usernameRestauranteLabel);\r\n        centroNovoRestSSPanelForm5.add(usernameRestauranteText);\r\n\r\n        centroNovoRestSSPanelForm6.add(passwordRestauranteLabel);\r\n        centroNovoRestSSPanelForm6.add(passwordRestauranteField);\r\n        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteLabel);\r\n        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteField);\r\n\r\n\r\n        sulNovoRestauranteSubPanel.setLayout(new FlowLayout());\r\n        sulNovoRestauranteSubPanel.add(cancelarRestauranteButton);\r\n        sulNovoRestauranteSubPanel.add(registarRestauranteButton);\r\n\r\n        cancelarRestauranteButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n\r\n        registarRestauranteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(500, 300);\r\n\r\n        });\r\n    }\r\n\r\n    //////MENU RESTAURANTE////////\r\n    private void construirPanelMRest(Container contentor, JPanel loginSuperPanel, JPanel menuRestauranteSuperPanel) {\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMenuRestauranteSubPanel = new JPanel();\r\n        norteMenuRestauranteSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMenuRestauranteSubPanel = new JPanel();\r\n        JPanel sulMenuRestauranteSubPanel = new JPanel();\r\n\r\n        JLabel registarNovoRestauranteLabel = new JLabel(\"MENU RESTAURANTE\");\r\n\r\n        JButton ptEnMenuRestauranteButton = new JButton(\"PT/EN\");\r\n        ////\r\n        JButton mRestAdicionarPratoButton = new JButton(\"ADICIONAR PRATO\");\r\n        JButton mRestAtualizarPratoDiaButton = new JButton(\"ATUALIZAR PRATO DO DIA\");\r\n        JButton mRestAtualizarDadosButton = new JButton(\"ATUALIZAR DADOS\");\r\n        JButton mRestReservasButton = new JButton(\"RESERVAS\");\r\n        JButton consultarComentarios = new JButton(\"CONSULTAR COMENTÁRIOS\");\r\n        JButton responderComentarios = new JButton(\"RESPONDER COMENTÁRIOS\");\r\n        JButton pontuacaoMedia = new JButton(\"PONTUAÇÃO MÉDIA\");\r\n\r\n\r\n        ///\r\n        //JButton cancelarMenuRestauranteButton = new JButton(\"CANCELAR\");\r\n        JButton sairMenuRestauranteButton = new JButton(\"SAIR\");\r\n\r\n        menuRestauranteSuperPanel.add(norteMenuRestauranteSubPanel, \"North\");\r\n        menuRestauranteSuperPanel.add(centroMenuRestauranteSubPanel, \"Center\");\r\n        menuRestauranteSuperPanel.add(sulMenuRestauranteSubPanel, \"South\");\r\n\r\n        JPanel norteMenuRestauranteSSPanel = new JPanel();\r\n        norteMenuRestauranteSSPanel.setLayout(new FlowLayout());\r\n        norteMenuRestauranteSSPanel.add(registarNovoRestauranteLabel);\r\n        norteMenuRestauranteSubPanel.add(norteMenuRestauranteSSPanel, BorderLayout.CENTER);\r\n        norteMenuRestauranteSubPanel.add(ptEnMenuRestauranteButton, BorderLayout.EAST);\r\n\r\n        JPanel centroNovoRestauranteSSPanelForm = new JPanel();\r\n        centroNovoRestauranteSSPanelForm.setLayout(new GridLayout(7, 1));\r\n        centroMenuRestauranteSubPanel.add(centroNovoRestauranteSSPanelForm);\r\n        centroNovoRestauranteSSPanelForm.add(mRestAdicionarPratoButton);\r\n        centroNovoRestauranteSSPanelForm.add(mRestAtualizarPratoDiaButton);\r\n        centroNovoRestauranteSSPanelForm.add(mRestAtualizarDadosButton);\r\n        centroNovoRestauranteSSPanelForm.add(mRestReservasButton);\r\n        centroNovoRestauranteSSPanelForm.add(consultarComentarios);\r\n        centroNovoRestauranteSSPanelForm.add(responderComentarios);\r\n        centroNovoRestauranteSSPanelForm.add(pontuacaoMedia);\r\n\r\n        sulMenuRestauranteSubPanel.setLayout(new FlowLayout());\r\n        //sulMenuRestauranteSubPanel.add(cancelarMenuRestauranteButton);\r\n        sulMenuRestauranteSubPanel.add(sairMenuRestauranteButton);\r\n\r\n//        cancelarMenuRestauranteButton.addActionListener(a -> {\r\n//           CardLayout cl = (CardLayout) contentor.getLayout();\r\n//           cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(500, 300);\r\n//\r\n//       });\r\n        mRestAdicionarPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MRESTADICIONARPRATO_CARD);\r\n            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n\r\n        });\r\n\r\n        mRestAtualizarPratoDiaButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MRESTATUALIZARPRATO_CARD);\r\n            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n\r\n        });\r\n\r\n        mRestReservasButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MRESTRESERVSUPERPANEL_CARD);\r\n            this.setSize(LARGURA_PADRAO, 350);\r\n\r\n        });\r\n\r\n        mRestAtualizarDadosButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MRESTATUALIZARDADOS_CARD);\r\n            this.setSize(LARGURA_PADRAO, 350);\r\n\r\n\r\n\r\n\r\n        });\r\n\r\n\r\n        sairMenuRestauranteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, RESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n    }\r\n\r\n    ///////////MENU RESTAURANTE - ADICIONAR PRATO//////////////////////\r\n    private void construirPanelMRestAdPrato(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAdPratoSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteAdPratoSubPanel = new JPanel();\r\n        norteAdPratoSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroAdPratoSubPanel = new JPanel();\r\n        JPanel sulAdPratoSubPanel = new JPanel();\r\n\r\n        JLabel adPratoLabel = new JLabel(\"ADICIONAR PRATO\");\r\n        JLabel nomePratoLabel = new JLabel(\"Nome Prato\");\r\n        JLabel descricaoPratoLabel = new JLabel(\"Descrição\");\r\n        JLabel precoPratoLabel = new JLabel(\"Preço\");\r\n\r\n        JTextField nomePratoText = new JTextField(20);\r\n        JTextField descricaoPratoText = new JTextField(20);\r\n        JTextField precoPratoText = new JTextField(10);\r\n\r\n\r\n        JButton ptEnAdPratoButton = new JButton(\"PT/EN\");\r\n        JButton voltarMenuRestAdPratoButton = new JButton(\"MENU RESTAURANTE\");\r\n        JButton confirmarAdPratoButton = new JButton(\"CONFIRMAR\");\r\n\r\n\r\n        JComboBox tipoPratoAd = new JComboBox();\r\n        tipoPratoAd.addItem(\"Carta\");\r\n        tipoPratoAd.addItem(\"Prato do dia\");\r\n\r\n\r\n        mRestAdPratoSuperPanel.add(norteAdPratoSubPanel, \"North\");\r\n        mRestAdPratoSuperPanel.add(centroAdPratoSubPanel, \"Center\");\r\n        mRestAdPratoSuperPanel.add(sulAdPratoSubPanel, \"South\");\r\n\r\n        JPanel norteAdPratoSSPanel = new JPanel();\r\n        norteAdPratoSSPanel.setLayout(new FlowLayout());\r\n        norteAdPratoSSPanel.add(adPratoLabel);\r\n        norteAdPratoSubPanel.add(norteAdPratoSSPanel, BorderLayout.CENTER);\r\n        norteAdPratoSubPanel.add(ptEnAdPratoButton, BorderLayout.EAST);\r\n\r\n        JPanel centroAdPratoSSPanelForm = new JPanel();\r\n        centroAdPratoSSPanelForm.setLayout(new GridLayout(5, 2));\r\n        centroAdPratoSubPanel.add(centroAdPratoSSPanelForm);\r\n        centroAdPratoSubPanel.add(tipoPratoAd);\r\n        centroAdPratoSSPanelForm.add(nomePratoLabel);\r\n        centroAdPratoSSPanelForm.add(nomePratoText);\r\n        centroAdPratoSSPanelForm.add(descricaoPratoLabel);\r\n        centroAdPratoSSPanelForm.add(descricaoPratoText);\r\n        centroAdPratoSSPanelForm.add(precoPratoLabel);\r\n        centroAdPratoSSPanelForm.add(precoPratoText);\r\n\r\n        sulAdPratoSubPanel.setLayout(new FlowLayout());\r\n        sulAdPratoSubPanel.add(voltarMenuRestAdPratoButton);\r\n        sulAdPratoSubPanel.add(confirmarAdPratoButton);\r\n\r\n\r\n        voltarMenuRestAdPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n        confirmarAdPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    /////////MENU RESTAURANTE – ATUALIZAR PRATO//////////////////////\r\n    private void construirPanelMRestAtPratoDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtPratoSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteAtPratoSubPanel = new JPanel();\r\n        norteAtPratoSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroAtPratoSubPanel = new JPanel();\r\n        JPanel sulAtPratoSubPanel = new JPanel();\r\n\r\n        JLabel atPratoLabel = new JLabel(\"ATUALIZAR PRATO DO DIA\");\r\n        JLabel atNomePratoLabel = new JLabel(\"Nome Prato\");\r\n        JLabel atDescricaoPratoLabel = new JLabel(\"Descrição\");\r\n        JLabel atPrecoPratoLabel = new JLabel(\"Preço\");\r\n\r\n        JTextField atNomePratoText = new JTextField(20);\r\n        JTextField atDescricaoPratoText = new JTextField(20);\r\n        JTextField atPrecoPratoText = new JTextField(10);\r\n\r\n        JButton ptEnAtPratoButton = new JButton(\"PT/EN\");\r\n        JButton voltarMenuRestAtPratoButton = new JButton(\"MENU RESTAURANTE\");\r\n        JButton confirmarAtPratoButton = new JButton(\"CONFIRMAR\");\r\n\r\n        mRestAtPratoSuperPanel.add(norteAtPratoSubPanel, \"North\");\r\n        mRestAtPratoSuperPanel.add(centroAtPratoSubPanel, \"Center\");\r\n        mRestAtPratoSuperPanel.add(sulAtPratoSubPanel, \"South\");\r\n\r\n        JPanel norteAtPratoSSPanel = new JPanel();\r\n        norteAtPratoSSPanel.setLayout(new FlowLayout());\r\n        norteAtPratoSSPanel.add(atPratoLabel);\r\n        norteAtPratoSubPanel.add(norteAtPratoSSPanel, BorderLayout.CENTER);\r\n        norteAtPratoSubPanel.add(ptEnAtPratoButton, BorderLayout.EAST);\r\n\r\n        JPanel centroAtPratoSSPanelForm = new JPanel();\r\n        centroAtPratoSSPanelForm.setLayout(new GridLayout(3, 2));\r\n        centroAtPratoSubPanel.add(centroAtPratoSSPanelForm);\r\n        //centroAtPratoSSPanelForm.add(atPratoLabel);\r\n        centroAtPratoSSPanelForm.add(atNomePratoLabel);\r\n        centroAtPratoSSPanelForm.add(atNomePratoText);\r\n        centroAtPratoSSPanelForm.add(atDescricaoPratoLabel);\r\n        centroAtPratoSSPanelForm.add(atDescricaoPratoText);\r\n        centroAtPratoSSPanelForm.add(atPrecoPratoLabel);\r\n        centroAtPratoSSPanelForm.add(atPrecoPratoText);\r\n\r\n        sulAtPratoSubPanel.setLayout(new FlowLayout());\r\n        sulAtPratoSubPanel.add(voltarMenuRestAtPratoButton);\r\n        sulAtPratoSubPanel.add(confirmarAtPratoButton);\r\n\r\n\r\n        voltarMenuRestAtPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n        confirmarAtPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n    }\r\n\r\n    ///////////////////MENU RESTAURANTE - ATUALIZAR DADOS /////////////////////////\r\n    private void construirPanelMRestAtDados (Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtDadosSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMRestAtDadosSubPanel = new JPanel();\r\n        norteMRestAtDadosSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMRestAtDadosSubPanel = new JPanel();\r\n        JPanel sulMRestAtDadosSubPanel = new JPanel();\r\n\r\n        JLabel atDadosRestLabel = new JLabel(\"ATUALIZAR DADOS\");\r\n        JLabel nomeAtDadosRestLabel = new JLabel(\"Nome\");\r\n        JLabel emailAtDadosRestLabel = new JLabel(\"E-mail\");\r\n        JLabel moradaAtDadosRestLabel = new JLabel(\"Morada\");\r\n        JLabel telemovelAtDadosRestLabel = new JLabel(\"Telemóvel\");\r\n///////////////////////\r\n        JLabel lotacaoAtDadosRestLabel = new JLabel(\"Lotação:\");\r\n        JLabel esplanadaAtDadosRestLabel = new JLabel(\"Esplanada\");\r\n        JLabel zonaInteriorAtDadosRestLabel = new JLabel(\"Zona Interior:\");\r\n        JLabel zonaInteriorNFumAtDadosRestLabel = new JLabel(\"Ñ Fumadores\");\r\n        JLabel zonaInteriorFumAtDadosRestLabel = new JLabel(\"Fumadores\");\r\n        JLabel horariosAtDadosRestLabel = new JLabel(\"Horários:\");\r\n        JLabel horariosAlmocoAtDadosRestLabel = new JLabel(\"Almoço:\");\r\n        JLabel horarioAlmocoInicioAtDadosRestLabel = new JLabel(\"Início\");\r\n        JLabel horarioAlmocoFimAtDadosRestLabel = new JLabel(\"Fim\");\r\n        JLabel horariosJantarAtDadosRestLabel = new JLabel(\"Jantar:\");\r\n        JLabel horarioJantarInicioAtDadosRestLabel = new JLabel(\"Início\");\r\n        JLabel horarioJantarFimAtDadosRestLabel = new JLabel(\"Fim\");\r\n        JLabel usernameAtDadosRestLabel = new JLabel(\"Username\");\r\n        JLabel passwordAtDadosRestLabel = new JLabel(\"Password: \");\r\n        JLabel confirmarPasswordAtDadosRestLabel = new JLabel(\"Confirmar password: \");\r\n\r\n        JTextField nomeAtDadosRestText = new JTextField(18);\r\n        nomeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField emailAtDadosRestText = new JTextField(18);\r\n        emailAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField moradaAtDadosRestText = new JTextField(15);\r\n        moradaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField telemovelAtDadosRestText = new JTextField(5);\r\n        telemovelAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        //JTextField lotacaoAtDadosRestText = new JTextField(5);\r\n        JTextField esplanadaAtDadosRestText = new JTextField(3);\r\n        esplanadaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField zonaInteriorNFumAtDadosRestText = new JTextField(3);\r\n        zonaInteriorNFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField zonaInteriorFumAtDadosRestText = new JTextField(3);\r\n        zonaInteriorFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioAlmocoInicioAtDadosRestText = new JTextField(3);\r\n        horarioAlmocoInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioAlmocoFimAtDadosRestText = new JTextField(3);\r\n        horarioAlmocoFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioJantarInicioAtDadosRestText = new JTextField(3);\r\n        horarioJantarInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioJantarFimAtDadosRestText = new JTextField(3);\r\n        horarioJantarFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        ///////\r\n        JTextField usernameAtDadosRestText = new JTextField(20);\r\n        usernameAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        JPasswordField passwordAtDadosRestField = new JPasswordField(15);\r\n        passwordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JPasswordField confirmarPasswordAtDadosRestField = new JPasswordField(15);\r\n        confirmarPasswordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        JButton ptEnAtDadosRestButton = new JButton(\"PT/EN\");\r\n        JButton voltarMenuRestAtDadosRestButton = new JButton(\"MENU RESTAURANTE\");\r\n        JButton atDadosRestButton = new JButton(\"ATUALIZAR\");\r\n\r\n        mRestAtDadosSuperPanel.add(norteMRestAtDadosSubPanel, \"North\");\r\n        mRestAtDadosSuperPanel.add(centroMRestAtDadosSubPanel, \"Center\");\r\n        mRestAtDadosSuperPanel.add(sulMRestAtDadosSubPanel, \"South\");\r\n\r\n        JPanel norteAtDadosRestSSPanel = new JPanel();\r\n        norteAtDadosRestSSPanel.setLayout(new FlowLayout());\r\n        norteAtDadosRestSSPanel.add(atDadosRestLabel);\r\n        norteMRestAtDadosSubPanel.add(norteAtDadosRestSSPanel, BorderLayout.CENTER);\r\n        norteMRestAtDadosSubPanel.add(ptEnAtDadosRestButton, BorderLayout.EAST);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm1 = new JPanel();\r\n        centroAtDadosRestSSPanelForm1.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm1);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm2 = new JPanel();\r\n        centroAtDadosRestSSPanelForm2.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2, BorderLayout.CENTER);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm3 = new JPanel();\r\n        //centroAtDadosRestSSPanelForm3.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm3, BorderLayout.CENTER);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm4 = new JPanel();\r\n        centroAtDadosRestSSPanelForm4.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm4, BorderLayout.CENTER);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm5 = new JPanel();\r\n        centroAtDadosRestSSPanelForm5.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm5, BorderLayout.CENTER);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm6 = new JPanel();\r\n        centroAtDadosRestSSPanelForm6.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm6, BorderLayout.CENTER);\r\n\r\n        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestText);\r\n\r\n        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm2.add(telemovelAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm2.add(telemovelAtDadosRestText);\r\n\r\n        centroAtDadosRestSSPanelForm3.add(lotacaoAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestText);\r\n\r\n\r\n        centroAtDadosRestSSPanelForm4.add(horariosAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horariosAlmocoAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm4.add(horariosJantarAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestText);\r\n\r\n        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestText);\r\n\r\n        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestField);\r\n        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestField);\r\n\r\n        sulMRestAtDadosSubPanel.setLayout(new FlowLayout());\r\n        sulMRestAtDadosSubPanel.add(voltarMenuRestAtDadosRestButton);\r\n        sulMRestAtDadosSubPanel.add(atDadosRestButton);\r\n\r\n        voltarMenuRestAtDadosRestButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        atDadosRestButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    //////MENU RESTAURANTE – RESERVAS//////////\r\n    private void construirPanelMRestReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestReservasSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMRestReservasSubPanel = new JPanel();\r\n        norteMRestReservasSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMRestReservasSubPanel = new JPanel();\r\n        JPanel sulMRestReservasSubPanel = new JPanel();\r\n\r\n        JLabel mRestReservasLabel = new JLabel(\"HISTÓRICO DE RESERVAS\");\r\n\r\n        JRadioButton filtrarIntervDatasmRestResRButton = new JRadioButton(\"Intervalo de datas\");\r\n        JRadioButton filtrarTipomRestResRButton = new JRadioButton(\"Tipo (Presencial ou Take-Away)\");\r\n        JRadioButton filtrarIntervValmRestResRButton = new JRadioButton(\"Intervalo de Valores\");\r\n        JRadioButton filtrarClientemRestResRButton = new JRadioButton(\"Cliente\");\r\n\r\n        ButtonGroup group = new ButtonGroup();\r\n        group.add(filtrarIntervDatasmRestResRButton);\r\n        group.add(filtrarTipomRestResRButton);\r\n        group.add(filtrarIntervValmRestResRButton);\r\n        group.add(filtrarClientemRestResRButton);\r\n\r\n        JButton ptEnMRestReservasButton = new JButton(\"PT/EN\");\r\n        JButton voltarMRestReservasButton = new JButton(\"MENU RESTAURANTE\");\r\n        JButton okMRestReservasButton = new JButton(\"OK\");\r\n\r\n        mRestReservasSuperPanel.add(norteMRestReservasSubPanel, \"North\");\r\n        mRestReservasSuperPanel.add(centroMRestReservasSubPanel, \"Center\");\r\n        mRestReservasSuperPanel.add(sulMRestReservasSubPanel, \"South\");\r\n\r\n        JPanel norteMRestReservasSSPanel = new JPanel();\r\n        norteMRestReservasSSPanel.setLayout(new FlowLayout());\r\n        norteMRestReservasSSPanel.add(mRestReservasLabel);\r\n        norteMRestReservasSubPanel.add(norteMRestReservasSSPanel, BorderLayout.CENTER);\r\n        norteMRestReservasSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMRestReservasSSPanel = new JPanel();\r\n        centroMRestReservasSSPanel.setLayout(new GridLayout(12, 2));\r\n        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel);\r\n        centroMRestReservasSSPanel.add(filtrarIntervDatasmRestResRButton);\r\n        centroMRestReservasSSPanel.add(filtrarTipomRestResRButton);\r\n        centroMRestReservasSSPanel.add(filtrarIntervValmRestResRButton);\r\n        centroMRestReservasSSPanel.add(filtrarClientemRestResRButton);\r\n\r\n        sulMRestReservasSubPanel.setLayout(new FlowLayout());\r\n        sulMRestReservasSubPanel.add(voltarMRestReservasButton);\r\n        sulMRestReservasSubPanel.add(okMRestReservasButton);\r\n\r\n\r\n        voltarMRestReservasButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(500, 300);\r\n\r\n        });\r\n\r\n        okMRestReservasButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n\r\n\r\n        this.setVisible(true);\r\n    }\r\n}
===================================================================
--- src/GUI/Interface.java	(revision f2cd0fea31c08a3416f9d5bc8383fa6a34583c8b)
+++ src/com/company/gui/Interface.java	(date 1609412394931)
@@ -1,23 +1,49 @@
-package GUI;
+package com.company.gui;
+
+import com.company.gui.util.DateLabelFormatter;
+import org.jdatepicker.impl.JDatePanelImpl;
+import org.jdatepicker.impl.JDatePickerImpl;
+import org.jdatepicker.impl.UtilDateModel;
 
 import java.awt.*;
+import java.awt.event.*;
+import java.text.ParseException;
+import java.util.Enumeration;
+import java.util.Properties;
+import java.util.ResourceBundle;
 
 import javax.swing.*;
+import javax.swing.text.MaskFormatter;
 
 public class Interface extends JFrame {
+    private static final String LOGIN_CARD = "LOGIN";
     private static final String RESTAURANTE_CARD = "RESTAURANTE";
     private static final String CLIENTE_CARD = "CLIENTE";
-    private static final String LOGIN_CARD = "LOGIN";
     private static final String MENUCLIENTE_CARD = "MENU CLIENTE";
+    private static final String MCLIREST_CARD = "MENU CLIENTE - CONSULTAR RESTAURANTES";
+    private static final String MCLICOMENTARIOS_CARD = "MENU CLIENTE - COMENTÁRIOS";
+    private static final String MCLIATDADOS_CARD = "MENU CLIENTE - ACTUALIZAR DADOS";
+    private static final String MCLIHISRES_CARD = "MENU CLIENTE - HISTÓRICO DE RESERVAS";
+    private static final String MCLIMRESCOMPONTRESE_CARD = "MENU CLIENTE - HISTÓRICO DE RESERVAS: COMENTAR";
+    private static final String MCLIRESACT_CARD = "MENU CLIENTE - RESERVAS ACTIVAS";
+    private static final String MCLIFAZERRES_CARD = "MENU CLIENTE - FAZER RESERVAS";
+    private static final String MCLIFAZERRESP_CARD = "MENU CLIENTE - FAZER RESERVAS PRESENCIAL";
+    private static final String MCLIFAZERRESTA_CARD = "MENU CLIENTE - FAZER RESERVAS TAKE-AWAY";
+    private static final String MCLIRESERVAS_CARD = "MENU CLIENTE - RESERVAS";
+
+
     private static final String MENURESTAURANTE_CARD = "MENU RESTAURANTE";
     private static final String MRESTADICIONARPRATO_CARD = "ADICIONAR PRATO";
-    private static final String MRESTATUALIZARPRATO_CARD = "ATUALIZAR PRATO";
-    private static final String MRESTATUALIZARDADOS_CARD = "ATUALIZAR DADOS";
-    private static final String MRESTRESERVSUPERPANEL_CARD = "RESERVAS";
+    private static final String MRESTACTUALIZARPRATO_CARD = "ACTUALIZAR PRATO DO DIA";
+    private static final String MRESTACTUALIZARDADOS_CARD = "MENU RESTAURANTE - ACTUALIZAR DADOS";
+    private static final String MRESTRESERV_CARD = "MENU RESTAURANTE - HISTÓRICO DE RESERVAS";
+    private static final String MRESTCOMENTARIOS_CARD = "MENU RESTAURANTE - COMENTÁRIOS";
     private static final int LARGURA_LOGIN = 400;
     private static final int ALTURA_LOGIN = 180;
     private static final int LARGURA_PADRAO = 500;
     private static final int ALTURA_PADRAO = 300;
+    private boolean passwordValido;
+    private boolean confirmarPasswordValido;
 
 
     public Interface() {
@@ -32,12 +58,34 @@
         /////// SUPERPAINEIS////////
         JPanel loginSuperPanel = new JPanel();
         loginSuperPanel.setLayout(new BorderLayout());
-        JPanel registarNovoClienteSuperPanel = new JPanel();
-        registarNovoClienteSuperPanel.setLayout(new BorderLayout());
+        JPanel regNovoCliSuperPanel = new JPanel();
+        regNovoCliSuperPanel.setLayout(new BorderLayout());
         JPanel registarNovoRestSuperPanel = new JPanel();
         registarNovoRestSuperPanel.setLayout(new BorderLayout());
-        JPanel menuClienteSuperPanel = new JPanel();
-        menuClienteSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliSuperPanel = new JPanel();
+        mCliSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliRestSuperPanel = new JPanel();
+        mCliRestSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliComentariosSuperPanel = new JPanel();
+        mCliComentariosSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliAtDadosSuperPanel = new JPanel();
+        mCliAtDadosSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliHistResSuperPanel = new JPanel();
+        mCliHistResSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMResComPontReseSuperPanel = new JPanel();
+        mCliMResComPontReseSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliResActSuperPanel = new JPanel();
+        mCliResActSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliFazerResSuperPanel = new JPanel();
+        mCliFazerResSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliFazerResPSuperPanel = new JPanel();
+        mCliFazerResPSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliFazerResTASuperPanel = new JPanel();
+        mCliFazerResTASuperPanel.setLayout(new BorderLayout());
+        JPanel mCliReservasMReseSuperPanel = new JPanel();
+        mCliReservasMReseSuperPanel.setLayout(new BorderLayout());
+
+
         JPanel mRestSuperPanel = new JPanel();
         mRestSuperPanel.setLayout(new BorderLayout());
         JPanel mRestAdPratoSuperPanel = new JPanel();
@@ -48,14 +96,17 @@
         mRestAtDadosSuperPanel.setLayout(new BorderLayout());
         JPanel mRestReservasSuperPanel = new JPanel();
         mRestReservasSuperPanel.setLayout(new BorderLayout());
+        JPanel mRestComentariosSuperPanel = new JPanel();
+        mRestComentariosSuperPanel.setLayout(new BorderLayout());
+
 
         construirPanelLogin(this, contentor, loginSuperPanel);
 
-        construirPanelCliente(this, contentor, loginSuperPanel, registarNovoClienteSuperPanel);
+        construirPanelCliente(this, contentor, loginSuperPanel, regNovoCliSuperPanel);
 
         construirPanelRestaurante(this, contentor, loginSuperPanel, registarNovoRestSuperPanel);
 
-        construirPanelMenuCliente(this, contentor, loginSuperPanel, menuClienteSuperPanel);
+        construirPanelMenuCliente(this, contentor, loginSuperPanel, mCliSuperPanel);
 
         ////PROBLEMA - não aceita this
         construirPanelMRest(contentor, loginSuperPanel, mRestSuperPanel);
@@ -64,19 +115,53 @@
 
         construirPanelMRestAtPratoDia(this, contentor, loginSuperPanel, mRestAtPratoDiaSuperPanel);
 
-        construirPanelMRestAtDados (this, contentor, loginSuperPanel, mRestAtDadosSuperPanel);
+        construirPanelMRestAtDados(this, contentor, loginSuperPanel, mRestAtDadosSuperPanel);
 
-        construirPanelMRestReservas (this, contentor, loginSuperPanel, mRestReservasSuperPanel);
+        construirPanelMRestReservas(this, contentor, loginSuperPanel, mRestReservasSuperPanel);
 
+        construirPanelMRestComentarios(this, contentor, loginSuperPanel, mRestComentariosSuperPanel);
+
+        construirPanelMCliRestaurantes(this, contentor, loginSuperPanel, mCliRestSuperPanel);
+
+        construirPanelMCliComentarios(this, contentor, loginSuperPanel, mCliComentariosSuperPanel);
+
+        construirPanelMCliAtDados(this, contentor, loginSuperPanel, mCliAtDadosSuperPanel);
+
+        construirPanelMCliHistRes(this, contentor, loginSuperPanel, mCliHistResSuperPanel);
+
+        construirPanelMCliResAct(this, contentor, loginSuperPanel, mCliResActSuperPanel);
+
+        construirPanelMCliFazerRes(this, contentor, loginSuperPanel, mCliFazerResSuperPanel);
+
+        construirPanelMCliFazerResP(this, contentor, loginSuperPanel, mCliFazerResPSuperPanel);
+
+        construirPanelMCliFazerResTA(this, contentor, loginSuperPanel, mCliFazerResTASuperPanel);
+
+        construirPanelReservasMCliMRese(this, contentor, loginSuperPanel, mCliReservasMReseSuperPanel);
+
+        construirPanelMCliMResComPonReservas(this, contentor, loginSuperPanel, mCliMResComPontReseSuperPanel);
+
+
         contentor.add(loginSuperPanel, LOGIN_CARD);
-        contentor.add(registarNovoClienteSuperPanel, CLIENTE_CARD);
+        contentor.add(regNovoCliSuperPanel, CLIENTE_CARD);
         contentor.add(registarNovoRestSuperPanel, RESTAURANTE_CARD);
-        contentor.add(menuClienteSuperPanel, MENUCLIENTE_CARD);
+        contentor.add(mCliSuperPanel, MENUCLIENTE_CARD);
         contentor.add(mRestSuperPanel, MENURESTAURANTE_CARD);
         contentor.add(mRestAdPratoSuperPanel, MRESTADICIONARPRATO_CARD);
-        contentor.add(mRestAtPratoDiaSuperPanel, MRESTATUALIZARPRATO_CARD);
-        contentor.add(mRestAtDadosSuperPanel, MRESTATUALIZARDADOS_CARD);
-        contentor.add(mRestReservasSuperPanel, MRESTRESERVSUPERPANEL_CARD);
+        contentor.add(mRestAtPratoDiaSuperPanel, MRESTACTUALIZARPRATO_CARD);
+        contentor.add(mRestAtDadosSuperPanel, MRESTACTUALIZARDADOS_CARD);
+        contentor.add(mRestReservasSuperPanel, MRESTRESERV_CARD);
+        contentor.add(mRestComentariosSuperPanel, MRESTCOMENTARIOS_CARD);
+        contentor.add(mCliRestSuperPanel, MCLIREST_CARD);
+        contentor.add(mCliComentariosSuperPanel, MCLICOMENTARIOS_CARD);
+        contentor.add(mCliAtDadosSuperPanel, MCLIATDADOS_CARD);
+        contentor.add(mCliHistResSuperPanel, MCLIHISRES_CARD);
+        contentor.add(mCliResActSuperPanel, MCLIRESACT_CARD);
+        contentor.add(mCliFazerResSuperPanel, MCLIFAZERRES_CARD);
+        contentor.add(mCliFazerResPSuperPanel, MCLIFAZERRESP_CARD);
+        contentor.add(mCliFazerResTASuperPanel, MCLIFAZERRESTA_CARD);
+        contentor.add(mCliReservasMReseSuperPanel, MCLIRESERVAS_CARD);
+        contentor.add(mCliMResComPontReseSuperPanel, MCLIMRESCOMPONTRESE_CARD);
 
 
     }
@@ -96,8 +181,8 @@
         JButton restauranteNovoButton = new JLinkButton("Novo Restaurante");
 
         JLabel titleLoginLabel = new JLabel("LOGIN");
-        JLabel usernameLoginLabel = new JLabel("Username:");
-        JLabel passwordLoginLabel = new JLabel("Password:");
+        JLabel usernameLoginLabel = new JLabel("Username");
+        JLabel passwordLoginLabel = new JLabel("Password");
 
         JTextField usernameLoginText = new JTextField(20);
 
@@ -157,6 +242,7 @@
             // no actionlistener)
         });
     }
+
     ////////////////////NOVO CLIENTE/////////////////////////
     private void construirPanelCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoClienteSuperPanel) {
 
@@ -168,16 +254,21 @@
         JPanel sulNovoClienteSubPanel = new JPanel();
 
         JLabel registarNovoClienteLabel = new JLabel("NOVO CLIENTE");
+        registarNovoClienteLabel.setForeground(Color.BLUE);
         JLabel nomeClienteLabel = new JLabel("Nome");
+        //nomeClienteLabel.setBounds(50,80,100,20);
         JLabel emailClienteLabel = new JLabel("E-mail");
         JLabel moradaClienteLabel = new JLabel("Morada");
         JLabel telemovelClienteLabel = new JLabel("Telemóvel");
         JLabel usernameClienteLabel = new JLabel("Username");
-        JLabel passwordClienteLabel = new JLabel("Password: ");
-        JLabel confirmarPasswordClienteLabel = new JLabel("Confirmar password: ");
+        JLabel passwordClienteLabel = new JLabel("Password ");
+        JLabel confirmarPasswordClienteLabel = new JLabel("Confirmar password ");
 
         JTextField nomeClienteText = new JTextField(20);
+        nomeClienteText.setMargin(new Insets(3, 3, 3, 3));
+        //nomeClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));
         JTextField emailClienteText = new JTextField(20);
+        //emailClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));
         JTextField moradaClienteText = new JTextField(20);
         JTextField telemovelClienteText = new JTextField(20);
         JTextField usernameClienteText = new JTextField(20);
@@ -189,6 +280,22 @@
         JButton cancelarClienteButton = new JButton("CANCELAR");
         JButton registarClienteButton = new JButton("REGISTAR");
 
+        //todo não deu certo
+        //Define as máscaras
+        MaskFormatter mascaraTelCliente = null;
+
+        try {
+            mascaraTelCliente = new MaskFormatter("(##)####-####");
+
+        } catch (ParseException excp) {
+            System.err.println("Erro na formatação: " + excp.getMessage());
+            System.exit(-1);
+        }
+
+        //Seta as máscaras nos objetos JFormattedTextField
+        JFormattedTextField telClienteT = new JFormattedTextField(mascaraTelCliente);
+        //telClienteT.setBounds(150,80,100,20);
+
 
         registarNovoClienteSuperPanel.add(norteNovoClienteSubPanel, "North");
         registarNovoClienteSuperPanel.add(centroNovoClienteSubPanel, "Center");
@@ -238,8 +345,9 @@
         });
     }
 
+
     ////// MENU CLIENTE//////////
-    private void construirPanelMenuCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel menuClienteSuperPanel) {
+    private void construirPanelMenuCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliSuperPanel) {
 
         /////SUBPAINEIS//////
         JPanel norteMenuClienteSubPanel = new JPanel();
@@ -248,23 +356,23 @@
         JPanel sulMenuClienteSubPanel = new JPanel();
 
         JLabel registarNovoClienteLabel = new JLabel("MENU CLIENTE");
+        registarNovoClienteLabel.setForeground(Color.BLUE);
 
         JButton ptEnMenuClienteButton = new JButton("PT/EN");
         ////
-        JButton consultarRest = new JButton("CONSULTAR RESTAURANTES");
-        JButton comentarios = new JButton("COMENTÁRIOS");
-        JButton histResComPon = new JButton("HISTÓRICO DE RESERVAS/COMENTAR E PONTUAR");
-        JButton fazerReservas = new JButton("FAZER RESERVAS");
-        JButton cancelarReserva = new JButton("CANCELAR RESERVA");
-        JButton atualDados = new JButton("ATUALIZAR DADOS");
+        JButton consultarRestMCliButton = new JButton("RESTAURANTES");
+        JButton comentariosMCliButton = new JButton("COMENTÁRIOS");
+        JButton reservasMCliButton = new JButton("RESERVAS");
+
+        JButton atualDadosMCliButton = new JButton("ACTUALIZAR DADOS");
 
         ///
         //JButton cancelarMenuClienteButton = new JButton("CANCELAR");
-        JButton sairMenuClienteButton = new JButton("SAIR");
+        JButton logoutMenuClienteButton = new JButton("LOGOUT");
 
-        menuClienteSuperPanel.add(norteMenuClienteSubPanel, "North");
-        menuClienteSuperPanel.add(centroMenuClienteSubPanel, "Center");
-        menuClienteSuperPanel.add(sulMenuClienteSubPanel, "South");
+        mCliSuperPanel.add(norteMenuClienteSubPanel, "North");
+        mCliSuperPanel.add(centroMenuClienteSubPanel, "Center");
+        mCliSuperPanel.add(sulMenuClienteSubPanel, "South");
 
         JPanel norteClienteSubPanel = new JPanel();
         norteClienteSubPanel.setLayout(new FlowLayout());
@@ -273,35 +381,335 @@
         norteMenuClienteSubPanel.add(ptEnMenuClienteButton, BorderLayout.EAST);
 
         JPanel centroNovoClienteSSPanelForm = new JPanel();
-        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 1));
+        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));
         centroMenuClienteSubPanel.add(centroNovoClienteSSPanelForm);
-        centroNovoClienteSSPanelForm.add(consultarRest);
-        centroNovoClienteSSPanelForm.add(comentarios);
-        centroNovoClienteSSPanelForm.add(histResComPon);
-        centroNovoClienteSSPanelForm.add(fazerReservas);
-        centroNovoClienteSSPanelForm.add(cancelarReserva);
-        centroNovoClienteSSPanelForm.add(atualDados);
+        centroNovoClienteSSPanelForm.add(consultarRestMCliButton);
+        centroNovoClienteSSPanelForm.add(comentariosMCliButton);
+        centroNovoClienteSSPanelForm.add(reservasMCliButton);
 
+        centroNovoClienteSSPanelForm.add(atualDadosMCliButton);
 
         sulMenuClienteSubPanel.setLayout(new FlowLayout());
-        //sulMenuClienteSubPanel.add(cancelarMenuClienteButton);
-        sulMenuClienteSubPanel.add(sairMenuClienteButton);
+        sulMenuClienteSubPanel.add(logoutMenuClienteButton);
+
+
+        comentariosMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLICOMENTARIOS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        consultarRestMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIREST_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        reservasMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        atualDadosMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIATDADOS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+
+        logoutMenuClienteButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(400, 180);
+        });
+
+    }
+
+
+    ////// MENU CLIENTE – MENU RESERVAS//////////
+    private void construirPanelReservasMCliMRese
+    (Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliReservasMReseSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMReseSubPanel = new JPanel();
+        norteMCliMReseSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMReseSubPanel = new JPanel();
+        JPanel sulMCliMReseSubPanel = new JPanel();
+
+        JLabel registarNovoMCliMReseLabel = new JLabel("MENU CLIENTE - RESERVAS");
+        registarNovoMCliMReseLabel.setForeground(Color.BLUE);
+
+        JButton ptEnMCliMReseButton = new JButton("PT/EN");
+        JButton histReseComPonMCliMReseButton = new JButton("HISTÓRICO");
+        JButton ReservasActMCliMReseButton = new JButton("RESERVAS ACTIVAS");
+        JButton fazerReservasMCliMReseButton = new JButton("FAZER RESERVAS");
+        JButton voltarMCliMReseButton = new JButton("MENU CLIENTE");
+
+        JButton logoutMCliMReseButton = new JButton("LOGOUT");
+
+        mCliReservasMReseSuperPanel.add(norteMCliMReseSubPanel, "North");
+        mCliReservasMReseSuperPanel.add(centroMCliMReseSubPanel, "Center");
+        mCliReservasMReseSuperPanel.add(sulMCliMReseSubPanel, "South");
+
+        JPanel norteMCliMReseSSPanel = new JPanel();
+        norteMCliMReseSSPanel.setLayout(new FlowLayout());
+        norteMCliMReseSSPanel.add(registarNovoMCliMReseLabel);
+        norteMCliMReseSubPanel.add(norteMCliMReseSSPanel, BorderLayout.CENTER);
+        norteMCliMReseSubPanel.add(ptEnMCliMReseButton, BorderLayout.EAST);
+
+        JPanel centroNovoMCliMReseSSPanel = new JPanel();
+        centroNovoMCliMReseSSPanel.setLayout(new GridLayout(7, 2));
+        centroMCliMReseSubPanel.add(centroNovoMCliMReseSSPanel);
+
+        centroNovoMCliMReseSSPanel.add(histReseComPonMCliMReseButton);
+        centroNovoMCliMReseSSPanel.add(ReservasActMCliMReseButton);
+        centroNovoMCliMReseSSPanel.add(fazerReservasMCliMReseButton);
+
+        sulMCliMReseSubPanel.setLayout(new FlowLayout());
+        sulMCliMReseSubPanel.add(logoutMCliMReseButton);
+        sulMCliMReseSubPanel.add(voltarMCliMReseButton);
+
+
+        histReseComPonMCliMReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIHISRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
 
-//        cancelarMenuClienteButton.addActionListener(a -> {
-//            CardLayout cl = (CardLayout) contentor.getLayout();
-//            cl.show(contentor, CLIENTE_CARD);
-//            this.setSize(500, 300);
-//
-//        });
+        ReservasActMCliMReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESACT_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
 
-        sairMenuClienteButton.addActionListener(a -> {
+        fazerReservasMCliMReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        logoutMCliMReseButton.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
             cl.show(contentor, LOGIN_CARD);
             this.setSize(400, 180);
+        });
+
+    }
+
+
+    //////MENU CLIENTE – RESERVAS - HISTÓRICO//////////
+
+    private void construirPanelMCliHistRes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliHistResSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliHistResSubPanel = new JPanel();
+        norteMCliHistResSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliHistResSubPanel = new JPanel();
+        JPanel sulMCliHistResSubPanel = new JPanel();
+
+        JLabel mCliTitHistResLabel = new JLabel("MENU CLIENTE - HISTÓRICO DE RESERVAS");
+
+        JLabel mCliIdHistResLabel = new JLabel("ID");
+
+        String[] mCliIdHistRes = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
+        JComboBox arrayMCliIdHistResCBox = new JComboBox(mCliIdHistRes);
+
+//todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, comentar e pontuar
+        String[] nomeColunasMCliHistRes = new String[]{
+                "ID", "DATA", "RESTAURANTE"
+        };
+
+        Object[][] data = new Object[][]{
+                {"ID", "DATA", "RESTAURANTE"},
+                {1, "dd/MM/yyy", "A"},
+                {1, "dd/MM/yyy", "B"},
+                {3, "dd/MM/yyy", "C"},
+        };
+        //criação da tabela
+        JTable tabelaMCliHistRes = new JTable(data, nomeColunasMCliHistRes);
+
+        JButton ptEnMCliRestButton = new JButton("PT/EN");
+        JButton voltarMCliHistResButton = new JButton("MENU CLIENTE");
+        JButton comentarMCliHistResButton = new JButton("COMENTAR");
+        JButton retornarMCliHistResButton = new JButton("VOLTAR");
+
+        mCliHistResSuperPanel.add(norteMCliHistResSubPanel, "North");
+        mCliHistResSuperPanel.add(centroMCliHistResSubPanel, "Center");
+        mCliHistResSuperPanel.add(sulMCliHistResSubPanel, "South");
+
+        JPanel norteMCliHistResSSPanel = new JPanel();
+        norteMCliHistResSSPanel.setLayout(new FlowLayout());
+        norteMCliHistResSSPanel.add(mCliTitHistResLabel);
+        norteMCliHistResSubPanel.add(norteMCliHistResSSPanel, BorderLayout.CENTER);
+        norteMCliHistResSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);
 
+        JPanel centroMCliHistResSSPanel = new JPanel();
+        centroMCliHistResSSPanel.setLayout(new FlowLayout());
+        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliHistResSSPanel1 = new JPanel();
+        centroMCliHistResSSPanel1.setLayout(new FlowLayout());
+        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel1, BorderLayout.WEST);
+
+        centroMCliHistResSSPanel.add(tabelaMCliHistRes);
+        centroMCliHistResSSPanel1.add(mCliIdHistResLabel);
+        centroMCliHistResSSPanel1.add(arrayMCliIdHistResCBox);
+
+        sulMCliHistResSubPanel.setLayout(new FlowLayout());
+        sulMCliHistResSubPanel.add(voltarMCliHistResButton);
+        sulMCliHistResSubPanel.add(retornarMCliHistResButton);
+        sulMCliHistResSubPanel.add(comentarMCliHistResButton);
+
+        retornarMCliHistResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
         });
 
+        //todo falta ativar este botão
+        comentarMCliHistResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESCOMPONTRESE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliHistResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
     }
+    //todo espaço para escrever comentário pode ter barra de rolagem? ativar o botão OK
+    /////////// MENU CLIENTE - MENU RESERVA - HISTÓRICO DE RESERVAS - COMENTAR UMA RESERVA///////
+    private void construirPanelMCliMResComPonReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMResComPontReseSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliRestComPonReseSubPanel = new JPanel();
+        norteMCliRestComPonReseSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliRestComPonReseSubPanel = new JPanel();
+        JPanel sulMCliRestComPonReseSubPanel = new JPanel();
+
+        JRadioButton umPont = new JRadioButton("1");
+        JRadioButton doisPont = new JRadioButton("2");
+        JRadioButton tresPont = new JRadioButton("3");
+        JRadioButton quatroPont = new JRadioButton("4");
+        JRadioButton cincoPont = new JRadioButton("5");
+
+        JLabel mCliRestComPonReseLabel = new JLabel("MENU CLIENTE – HISTÓRICO DE RESERVAS - COMENTAR");
+        JLabel restMCliMReseComPonLabel = new JLabel("RESTAURANTE");
+        JLabel dataMCliMReseComPonLabel = new JLabel("DATA DA RESERVA");
+        JLabel pontMCliRestComPonReseLabel = new JLabel("ATRIBUIR PONTUAÇÃO:");
+
+        JTextField restMCliMReseComPonText = new JTextField(20);
+        JTextField dataMCliMReseComPonText = new JTextField(8);
+        JTextArea novoComMCliMReseComPonTextA = new JTextArea(5, 50);
+        //novoComMCliMReseComPonTextA.setSize(100, 80);
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(umPont);
+        group.add(doisPont);
+        group.add(tresPont);
+        group.add(quatroPont);
+        group.add(cincoPont);
+
+        JButton ptEnMCliRestComPonReseButton = new JButton("PT/EN");
+        JButton voltarMCliRestComPonReseButton = new JButton("MENU CLIENTE");
+        JButton okMCliRestComPonReseButton = new JButton("OK");
+        JButton retornarMCliRestComPonReseButton = new JButton("VOLTAR");
+
+        mCliMResComPontReseSuperPanel.add(norteMCliRestComPonReseSubPanel, "North");
+        mCliMResComPontReseSuperPanel.add(centroMCliRestComPonReseSubPanel, "Center");
+        mCliMResComPontReseSuperPanel.add(sulMCliRestComPonReseSubPanel, "South");
+
+        JPanel norteMCliRestComPonReseSSPanel = new JPanel();
+        norteMCliRestComPonReseSSPanel.setLayout(new FlowLayout());
+        norteMCliRestComPonReseSSPanel.add(mCliRestComPonReseLabel);
+        norteMCliRestComPonReseSubPanel.add(norteMCliRestComPonReseSSPanel, BorderLayout.CENTER);
+        norteMCliRestComPonReseSubPanel.add(ptEnMCliRestComPonReseButton, BorderLayout.EAST);
+
+        JPanel centroMCliRestComPonReseSSPanel = new JPanel();
+        centroMCliRestComPonReseSSPanel.setLayout(new FlowLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel1 = new JPanel();
+        centroMCliRestComPonReseSSPanel1.setLayout(new FlowLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel1, BorderLayout.CENTER);
+
+        JPanel centroMCliRestComPonReseSSPanel2 = new JPanel();
+        centroMCliRestComPonReseSSPanel2.setLayout(new GridLayout(1, 1));
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel2);
+
+        JPanel centroMCliRestComPonReseSSPanel3 = new JPanel();
+        centroMCliRestComPonReseSSPanel3.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel3, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel4 = new JPanel();
+        centroMCliRestComPonReseSSPanel4.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel4, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel5 = new JPanel();
+        centroMCliRestComPonReseSSPanel5.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel5, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel6 = new JPanel();
+        centroMCliRestComPonReseSSPanel6.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel6, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel7 = new JPanel();
+        centroMCliRestComPonReseSSPanel7.setLayout(new BorderLayout());
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel7, BorderLayout.WEST);
+
+        JPanel centroMCliRestComPonReseSSPanel8 = new JPanel();
+        centroMCliRestComPonReseSSPanel8.setLayout(new GridLayout(1, 2));
+        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel8);
+        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonLabel);
+        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonText);
+        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonLabel);
+        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonText);
+        centroMCliRestComPonReseSSPanel1.add(novoComMCliMReseComPonTextA);
+
+        centroMCliRestComPonReseSSPanel2.add(pontMCliRestComPonReseLabel);
+        centroMCliRestComPonReseSSPanel3.add(umPont);
+        centroMCliRestComPonReseSSPanel4.add(doisPont);
+        centroMCliRestComPonReseSSPanel5.add(tresPont);
+        centroMCliRestComPonReseSSPanel6.add(quatroPont);
+        centroMCliRestComPonReseSSPanel7.add(cincoPont);
+
+        sulMCliRestComPonReseSubPanel.setLayout(new FlowLayout());
+        sulMCliRestComPonReseSubPanel.add(voltarMCliRestComPonReseButton);
+        sulMCliRestComPonReseSubPanel.add(retornarMCliRestComPonReseButton);
+        sulMCliRestComPonReseSubPanel.add(okMCliRestComPonReseButton);
+
+        retornarMCliRestComPonReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        voltarMCliRestComPonReseButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        //todo ver os encaminhamentos
+        okMCliRestComPonReseButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+    }
+
+
     ////////////////////NOVO RESTAURANTE/////////////////////////
     private void construirPanelRestaurante(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoRestauranteSuperPanel) {
 
@@ -314,9 +722,11 @@
         JPanel sulNovoRestauranteSubPanel = new JPanel();
 
         JLabel registarNovoRestauranteLabel = new JLabel("NOVO RESTAURANTE");
+        registarNovoRestauranteLabel.setForeground(Color.RED);
         JLabel nomeRestauranteLabel = new JLabel("Nome");
         JLabel emailRestauranteLabel = new JLabel("E-mail");
         JLabel moradaRestauranteLabel = new JLabel("Morada");
+        JLabel cidadeRestauranteLabel = new JLabel("Cidade");
         JLabel telemovelRestauranteLabel = new JLabel("Telemóvel");
 ///////////////////////
         JLabel lotacaoRestauranteLabel = new JLabel("Lotação:");
@@ -342,9 +752,11 @@
         nomeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
         JTextField emailRestauranteText = new JTextField(18);
         emailRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-        JTextField moradaRestauranteText = new JTextField(15);
+        JTextField moradaRestauranteText = new JTextField(20);
         moradaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-        JTextField telemovelRestauranteText = new JTextField(5);
+        JTextField cidadeRestauranteText = new JTextField(15);
+        cidadeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField telemovelRestauranteText = new JTextField(8);
         telemovelRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
         ////////
         JTextField esplanadaRestauranteText = new JTextField(3);
@@ -396,6 +808,9 @@
         JPanel centroNovoRestSSPanelForm2 = new JPanel();
         centroNovoRestSSPanelForm2.setLayout(new FlowLayout());
         centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2, BorderLayout.CENTER);
+        JPanel centroNovoRestSSPanelForm2A = new JPanel();
+        centroNovoRestSSPanelForm2A.setLayout(new FlowLayout());
+        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2A, BorderLayout.CENTER);
         JPanel centroNovoRestSSPanelForm3 = new JPanel();
         //centroNovoRestSSPanelForm3.setLayout(new FlowLayout());
         centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm3, BorderLayout.CENTER);
@@ -418,8 +833,10 @@
         centroNovoRestSSPanelForm1.add(emailRestauranteText);
         centroNovoRestSSPanelForm2.add(moradaRestauranteLabel);
         centroNovoRestSSPanelForm2.add(moradaRestauranteText);
-        centroNovoRestSSPanelForm2.add(telemovelRestauranteLabel);
-        centroNovoRestSSPanelForm2.add(telemovelRestauranteText);
+        centroNovoRestSSPanelForm2A.add(cidadeRestauranteLabel);
+        centroNovoRestSSPanelForm2A.add(cidadeRestauranteText);
+        centroNovoRestSSPanelForm2A.add(telemovelRestauranteLabel);
+        centroNovoRestSSPanelForm2A.add(telemovelRestauranteText);
         /////
         centroNovoRestSSPanelForm3.add(lotacaoRestauranteLabel);
         centroNovoRestSSPanelForm3.add(esplanadaRestauranteLabel);
@@ -480,21 +897,21 @@
         JPanel sulMenuRestauranteSubPanel = new JPanel();
 
         JLabel registarNovoRestauranteLabel = new JLabel("MENU RESTAURANTE");
+        registarNovoRestauranteLabel.setForeground(Color.RED);
 
         JButton ptEnMenuRestauranteButton = new JButton("PT/EN");
         ////
         JButton mRestAdicionarPratoButton = new JButton("ADICIONAR PRATO");
-        JButton mRestAtualizarPratoDiaButton = new JButton("ATUALIZAR PRATO DO DIA");
-        JButton mRestAtualizarDadosButton = new JButton("ATUALIZAR DADOS");
+        JButton mRestActualizarPratoDiaButton = new JButton("ACTUALIZAR PRATO DO DIA");
+        JButton mRestActualizarDadosButton = new JButton("ACTUALIZAR DADOS");
         JButton mRestReservasButton = new JButton("RESERVAS");
-        JButton consultarComentarios = new JButton("CONSULTAR COMENTÁRIOS");
-        JButton responderComentarios = new JButton("RESPONDER COMENTÁRIOS");
+        JButton mRestConsultarComentariosButton = new JButton("COMENTÁRIOS");
         JButton pontuacaoMedia = new JButton("PONTUAÇÃO MÉDIA");
 
 
         ///
         //JButton cancelarMenuRestauranteButton = new JButton("CANCELAR");
-        JButton sairMenuRestauranteButton = new JButton("SAIR");
+        JButton logoutMenuRestauranteButton = new JButton("LOGOUT");
 
         menuRestauranteSuperPanel.add(norteMenuRestauranteSubPanel, "North");
         menuRestauranteSuperPanel.add(centroMenuRestauranteSubPanel, "Center");
@@ -510,16 +927,15 @@
         centroNovoRestauranteSSPanelForm.setLayout(new GridLayout(7, 1));
         centroMenuRestauranteSubPanel.add(centroNovoRestauranteSSPanelForm);
         centroNovoRestauranteSSPanelForm.add(mRestAdicionarPratoButton);
-        centroNovoRestauranteSSPanelForm.add(mRestAtualizarPratoDiaButton);
-        centroNovoRestauranteSSPanelForm.add(mRestAtualizarDadosButton);
+        centroNovoRestauranteSSPanelForm.add(mRestActualizarPratoDiaButton);
+        centroNovoRestauranteSSPanelForm.add(mRestActualizarDadosButton);
         centroNovoRestauranteSSPanelForm.add(mRestReservasButton);
-        centroNovoRestauranteSSPanelForm.add(consultarComentarios);
-        centroNovoRestauranteSSPanelForm.add(responderComentarios);
+        centroNovoRestauranteSSPanelForm.add(mRestConsultarComentariosButton);
         centroNovoRestauranteSSPanelForm.add(pontuacaoMedia);
 
         sulMenuRestauranteSubPanel.setLayout(new FlowLayout());
         //sulMenuRestauranteSubPanel.add(cancelarMenuRestauranteButton);
-        sulMenuRestauranteSubPanel.add(sairMenuRestauranteButton);
+        sulMenuRestauranteSubPanel.add(logoutMenuRestauranteButton);
 
 //        cancelarMenuRestauranteButton.addActionListener(a -> {
 //           CardLayout cl = (CardLayout) contentor.getLayout();
@@ -531,39 +947,42 @@
             CardLayout cl = (CardLayout) contentor.getLayout();
             cl.show(contentor, MRESTADICIONARPRATO_CARD);
             this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
-
         });
 
-        mRestAtualizarPratoDiaButton.addActionListener(a -> {
+        mRestActualizarPratoDiaButton.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
-            cl.show(contentor, MRESTATUALIZARPRATO_CARD);
+            cl.show(contentor, MRESTACTUALIZARPRATO_CARD);
             this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
-
         });
 
         mRestReservasButton.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
-            cl.show(contentor, MRESTRESERVSUPERPANEL_CARD);
+            cl.show(contentor, MRESTRESERV_CARD);
+            this.setSize(LARGURA_PADRAO, 350);
+        });
+
+        mRestActualizarDadosButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MRESTACTUALIZARDADOS_CARD);
             this.setSize(LARGURA_PADRAO, 350);
-
         });
 
-        mRestAtualizarDadosButton.addActionListener(a -> {
+//        mRestReservasButton.addActionListener(a -> {
+//            CardLayout cl = (CardLayout) contentor.getLayout();
+//            cl.show(contentor, MRESTCOMENTARIOS_CARD);
+//            this.setSize(LARGURA_PADRAO, 350);
+//      });
+
+        mRestConsultarComentariosButton.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
-            cl.show(contentor, MRESTATUALIZARDADOS_CARD);
+            cl.show(contentor, MRESTCOMENTARIOS_CARD);
             this.setSize(LARGURA_PADRAO, 350);
-
-
-
-
         });
 
-
-        sairMenuRestauranteButton.addActionListener(a -> {
+        logoutMenuRestauranteButton.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
-            cl.show(contentor, RESTAURANTE_CARD);
-            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
-
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);
         });
     }
 
@@ -639,7 +1058,7 @@
 
     }
 
-    /////////MENU RESTAURANTE – ATUALIZAR PRATO//////////////////////
+    /////////MENU RESTAURANTE – ACTUALIZAR PRATO//////////////////////
     private void construirPanelMRestAtPratoDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtPratoSuperPanel) {
 
 
@@ -649,7 +1068,7 @@
         JPanel centroAtPratoSubPanel = new JPanel();
         JPanel sulAtPratoSubPanel = new JPanel();
 
-        JLabel atPratoLabel = new JLabel("ATUALIZAR PRATO DO DIA");
+        JLabel atPratoLabel = new JLabel("ACTUALIZAR PRATO DO DIA");
         JLabel atNomePratoLabel = new JLabel("Nome Prato");
         JLabel atDescricaoPratoLabel = new JLabel("Descrição");
         JLabel atPrecoPratoLabel = new JLabel("Preço");
@@ -702,8 +1121,8 @@
         });
     }
 
-    ///////////////////MENU RESTAURANTE - ATUALIZAR DADOS /////////////////////////
-    private void construirPanelMRestAtDados (Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtDadosSuperPanel) {
+    ///////////////////MENU RESTAURANTE - ACTUALIZAR DADOS /////////////////////////
+    private void construirPanelMRestAtDados(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtDadosSuperPanel) {
 
 
         /////SUBPAINEIS//////
@@ -712,10 +1131,11 @@
         JPanel centroMRestAtDadosSubPanel = new JPanel();
         JPanel sulMRestAtDadosSubPanel = new JPanel();
 
-        JLabel atDadosRestLabel = new JLabel("ATUALIZAR DADOS");
+        JLabel atDadosRestLabel = new JLabel("ACTUALIZAR DADOS");
         JLabel nomeAtDadosRestLabel = new JLabel("Nome");
         JLabel emailAtDadosRestLabel = new JLabel("E-mail");
         JLabel moradaAtDadosRestLabel = new JLabel("Morada");
+        JLabel cidadeAtDadosRestLabel = new JLabel("Cidade");
         JLabel telemovelAtDadosRestLabel = new JLabel("Telemóvel");
 ///////////////////////
         JLabel lotacaoAtDadosRestLabel = new JLabel("Lotação:");
@@ -731,16 +1151,18 @@
         JLabel horarioJantarInicioAtDadosRestLabel = new JLabel("Início");
         JLabel horarioJantarFimAtDadosRestLabel = new JLabel("Fim");
         JLabel usernameAtDadosRestLabel = new JLabel("Username");
-        JLabel passwordAtDadosRestLabel = new JLabel("Password: ");
-        JLabel confirmarPasswordAtDadosRestLabel = new JLabel("Confirmar password: ");
+        JLabel passwordAtDadosRestLabel = new JLabel("Password");
+        JLabel confirmarPasswordAtDadosRestLabel = new JLabel("Confirmar password ");
 
         JTextField nomeAtDadosRestText = new JTextField(18);
         nomeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
         JTextField emailAtDadosRestText = new JTextField(18);
         emailAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-        JTextField moradaAtDadosRestText = new JTextField(15);
+        JTextField moradaAtDadosRestText = new JTextField(20);
         moradaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
-        JTextField telemovelAtDadosRestText = new JTextField(5);
+        JTextField cidadeAtDadosRestText = new JTextField(15);
+        cidadeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
+        JTextField telemovelAtDadosRestText = new JTextField(8);
         telemovelAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
 
         //JTextField lotacaoAtDadosRestText = new JTextField(5);
@@ -769,7 +1191,7 @@
 
         JButton ptEnAtDadosRestButton = new JButton("PT/EN");
         JButton voltarMenuRestAtDadosRestButton = new JButton("MENU RESTAURANTE");
-        JButton atDadosRestButton = new JButton("ATUALIZAR");
+        JButton atDadosRestButton = new JButton("ACTUALIZAR");
 
         mRestAtDadosSuperPanel.add(norteMRestAtDadosSubPanel, "North");
         mRestAtDadosSuperPanel.add(centroMRestAtDadosSubPanel, "Center");
@@ -783,27 +1205,31 @@
 
         JPanel centroAtDadosRestSSPanelForm1 = new JPanel();
         centroAtDadosRestSSPanelForm1.setLayout(new FlowLayout());
-        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm1);
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm1, BorderLayout.WEST);
 
         JPanel centroAtDadosRestSSPanelForm2 = new JPanel();
         centroAtDadosRestSSPanelForm2.setLayout(new FlowLayout());
-        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2, BorderLayout.CENTER);
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2, BorderLayout.WEST);
+
+        JPanel centroAtDadosRestSSPanelForm2A = new JPanel();
+        centroAtDadosRestSSPanelForm2A.setLayout(new FlowLayout());
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2A, BorderLayout.WEST);
 
         JPanel centroAtDadosRestSSPanelForm3 = new JPanel();
         //centroAtDadosRestSSPanelForm3.setLayout(new FlowLayout());
-        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm3, BorderLayout.CENTER);
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm3, BorderLayout.WEST);
 
         JPanel centroAtDadosRestSSPanelForm4 = new JPanel();
         centroAtDadosRestSSPanelForm4.setLayout(new FlowLayout());
-        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm4, BorderLayout.CENTER);
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm4, BorderLayout.WEST);
 
         JPanel centroAtDadosRestSSPanelForm5 = new JPanel();
         centroAtDadosRestSSPanelForm5.setLayout(new FlowLayout());
-        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm5, BorderLayout.CENTER);
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm5, BorderLayout.WEST);
 
         JPanel centroAtDadosRestSSPanelForm6 = new JPanel();
         centroAtDadosRestSSPanelForm6.setLayout(new FlowLayout());
-        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm6, BorderLayout.CENTER);
+        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm6, BorderLayout.WEST);
 
         centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestLabel);
         centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestText);
@@ -812,8 +1238,10 @@
 
         centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestLabel);
         centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestText);
-        centroAtDadosRestSSPanelForm2.add(telemovelAtDadosRestLabel);
-        centroAtDadosRestSSPanelForm2.add(telemovelAtDadosRestText);
+        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestText);
+        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestLabel);
+        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestText);
 
         centroAtDadosRestSSPanelForm3.add(lotacaoAtDadosRestLabel);
         centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestLabel);
@@ -864,7 +1292,7 @@
 
     }
 
-    //////MENU RESTAURANTE – RESERVAS//////////
+    //////MENU RESTAURANTE – HISTÓRICO DE RESERVAS//////////
     private void construirPanelMRestReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestReservasSuperPanel) {
 
 
@@ -875,22 +1303,58 @@
         JPanel sulMRestReservasSubPanel = new JPanel();
 
         JLabel mRestReservasLabel = new JLabel("HISTÓRICO DE RESERVAS");
+        JLabel usernameMRestReservasLabel = new JLabel("Username");
+        //JLabel filtrarTipomRestResLabel = new JLabel("Escolha a opção em que a lista será mostrada:");
+        JLabel filtrarDataInicioMRestReservasLabel = new JLabel("De");
+        JLabel filtrarDataFimMRestReservasLabel = new JLabel("Até");
+
+
+        JTextField usernameMRestReservasText = new JTextField(20);
+
+        JCheckBox cem = new JCheckBox("Até 100");
+        cem.setMnemonic(KeyEvent.VK_C);
+        JCheckBox duzentos = new JCheckBox("100-200");
+        duzentos.setMnemonic(KeyEvent.VK_C);
+        JCheckBox trezentos = new JCheckBox("200-300");
+        trezentos.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quatrocentos = new JCheckBox("+ de 300");
+        quatrocentos.setMnemonic(KeyEvent.VK_C);
 
-        JRadioButton filtrarIntervDatasmRestResRButton = new JRadioButton("Intervalo de datas");
-        JRadioButton filtrarTipomRestResRButton = new JRadioButton("Tipo (Presencial ou Take-Away)");
-        JRadioButton filtrarIntervValmRestResRButton = new JRadioButton("Intervalo de Valores");
-        JRadioButton filtrarClientemRestResRButton = new JRadioButton("Cliente");
+
+        JRadioButton filtrarIntervDatasMRestResRButton = new JRadioButton("DATAS");
+        //todo verificar a questão do calendário
+        JRadioButton filtrarTipomRestResRButton = new JRadioButton("TIPO");
+        JRadioButton filtrarIntervValmRestResRButton = new JRadioButton("VALORES");
+        JRadioButton filtrarClientemRestResRButton = new JRadioButton("CLIENTE");
 
         ButtonGroup group = new ButtonGroup();
-        group.add(filtrarIntervDatasmRestResRButton);
+        group.add(filtrarIntervDatasMRestResRButton);
         group.add(filtrarTipomRestResRButton);
         group.add(filtrarIntervValmRestResRButton);
         group.add(filtrarClientemRestResRButton);
 
+        JComboBox<String> filtrosTipoMRestReservasJCBox = new JComboBox<>();
+        filtrosTipoMRestReservasJCBox.addItem("");
+        filtrosTipoMRestReservasJCBox.addItem("Presencial");
+        filtrosTipoMRestReservasJCBox.addItem("Take-Away");
+
         JButton ptEnMRestReservasButton = new JButton("PT/EN");
         JButton voltarMRestReservasButton = new JButton("MENU RESTAURANTE");
         JButton okMRestReservasButton = new JButton("OK");
 
+        //Adição do calendário
+        UtilDateModel model1 = new UtilDateModel();
+        UtilDateModel model2 = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanel = new JDatePanelImpl(model1, p);
+        JDatePickerImpl datePicker1 = new JDatePickerImpl(datePanel, new DateLabelFormatter());
+
+        JDatePanelImpl datePanel1 = new JDatePanelImpl(model2, p);
+        JDatePickerImpl datePicker2 = new JDatePickerImpl(datePanel1, new DateLabelFormatter());
+
         mRestReservasSuperPanel.add(norteMRestReservasSubPanel, "North");
         mRestReservasSuperPanel.add(centroMRestReservasSubPanel, "Center");
         mRestReservasSuperPanel.add(sulMRestReservasSubPanel, "South");
@@ -902,12 +1366,47 @@
         norteMRestReservasSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);
 
         JPanel centroMRestReservasSSPanel = new JPanel();
-        centroMRestReservasSSPanel.setLayout(new GridLayout(12, 2));
-        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel);
-        centroMRestReservasSSPanel.add(filtrarIntervDatasmRestResRButton);
-        centroMRestReservasSSPanel.add(filtrarTipomRestResRButton);
-        centroMRestReservasSSPanel.add(filtrarIntervValmRestResRButton);
-        centroMRestReservasSSPanel.add(filtrarClientemRestResRButton);
+        centroMRestReservasSSPanel.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel1 = new JPanel();
+        centroMRestReservasSSPanel1.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel2 = new JPanel();
+        centroMRestReservasSSPanel2.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel2A = new JPanel();
+        centroMRestReservasSSPanel2A.setLayout(new GridLayout(1, 1));
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2A, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel3 = new JPanel();
+        centroMRestReservasSSPanel3.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel3, BorderLayout.WEST);
+
+        JPanel centroMRestReservasSSPanel4 = new JPanel();
+        centroMRestReservasSSPanel4.setLayout(new FlowLayout());
+        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel4, BorderLayout.WEST);
+
+        centroMRestReservasSSPanel.add(filtrarIntervDatasMRestResRButton);
+        centroMRestReservasSSPanel1.add(filtrarDataInicioMRestReservasLabel);
+        centroMRestReservasSSPanel1.add(datePicker1);
+        centroMRestReservasSSPanel1.add(filtrarDataFimMRestReservasLabel);
+        centroMRestReservasSSPanel1.add(datePicker2);
+
+        centroMRestReservasSSPanel2.add(filtrarTipomRestResRButton);
+        centroMRestReservasSSPanel2A.add(filtrosTipoMRestReservasJCBox);
+
+        centroMRestReservasSSPanel3.add(filtrarIntervValmRestResRButton);
+        centroMRestReservasSSPanel3.add(cem);
+        centroMRestReservasSSPanel3.add(duzentos);
+        centroMRestReservasSSPanel3.add(trezentos);
+        centroMRestReservasSSPanel3.add(quatrocentos);
+
+        centroMRestReservasSSPanel4.add(filtrarClientemRestResRButton);
+        centroMRestReservasSSPanel4.add(usernameMRestReservasLabel);
+        centroMRestReservasSSPanel4.add(usernameMRestReservasText);
 
         sulMRestReservasSubPanel.setLayout(new FlowLayout());
         sulMRestReservasSubPanel.add(voltarMRestReservasButton);
@@ -917,17 +1416,971 @@
         voltarMRestReservasButton.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
             cl.show(contentor, MENURESTAURANTE_CARD);
-            this.setSize(500, 300);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
 
         });
 
+        //todo ver os encaminhamentos
         okMRestReservasButton.addActionListener(e -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
             cl.show(contentor, LOGIN_CARD);
             this.setSize(500, 180);
         });
+    }
+
+    /**
+     * Convert ResourceBundle into a Properties object.
+     *
+     * @param resource a resource bundle to convert.
+     * @return Properties a properties version of the resource bundle.
+     */
+    private static Properties convertResourceBundleToProperties(ResourceBundle resource) {
+        Properties properties = new Properties();
+        Enumeration<String> keys = resource.getKeys();
+        while (keys.hasMoreElements()) {
+            String key = keys.nextElement();
+            properties.put(key, resource.getString(key));
+        }
+        return properties;
+    }
+
+
+    //////MENU RESTAURANTE – COMENTÁRIOS//////////
+    private void construirPanelMRestComentarios(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestComentariosSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMRestComentariosSubPanel = new JPanel();
+        norteMRestComentariosSubPanel.setLayout(new BorderLayout());
+        JPanel centroMRestComentariosSubPanel = new JPanel();
+        JPanel sulMRestComentariosSubPanel = new JPanel();
+
+        JLabel mRestComentariosLabel = new JLabel("COMENTÁRIOS RECEBIDOS");
+
+
+        String[] nomeColunasMRestComentarios = new String[]{
+                "USERNAME", "COMENTÁRIO", "PONTUAÇÃO"
+        };
+
+        //todo exemplo a verificar
+        Object[][] dados = new Object[][]{
+                {"USERNAME", "COMENTÁRIO", "PONTUAÇÃO"},
+                {"Nuno", "Muito bom", 4.0},
+                {"Manuel", "Excelente", 5.0},
+                {"André", "Pouco espaço interno", 3.0},
+        };
+        //criação da tabela
+        JTable tabela = new JTable(dados, nomeColunasMRestComentarios);
+
+//        JPopupMenu popupMenu = new JPopupMenu();
+//        JMenuItem menuItemAdd = new JMenuItem("Responder");
+
+        JButton ptEnMRestReservasButton = new JButton("PT/EN");
+        JButton voltarMRestComentariosButton = new JButton("MENU RESTAURANTE");
+        JButton responderMRestComentariosButton = new JButton("OK");
+
+        mRestComentariosSuperPanel.add(norteMRestComentariosSubPanel, "North");
+        mRestComentariosSuperPanel.add(centroMRestComentariosSubPanel, "Center");
+        mRestComentariosSuperPanel.add(sulMRestComentariosSubPanel, "South");
+
+        JPanel norteMRestComentariosSSPanel = new JPanel();
+        norteMRestComentariosSSPanel.setLayout(new FlowLayout());
+        norteMRestComentariosSSPanel.add(mRestComentariosLabel);
+        norteMRestComentariosSubPanel.add(norteMRestComentariosSSPanel, BorderLayout.CENTER);
+        norteMRestComentariosSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);
+
+        JPanel centroMRestReservasSSPanel1 = new JPanel();
+        centroMRestReservasSSPanel1.setLayout(new FlowLayout());
+        centroMRestComentariosSubPanel.add(tabela, BorderLayout.WEST);
+
+        sulMRestComentariosSubPanel.setLayout(new FlowLayout());
+        sulMRestComentariosSubPanel.add(voltarMRestComentariosButton);
+        sulMRestComentariosSubPanel.add(responderMRestComentariosButton);
+
+
+        voltarMRestComentariosButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENURESTAURANTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        //todo ver os encaminhamentos para responder comentário
+        responderMRestComentariosButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+
+    }
+
+    //todo mudar linha pontuação e aparecer nome das colunas na tabela, permitir de possa comentar/pontuar uma reserva(Comentar um restaurante e atribuir pontuação)
+    //////MENU RESTAURANTE – LISTAR RESTAURANTES//////////
+    private void construirPanelMCliRestaurantes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliRestSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliRestSubPanel = new JPanel();
+        norteMCliRestSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliRestSubPanel = new JPanel();
+        JPanel sulMCliRestSubPanel = new JPanel();
+
+
+        JCheckBox um = new JCheckBox("1");
+        um.setMnemonic(KeyEvent.VK_C);
+        JCheckBox dois = new JCheckBox("2");
+        dois.setMnemonic(KeyEvent.VK_C);
+        JCheckBox tres = new JCheckBox("3");
+        tres.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quatro = new JCheckBox("4");
+        quatro.setMnemonic(KeyEvent.VK_C);
+        JCheckBox cinco = new JCheckBox("5");
+        cinco.setMnemonic(KeyEvent.VK_C);
+
+        JCheckBox dez = new JCheckBox(">10€");
+        um.setMnemonic(KeyEvent.VK_C);
+        JCheckBox dezVinte = new JCheckBox("10€-20€");
+        dois.setMnemonic(KeyEvent.VK_C);
+        JCheckBox vinteTrinta = new JCheckBox("20€-30€");
+        tres.setMnemonic(KeyEvent.VK_C);
+        JCheckBox trintaQuarenta = new JCheckBox("30€-40€");
+        quatro.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quarenta = new JCheckBox("<40€");
+        cinco.setMnemonic(KeyEvent.VK_C);
+
+
+        JLabel mCliRestLabel = new JLabel("PESQUISAR RESTAURANTES");
+        JLabel fDataMCliRestLabel = new JLabel("DATA");
+        JLabel fhoraFMCliRestLabel = new JLabel("HORA DE FUNCIONAMENTO:");
+        JLabel fvaloresMedCPMCliRestLabel = new JLabel("VALORES MÉDIOS DOS PRATOS:");
+        JLabel fPontMCliRestLabel = new JLabel("PONTUAÇÃO:");
+        JLabel fLotMCliRestLabel = new JLabel("LOTAÇÃO:");
+        JLabel fCidMCliRestLabel = new JLabel("CIDADE:");
+
+        JRadioButton fvaloresMCMCliRestRButton = new JRadioButton("CARTA");
+        JRadioButton fvaloresMPMCliRestRButton = new JRadioButton("PRATOS DO DIA");
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(fvaloresMCMCliRestRButton);
+        group.add(fvaloresMPMCliRestRButton);
+
+        JComboBox<String> fHoraFMCliRestJCBox = new JComboBox<>();
+        fHoraFMCliRestJCBox.addItem("");
+        fHoraFMCliRestJCBox.addItem("Almoço");
+        fHoraFMCliRestJCBox.addItem("Jantar");
+        fHoraFMCliRestJCBox.addItem("Ambos");
+
+
+        //todo verificar porque não deu certo
+        JComboBox fLotCliRestJCBox = new JComboBox();
+        for (int i = 1; i <= 50; i++) {
+            fLotCliRestJCBox.addItem(i);
+        }
+
+        JComboBox fCidMCliRestJCBox = new JComboBox();
+        fCidMCliRestJCBox.addItem("");
+        fCidMCliRestJCBox.addItem("Coimbra");
+        fCidMCliRestJCBox.addItem("Porto");
+        fCidMCliRestJCBox.addItem("Lisboa");
+
+        JButton ptEnMCliRestButton = new JButton("PT/EN");
+        JButton voltarMCliRestButton = new JButton("MENU CLIENTE");
+        JButton okMCliRestButton = new JButton("OK");
+
+        //todo exemplo a verificar
+        String[] nomeColunasMCliRest = new String[]{
+                "ZONA", "TOTAL", "DISPONÍVEIS"
+        };
+
+        Object[][] dados = new Object[][]{
+                {"ZONA", "TOTAL", "DISPONÍVEIS"},
+                {"Esplanada", 20, 5},
+                {"Interior Ñ Fumadores", 20, 10},
+                {"Interior Fumadores", 5, 2},
+        };
+        //criação da tabela
+        JTable tabelaMCliRest = new JTable(dados, nomeColunasMCliRest);
+
+
+//Calendário
+        UtilDateModel model3 = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanel2 = new JDatePanelImpl(model3, p);
+        JDatePickerImpl datePicker3 = new JDatePickerImpl(datePanel2, new DateLabelFormatter());
+
+        mCliRestSuperPanel.add(norteMCliRestSubPanel, "North");
+        mCliRestSuperPanel.add(centroMCliRestSubPanel, "Center");
+        mCliRestSuperPanel.add(sulMCliRestSubPanel, "South");
+
+        JPanel norteMCliRestSSPanel = new JPanel();
+        norteMCliRestSSPanel.setLayout(new FlowLayout());
+        norteMCliRestSSPanel.add(mCliRestLabel);
+        norteMCliRestSubPanel.add(norteMCliRestSSPanel, BorderLayout.CENTER);
+        norteMCliRestSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);
+
+        JPanel centroMCliRestSSPanel = new JPanel();
+        centroMCliRestSSPanel.setLayout(new GridLayout(1, 2));
+        centroMCliRestSubPanel.add(centroMCliRestSSPanel);
+
+        JPanel centroMCliRestSSPanel1 = new JPanel();
+        centroMCliRestSSPanel1.setLayout(new GridBagLayout());
+        centroMCliRestSubPanel.add(centroMCliRestSSPanel1);
+
+        JPanel centroMCliRestSSPanel2 = new JPanel();
+        centroMCliRestSSPanel2.setLayout(new GridBagLayout());
+        centroMCliRestSubPanel.add(centroMCliRestSSPanel2);
+
+        JPanel centroMCliRestSSPanel3 = new JPanel();
+        centroMCliRestSSPanel3.setLayout(new GridBagLayout());
+        centroMCliRestSubPanel.add(centroMCliRestSSPanel3);
+
+        JPanel centroMCliRestSSPanel4 = new JPanel();
+        centroMCliRestSSPanel4.setLayout(new BorderLayout());
+        centroMCliRestSubPanel.add(centroMCliRestSSPanel4, BorderLayout.CENTER);
+
+        JPanel centroMCliRestSSPanel5 = new JPanel();
+        centroMCliRestSSPanel5.setLayout(new GridBagLayout());
+        centroMCliRestSubPanel.add(centroMCliRestSSPanel5);
+
+        JPanel centroMCliRestSSPanel6 = new JPanel();
+        centroMCliRestSSPanel6.setLayout(new GridBagLayout());
+        centroMCliRestSubPanel.add(centroMCliRestSSPanel6);
+
+        JPanel centroMCliRestSSPanel7 = new JPanel();
+        centroMCliRestSSPanel7.setLayout(new GridBagLayout());
+        centroMCliRestSubPanel.add(centroMCliRestSSPanel7);
+
+        centroMCliRestSSPanel.add(fhoraFMCliRestLabel);
+        centroMCliRestSSPanel1.add(fDataMCliRestLabel);
+        centroMCliRestSSPanel1.add(datePicker3);
+        centroMCliRestSSPanel1.add(fHoraFMCliRestJCBox);
+
+        centroMCliRestSSPanel2.add(fvaloresMedCPMCliRestLabel);
+        centroMCliRestSSPanel2.add(fvaloresMCMCliRestRButton);
+        centroMCliRestSSPanel2.add(fvaloresMPMCliRestRButton);
+        centroMCliRestSSPanel3.add(dez);
+        centroMCliRestSSPanel3.add(dezVinte);
+        centroMCliRestSSPanel3.add(vinteTrinta);
+        centroMCliRestSSPanel3.add(trintaQuarenta);
+        centroMCliRestSSPanel3.add(quarenta);
+
+        centroMCliRestSSPanel4.add(fPontMCliRestLabel);
+        centroMCliRestSSPanel5.add(um);
+        centroMCliRestSSPanel5.add(dois);
+        centroMCliRestSSPanel5.add(tres);
+        centroMCliRestSSPanel5.add(quatro);
+        centroMCliRestSSPanel5.add(cinco);
+
+        centroMCliRestSSPanel6.add(fLotMCliRestLabel);
+        centroMCliRestSSPanel6.add(tabelaMCliRest);
+
+        centroMCliRestSSPanel7.add(fCidMCliRestLabel);
+        centroMCliRestSSPanel7.add(fCidMCliRestJCBox);
+
+        sulMCliRestSubPanel.setLayout(new FlowLayout());
+        sulMCliRestSubPanel.add(voltarMCliRestButton);
+        sulMCliRestSubPanel.add(okMCliRestButton);
+
+
+        voltarMCliRestButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        //todo ver os encaminhamentos
+        okMCliRestButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+    }
+    //todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK
+    //////MENU CLIENTE – CONSULTAR COMENTÁRIOS//////////
+
+    private void construirPanelMCliComentarios(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliComSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliComSubPanel = new JPanel();
+        norteMCliComSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliComSubPanel = new JPanel();
+        JPanel sulMCliComSubPanel = new JPanel();
+
+        JLabel mCliFilComLabel = new JLabel("CONSULTAR COMENTÁRIOS:");
+
+        JLabel mCliFComLabel = new JLabel("PRÓPRIOS");
+        JLabel mCliFComCliLabel = new JLabel("CLIENTE");
+        JLabel mCliFComRestLabel = new JLabel("RESTAURANTE");
+        JLabel mCliFComDatasLabel = new JLabel("INTERVALO DATAS");
+        JLabel mCliFComDataILabel = new JLabel("De");
+        JLabel mCliFComDataFLabel = new JLabel("Até");
+
+//todo faltou visualizar
+        String[] nomeColunasMCliCom = new String[]{
+                "ID", "DATA", "RESTAURNATE"
+        };
+
+        Object[][] data = new Object[][]{
+                {"ID", "DATA", "RESTAURANTE"},
+                {1, "dd/MM/yyy", "A"},
+                {2, "dd/MM/yyy", "B"},
+                {3, "dd/MM/yyy", "C"},
+        };
+        //criação da tabela
+        JTable tabelaMCliFCom = new JTable(data, nomeColunasMCliCom);
+
+        //JPopupMenu popupMenu = new JPopupMenu();
+        //JMenuItem menuItemAdd = new JMenuItem("Responder");
+
+        JTextField mCliFComCliText = new JTextField(17);
+        JTextField mCliFComRestText = new JTextField(17);
+
+//Adição do calendário
+        UtilDateModel model4 = new UtilDateModel();
+        UtilDateModel model5 = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanel3 = new JDatePanelImpl(model4, p);
+        JDatePickerImpl datePicker4 = new JDatePickerImpl(datePanel3, new DateLabelFormatter());
+        JDatePanelImpl datePanel4 = new JDatePanelImpl(model5, p);
+        JDatePickerImpl datePicker5 = new JDatePickerImpl(datePanel4, new DateLabelFormatter());
+
+
+        JButton ptEnMCliRestButton = new JButton("PT/EN");
+        JButton voltarMCliComButton = new JButton("MENU CLIENTE");
+        JButton okMCliComButton = new JButton("OK");
+
+        mCliComSuperPanel.add(norteMCliComSubPanel, "North");
+        mCliComSuperPanel.add(centroMCliComSubPanel, "Center");
+        mCliComSuperPanel.add(sulMCliComSubPanel, "South");
+
+        JPanel norteMCliComSSPanel = new JPanel();
+        norteMCliComSSPanel.setLayout(new FlowLayout());
+        norteMCliComSSPanel.add(mCliFilComLabel);
+        norteMCliComSubPanel.add(norteMCliComSSPanel, BorderLayout.CENTER);
+        norteMCliComSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);
+
+        JPanel centroMCliComSSPanel = new JPanel();
+        centroMCliComSSPanel.setLayout(new FlowLayout());
+        centroMCliComSubPanel.add(centroMCliComSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliComSSPanel1 = new JPanel();
+        centroMCliComSSPanel1.setLayout(new FlowLayout());
+        centroMCliComSubPanel.add(centroMCliComSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliComSSPanel2 = new JPanel();
+        centroMCliComSSPanel2.setLayout(new FlowLayout());
+        centroMCliComSubPanel.add(centroMCliComSSPanel2, BorderLayout.WEST);
+
+        JPanel centroMCliComSSPanel3 = new JPanel();
+        centroMCliComSSPanel3.setLayout(new FlowLayout());
+        centroMCliComSubPanel.add(centroMCliComSSPanel3, BorderLayout.WEST);
+
+        JPanel centroMCliComSSPanel4 = new JPanel();
+        centroMCliComSSPanel4.setLayout(new FlowLayout());
+        centroMCliComSubPanel.add(centroMCliComSSPanel4, BorderLayout.CENTER);
+
+        centroMCliComSSPanel.add(mCliFComLabel);
+        centroMCliComSSPanel.add(tabelaMCliFCom);
+
+        centroMCliComSSPanel1.add(mCliFComCliLabel);
+        centroMCliComSSPanel1.add(mCliFComCliText);
+
+        centroMCliComSSPanel1.add(mCliFComRestLabel);
+        centroMCliComSSPanel1.add(mCliFComRestText);
+
+        centroMCliComSSPanel2.add(mCliFComDatasLabel);
+        centroMCliComSSPanel3.add(mCliFComDataILabel);
+        centroMCliComSSPanel3.add(datePicker4);
+        centroMCliComSSPanel3.add(mCliFComDataFLabel);
+        centroMCliComSSPanel3.add(datePicker5);
+
+        sulMCliComSubPanel.setLayout(new FlowLayout());
+        sulMCliComSubPanel.add(voltarMCliComButton);
+        sulMCliComSubPanel.add(okMCliComButton);
+
+
+        voltarMCliComButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        //todo ver os encaminhamentos para responder comentário
+        okMCliComButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+
+    }
+
+    ////////////////////MENU CLIENTE - ACTUALIZAR DADOS /////////////////////////
+    private void construirPanelMCliAtDados(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliAtDadosSuperPanel) {
+
+        passwordValido = false;
+        confirmarPasswordValido = false;
+
+        /////SUBPAINEIS//////
+        JPanel norteAtDadosMCliSubPanel = new JPanel();
+        norteAtDadosMCliSubPanel.setLayout(new BorderLayout());
+        JPanel centroAtDadosMCliSubPanel = new JPanel();
+        JPanel sulAtDadosMCliSubPanel = new JPanel();
+
+        JLabel atDadosMCliLabel = new JLabel("ACTUALIZAR DADOS");
+        atDadosMCliLabel.setForeground(Color.BLUE);
+        JLabel nomeCliMCliLabel = new JLabel("Nome");
+        //nomeCliMCliLabel.setBounds(50,80,100,20);
+        JLabel emailCliMCliLabel = new JLabel("E-mail");
+        JLabel moradaCliMCliLabel = new JLabel("Morada");
+        JLabel telemovelCliMCliLabel = new JLabel("Telemóvel");
+        JLabel usernameCliMCliLabel = new JLabel("Username");
+        JLabel passwordCliMCliLabel = new JLabel("Password");
+        JLabel confirmarPasswordCliMCliLabel = new JLabel("Confirmar password: ");
+
+        JTextField nomeCliMCliText = new JTextField(20);
+        nomeCliMCliText.setMargin(new Insets(3, 3, 3, 3));
+        JTextField emailCliMCliText = new JTextField(20);
+        JTextField moradaCliMCliText = new JTextField(20);
+        JTextField telemovelCliMCliText = new JTextField(20);
+        JTextField usernameCliMCliText = new JTextField(20);
+
+        JPasswordField passwordCliMCliField = new JPasswordField(20);
+        passwordCliMCliField.addFocusListener(new FocusListener() {
+            @Override
+            public void focusGained(FocusEvent e) {
+                passwordValido = true;
+            }
+
+            @Override
+            public void focusLost(FocusEvent e) {
+                if (passwordCliMCliField.getPassword().length<6) {
+                    passwordValido = false;
+                }
+
+            }
+        });
+        JPasswordField confirmarPassawordCliMCliField = new JPasswordField(20);
+        confirmarPassawordCliMCliField.addFocusListener(new FocusListener() {
+            @Override
+            public void focusGained(FocusEvent e) {
+                confirmarPasswordValido = true;
+            }
+
+            @Override
+            public void focusLost(FocusEvent e) {
+                if (!passwordCliMCliField.getPassword().equals(confirmarPassawordCliMCliField.getPassword())) {
+                    confirmarPasswordValido = false;
+                }
+
+            }
+        });
+        JButton ptEnAtDadosMCliButton = new JButton("PT/EN");
+        JButton voltarCliMCliButton = new JButton("MENU CLIENTE");
+        JButton actualizarCliMCliButton = new JButton("ACTUALIZAR");
+        actualizarCliMCliButton.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                if(!passwordValido){
+                    JOptionPane.showMessageDialog(((Component) e.getSource()).getParent(),"Password Inválido!");
+                    passwordCliMCliField.requestFocus();
+                    return;
+                }
+                if(!confirmarPasswordValido) {
+                    JOptionPane.showMessageDialog(((Component) e.getSource()).getParent(), "Password Inválido!");
+                    confirmarPassawordCliMCliField.requestFocus();
+                    return;
+                }
+
+            }
+        });
+
+        mCliAtDadosSuperPanel.add(norteAtDadosMCliSubPanel, "North");
+        mCliAtDadosSuperPanel.add(centroAtDadosMCliSubPanel, "Center");
+        mCliAtDadosSuperPanel.add(sulAtDadosMCliSubPanel, "South");
+
+        JPanel norteAtDadosMCliSSPanel = new JPanel();
+        norteAtDadosMCliSSPanel.setLayout(new FlowLayout());
+        norteAtDadosMCliSSPanel.add(atDadosMCliLabel);
+        norteAtDadosMCliSubPanel.add(norteAtDadosMCliSSPanel, BorderLayout.CENTER);
+        norteAtDadosMCliSubPanel.add(ptEnAtDadosMCliButton, BorderLayout.EAST);
+
+        JPanel centroAtDadosMCliSSPanel = new JPanel();
+        centroAtDadosMCliSSPanel.setLayout(new GridLayout(7, 2));
+        centroAtDadosMCliSubPanel.add(centroAtDadosMCliSSPanel);
+        centroAtDadosMCliSSPanel.add(nomeCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(nomeCliMCliText);
+        centroAtDadosMCliSSPanel.add(emailCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(emailCliMCliText);
+        centroAtDadosMCliSSPanel.add(moradaCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(moradaCliMCliText);
+        centroAtDadosMCliSSPanel.add(telemovelCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(telemovelCliMCliText);
+        centroAtDadosMCliSSPanel.add(usernameCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(usernameCliMCliText);
+        centroAtDadosMCliSSPanel.add(passwordCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(passwordCliMCliField);
+        centroAtDadosMCliSSPanel.add(confirmarPasswordCliMCliLabel);
+        centroAtDadosMCliSSPanel.add(confirmarPassawordCliMCliField);
+
+        sulAtDadosMCliSubPanel.setLayout(new FlowLayout());
+        sulAtDadosMCliSubPanel.add(voltarCliMCliButton);
+        sulAtDadosMCliSubPanel.add(actualizarCliMCliButton);
+
+
+        actualizarCliMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarCliMCliButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+// todo verificar os botões editar e apagar que estão em conflito com visualizar
+    //////MENU CLIENTE – RESERVAS - ACTIVAS//////////
+
+    private void construirPanelMCliResAct(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliResActSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliResActSubPanel = new JPanel();
+        norteMCliResActSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliResActSubPanel = new JPanel();
+        JPanel sulMCliResActSubPanel = new JPanel();
+
+        JLabel mCliTitHistResActLabel = new JLabel("MENU CLIENTE - RESERVAS ACTIVAS");
+        JLabel mCliIdHistResActLabel = new JLabel("ID");
+
+        String[] mCliIdHistResAct = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
+        JComboBox arrayMCliIdHistResActCBox = new JComboBox(mCliIdHistResAct);
+
+//todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, editar e cancelar
+        String[] nomeColunasMCliResAct = new String[]{
+                "ID", "DATA", "RESTAURNATE"
+        };
+
+        Object[][] dados = new Object[][]{
+                {"ID", "DATA", "RESTAURANTE"},
+                {1, "dd/MM/yyy", "A"},
+                {2, "dd/MM/yyy", "B"},
+                {3, "dd/MM/yyy", "C"},
+        };
+        //criação da tabela
+        JTable tabelaMCliResAct = new JTable(dados, nomeColunasMCliResAct);
+
+        JButton ptEnMCliRestButton = new JButton("PT/EN");
+        JButton voltarMCliResActButton = new JButton("MENU CLIENTE");
+        JButton visualizarMCliResActButton = new JButton("VISUALIZAR");
+        JButton retonarMCliResActButton = new JButton("RETORNAR");
+
+        JRadioButton editarMCliResActButton = new JRadioButton("EDITAR");
+        JRadioButton apagarMCliResActButton = new JRadioButton("APAGAR");
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(editarMCliResActButton);
+        group.add(apagarMCliResActButton);
+
+        mCliResActSuperPanel.add(norteMCliResActSubPanel, "North");
+        mCliResActSuperPanel.add(centroMCliResActSubPanel, "Center");
+        mCliResActSuperPanel.add(sulMCliResActSubPanel, "South");
+
+        JPanel norteMCliResActSSPanel = new JPanel();
+        norteMCliResActSSPanel.setLayout(new FlowLayout());
+        norteMCliResActSSPanel.add(mCliTitHistResActLabel);
+        norteMCliResActSubPanel.add(norteMCliResActSSPanel, BorderLayout.CENTER);
+        norteMCliResActSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);
+
+        JPanel centroMCliResActSSPanel = new JPanel();
+        centroMCliResActSSPanel.setLayout(new FlowLayout());
+        centroMCliResActSubPanel.add(centroMCliResActSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliResActSSPanel1 = new JPanel();
+        centroMCliResActSSPanel1.setLayout(new FlowLayout());
+        centroMCliResActSubPanel.add(centroMCliResActSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliResActSSPanel2 = new JPanel();
+        centroMCliResActSSPanel2.setLayout(new FlowLayout());
+        centroMCliResActSubPanel.add(centroMCliResActSSPanel2, BorderLayout.WEST);
+
+        centroMCliResActSSPanel.add(tabelaMCliResAct);
+        centroMCliResActSSPanel1.add(mCliIdHistResActLabel);
+        centroMCliResActSSPanel1.add(arrayMCliIdHistResActCBox);
+        centroMCliResActSSPanel2.add(editarMCliResActButton);
+        centroMCliResActSSPanel2.add(apagarMCliResActButton);
+
+        sulMCliResActSubPanel.setLayout(new FlowLayout());
+        sulMCliResActSubPanel.add(voltarMCliResActButton);
+        sulMCliResActSubPanel.add(retonarMCliResActButton);
+        sulMCliResActSubPanel.add(visualizarMCliResActButton);
+
+
+        visualizarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        editarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        apagarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retonarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliResActButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+
+    //////MENU CLIENTE – FAZER RESERVAS//////////
+    private void construirPanelMCliFazerRes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliFazerResSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliFResSubPanel = new JPanel();
+        norteMCliFResSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliFResSubPanel = new JPanel();
+        JPanel sulMCliFResSubPanel = new JPanel();
+
+        JLabel mCliTitFResLabel = new JLabel("MENU CLIENTE - FAZER RESERVAS");
+        JLabel tipoResMCliFResLabel = new JLabel("TIPO DE RESERVA:");
+        JLabel nomeResMCliFResLabel = new JLabel("RESTAURANTE:");
+
+        JTextField nomeResMCliFResText = new JTextField(25);
+
+        JRadioButton presencialMCliFResRButton = new JRadioButton("PRESENCIAL");
+        JRadioButton takeAwayMCliFResRButton = new JRadioButton("TAKE-AWAY");
+
+        ButtonGroup group = new ButtonGroup();
+        group.add(presencialMCliFResRButton);
+        group.add(takeAwayMCliFResRButton);
+
+        JButton ptEnMCliFResButton = new JButton("PT/EN");
+        JButton voltarMCliFResButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliFResButton = new JButton("VOLTAR");
+
+        mCliFazerResSuperPanel.add(norteMCliFResSubPanel, "North");
+        mCliFazerResSuperPanel.add(centroMCliFResSubPanel, "Center");
+        mCliFazerResSuperPanel.add(sulMCliFResSubPanel, "South");
+
+        JPanel norteMCliFResSSPanel = new JPanel();
+        norteMCliFResSSPanel.setLayout(new FlowLayout());
+        norteMCliFResSSPanel.add(mCliTitFResLabel);
+        norteMCliFResSubPanel.add(norteMCliFResSSPanel, BorderLayout.CENTER);
+        norteMCliFResSubPanel.add(ptEnMCliFResButton, BorderLayout.EAST);
+
+        JPanel centroMCliFResSSPanel = new JPanel();
+        centroMCliFResSSPanel.setLayout(new FlowLayout());
+        centroMCliFResSubPanel.add(centroMCliFResSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliFResSSPanel1 = new JPanel();
+        centroMCliFResSSPanel1.setLayout(new FlowLayout());
+        centroMCliFResSubPanel.add(centroMCliFResSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliFResSSPanel2 = new JPanel();
+        centroMCliFResSSPanel2.setLayout(new FlowLayout());
+        centroMCliFResSubPanel.add(centroMCliFResSSPanel2, BorderLayout.WEST);
+
+        JPanel centroMCliFResSSPanel3 = new JPanel();
+        centroMCliFResSSPanel3.setLayout(new GridLayout(1, 1));
+        centroMCliFResSubPanel.add(centroMCliFResSSPanel3, BorderLayout.WEST);
+
+        //todo ver como listar o restaurantes
+        centroMCliFResSSPanel1.add(nomeResMCliFResLabel);
+        centroMCliFResSSPanel1.add(nomeResMCliFResText);
+        centroMCliFResSSPanel2.add(tipoResMCliFResLabel);
+        centroMCliFResSSPanel3.add(presencialMCliFResRButton);
+        centroMCliFResSSPanel3.add(takeAwayMCliFResRButton);
+
+        sulMCliFResSubPanel.setLayout(new FlowLayout());
+        sulMCliFResSubPanel.add(voltarMCliFResButton);
+        sulMCliFResSubPanel.add(retornarMCliFResButton);
+
+        presencialMCliFResRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRESP_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        takeAwayMCliFResRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRESTA_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliFResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIRESERVAS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliFResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+    }
+
+
+    //////MENU CLIENTE – FAZER RESERVA PRESENCIAL//////////
+    private void construirPanelMCliFazerResP(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliFazerResPSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliFResPSubPanel = new JPanel();
+        norteMCliFResPSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliFResPSubPanel = new JPanel();
+        JPanel sulMCliFResPSubPanel = new JPanel();
+
+        JLabel mCliTitFResPLabel = new JLabel("FAZER RESERVAS PRESENCIAL");
+        JLabel diaMCliFResPLabel = new JLabel("DIA");
+        JLabel horaMCliFResPLabel = new JLabel("HORA");
+        //JLabel horaDeMCliFResPLabel = new JLabel("De");
+        //JLabel horaAteMCliFResPLabel = new JLabel("Até");
+        JLabel qtdePessoasMCliFResPLabel = new JLabel("QUANTIDADE DE PESSOAS");
+        JLabel msgMCliFResPLabel = new JLabel("Contatar diretamente o restaurante no caso de reservas para mais de 20 pessoas");
+
+        String[] horaDeMCliFRes = {"", "11h", "11h30", "12h", "12h30", "13h", "13h30", "14h", "14h30", "15h", "15h30", "19h", "19h30", "20h", "20h30", "21h", "21h30", "22h", "22h30"};
+        JComboBox arrayHoraDeMCliFResPCBox = new JComboBox(horaDeMCliFRes);
+
+        //todo verificar se não deve mesmo constar
+        //String [] horaAteMCliFRes = {"","12h","12h30","13h","13h30","14h","14h30","15h","15h30","19h","19h30","20h","20h30","21h","21h30","22h","22h30"};
+        //JComboBox arrayHoraAteMCliFResPCBox = new JComboBox(horaAteMCliFRes);
+
+        String[] qtdePessoasMCliFRes = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"};
+        JComboBox arrayQtdePessoasMCliFResPCBox = new JComboBox(qtdePessoasMCliFRes);
+
+        JButton ptEnMCliFResPButton = new JButton("PT/EN");
+        JButton voltarMCliFResPButton = new JButton("MENU CLIENTE");
+        JButton confirmarMCliFResPButton = new JButton("OK");
+        JButton retornarMCliFResPButton = new JButton("VOLTAR");
+
+        //Adição do calendário
+        UtilDateModel model1 = new UtilDateModel();
+        UtilDateModel model6 = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanel5 = new JDatePanelImpl(model6, p);
+        JDatePickerImpl datePicker6 = new JDatePickerImpl(datePanel5, new DateLabelFormatter());
+
+        mCliFazerResPSuperPanel.add(norteMCliFResPSubPanel, "North");
+        mCliFazerResPSuperPanel.add(centroMCliFResPSubPanel, "Center");
+        mCliFazerResPSuperPanel.add(sulMCliFResPSubPanel, "South");
+
+        JPanel norteMCliFResSPPSSPanel = new JPanel();
+        norteMCliFResSPPSSPanel.setLayout(new FlowLayout());
+        norteMCliFResSPPSSPanel.add(mCliTitFResPLabel);
+        norteMCliFResPSubPanel.add(norteMCliFResSPPSSPanel, BorderLayout.CENTER);
+        norteMCliFResPSubPanel.add(ptEnMCliFResPButton, BorderLayout.EAST);
+
+        JPanel centroMCliFResPSSPanel = new JPanel();
+        centroMCliFResPSSPanel.setLayout(new FlowLayout());
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliFResPSSPanel1 = new JPanel();
+        centroMCliFResPSSPanel1.setLayout(new FlowLayout());
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliFResPSSPanel2 = new JPanel();
+        centroMCliFResPSSPanel2.setLayout(new FlowLayout());
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel2, BorderLayout.WEST);
+
+        JPanel centroMCliFResPSSPanel3 = new JPanel();
+        centroMCliFResPSSPanel3.setLayout(new GridLayout(1, 1));
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel3, BorderLayout.WEST);
+
+        JPanel centroMCliFResPSSPanel4 = new JPanel();
+        centroMCliFResPSSPanel4.setLayout(new FlowLayout());
+        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel4, BorderLayout.WEST);
+
+        centroMCliFResPSSPanel.add(diaMCliFResPLabel);
+        centroMCliFResPSSPanel.add(datePicker6);
+        centroMCliFResPSSPanel1.add(horaMCliFResPLabel);
+        //centroMCliFResPSSPanel2.add(horaDeMCliFResPLabel);
+        centroMCliFResPSSPanel2.add(arrayHoraDeMCliFResPCBox);
+        //centroMCliFResPSSPanel2.add(horaAteMCliFResPLabel);
+        //centroMCliFResPSSPanel2.add(arrayHoraAteMCliFResPCBox);
+
+        centroMCliFResPSSPanel3.add(qtdePessoasMCliFResPLabel);
+        centroMCliFResPSSPanel3.add(arrayQtdePessoasMCliFResPCBox);
+        centroMCliFResPSSPanel4.add(msgMCliFResPLabel);
+
+        sulMCliFResPSubPanel.setLayout(new FlowLayout());
+        sulMCliFResPSubPanel.add(voltarMCliFResPButton);
+        sulMCliFResPSubPanel.add(retornarMCliFResPButton);
+        sulMCliFResPSubPanel.add(confirmarMCliFResPButton);
+
+        voltarMCliFResPButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliFResPButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        //todo ver os encaminhamentos
+        confirmarMCliFResPButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, LOGIN_CARD);
+            this.setSize(500, 180);
+        });
+
+    }
+
+    //////MENU CLIENTE – FAZER RESERVA TAKE-AWAY//////////
+    private void construirPanelMCliFazerResTA(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliFazerResTASuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliFResTASubPanel = new JPanel();
+        norteMCliFResTASubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliFResTASubPanel = new JPanel();
+        JPanel sulMCliFResTASubPanel = new JPanel();
+
+        JLabel mCliTitFResTALabel = new JLabel("FAZER RESERVAS TAKE-AWAY");
+        JLabel horaMCliFResTALabel = new JLabel("HORA");
+        JLabel idMCliFResTALabel = new JLabel("ID");
+        JLabel qtdePratosMCliFResTALabel = new JLabel("QUANTIDADE");
+        JLabel pratosMCliFResTALabel = new JLabel("PRATOS");
+
+        String[] horasMCliFResTA = {"", "11h30", "12h", "12h30", "13h", "13h30", "14h", "14h30", "15h", "15h30", "19h", "19h30", "20h", "20h30", "21h", "21h30", "22h", "22h30"};
+        JComboBox arrayHorasMCliFResTACBox = new JComboBox(horasMCliFResTA);
+
+        String[] idMCliFResTA = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
+        JComboBox arrayIdMCliFResTACBox = new JComboBox(idMCliFResTA);
+
+        String[] qtdePratosMCliFResTA = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"};
+        JComboBox arrayQtdePratosMCliFResTACBox = new JComboBox(qtdePratosMCliFResTA);
+
+//todo possibilitar que o prato possa ser selecionado
+        String[] nomeColunasMCliFResTA = new String[]{
+                "ID", "NOME", "DESCRIÇÃO", "PREÇO", "TIPO"
+        };
+
+        Object[][] dados = new Object[][]{
+                {"ID", "NOME", "DESCRIÇÃO", "PREÇO", "TIPO"},
+                {1, "Sardinha", "Assada", "15.0", "Carta"},
+                {2, "Peru", "Ensopado", "15.0", "Prato do Dia"},
+                {3, "Bifana", "Frita", "15.0", "Carta"},
+                {4, "Sardinha", "Assada", "15.0", "Carta"},
+                {5, "Peru", "Ensopado", "15.0", "Prato do Dia"},
+                {6, "Bifana", "Frita", "15.0", "Carta"},
+
+        };
+        //criação da tabela
+        JTable tabelaMCliFResTA = new JTable(dados, nomeColunasMCliFResTA);
+
+        JButton ptEnMCliFResTAButton = new JButton("PT/EN");
+        JButton voltarMCliFResTAButton = new JButton("MENU CLIENTE");
+        JButton adicionarMCliFResTAButton = new JButton("ADICIONAR");
+        JButton retornarMCliFResButton = new JButton("VOLTAR");
+        JButton finalizarMCliFResTAButton = new JButton("FINALIZAR");
+
+        mCliFazerResTASuperPanel.add(norteMCliFResTASubPanel, "North");
+        mCliFazerResTASuperPanel.add(centroMCliFResTASubPanel, "Center");
+        mCliFazerResTASuperPanel.add(sulMCliFResTASubPanel, "South");
+
+        JPanel norteMCliFResTASSPanel = new JPanel();
+        norteMCliFResTASSPanel.setLayout(new FlowLayout());
+        norteMCliFResTASSPanel.add(mCliTitFResTALabel);
+        norteMCliFResTASubPanel.add(norteMCliFResTASSPanel, BorderLayout.CENTER);
+        norteMCliFResTASubPanel.add(ptEnMCliFResTAButton, BorderLayout.EAST);
+
+        JPanel centroMCliFResTASSPanel = new JPanel();
+        centroMCliFResTASSPanel.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel, BorderLayout.WEST);
+
+        JPanel centroMCliFResTASSPanel1 = new JPanel();
+        centroMCliFResTASSPanel1.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel1, BorderLayout.WEST);
+
+        JPanel centroMCliFResTASSPanel2 = new JPanel();
+        centroMCliFResTASSPanel2.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel2, BorderLayout.WEST);
+
+        JPanel centroMCliFResTASSPanel3 = new JPanel();
+        centroMCliFResTASSPanel3.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel3, BorderLayout.CENTER);
+
+        JPanel centroMCliFResTASSPanel4 = new JPanel();
+        centroMCliFResTASSPanel4.setLayout(new FlowLayout());
+        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel4, BorderLayout.WEST);
+
+        centroMCliFResTASSPanel.add(horaMCliFResTALabel);
+        centroMCliFResTASSPanel1.add(arrayHorasMCliFResTACBox);
+        centroMCliFResTASSPanel3.add(pratosMCliFResTALabel);
+        centroMCliFResTASSPanel3.add(tabelaMCliFResTA);
+        centroMCliFResTASSPanel4.add(idMCliFResTALabel);
+        centroMCliFResTASSPanel4.add(arrayIdMCliFResTACBox);
+        centroMCliFResTASSPanel4.add(qtdePratosMCliFResTALabel);
+        centroMCliFResTASSPanel4.add(arrayQtdePratosMCliFResTACBox);
+
+        sulMCliFResTASubPanel.setLayout(new FlowLayout());
+        sulMCliFResTASubPanel.add(voltarMCliFResTAButton);
+        sulMCliFResTASubPanel.add(retornarMCliFResButton);
+        sulMCliFResTASubPanel.add(adicionarMCliFResTAButton);
+        sulMCliFResTASubPanel.add(finalizarMCliFResTAButton);
+
+
+        voltarMCliFResTAButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliFResButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        //todo fazer nova página com valor final (botoes de finalizar, editar e remover com quantidade)
+        finalizarMCliFResTAButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        //todo ver os encaminhamentos
+        adicionarMCliFResTAButton.addActionListener(e -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIFAZERRES_CARD);
+            this.setSize(500, 180);
+        });
 
 
         this.setVisible(true);
     }
+
 }
\ No newline at end of file
Index: src/com/company/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company;\r\n\r\nimport GUI.Frame;\r\n\r\n\r\nimport java.time.LocalTime;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.GregorianCalendar;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) throws Exception, ClassNotFoundException {\r\n        Scanner sc = new Scanner(System.in);\r\n        Sistema sistema = new Sistema();\r\n\r\n\r\n        // Frame f = new Frame();\r\n\r\n\r\n        sistema.criarRestaurante(\"Rest1\", \"ruaR1\", \"921\", \"mail1@a.pt\", \"userR1\", \"pass\", \"pass\", 10, 10, 10, LocalTime.of(11, 30), LocalTime.of(15, 00), LocalTime.of(18, 30), LocalTime.of(22, 00));\r\n        sistema.criarRestaurante(\"Rest2\", \"ruaR2\", \"912\", \"mail2@a.pt\", \"userR2\", \"pass\", \"pass\", 20, 20, 20, LocalTime.of(11, 30), LocalTime.of(15, 00), LocalTime.of(18, 30), LocalTime.of(22, 00));\r\n        sistema.criarRestaurante(\"Rest3\", \"ruaR3\", \"9133\", \"mail3@aa.com\", \"userR3\", \"pass\", \"pass\", 30, 30, 30, LocalTime.of(11, 30), LocalTime.of(15, 00), LocalTime.of(18, 30), LocalTime.of(22, 00));\r\n\r\n        sistema.getListaRestaurantes().get(0).getEmenta().adicionarPratoACarta(\"sardinhas\", \"assadas\", 12.2);\r\n\r\n\r\n        sistema.criarCliente(\"cli1\", \"RuaC1\", \"961\", \"mailR1@gmail.com\", \"userC1\", \"pass\", \"pass\");\r\n        sistema.criarCliente(\"cli2\", \"RuaC2\", \"962\", \"mailR2@gmail.com\", \"userC2\", \"pass\", \"pass\");\r\n        sistema.criarCliente(\"cli3\", \"RuaC3\", \"963\", \"mailR3@gmail.com\", \"userC3\", \"pass\", \"pass\");\r\n\r\n\r\n        sistema.criarCliente(\"Adriano\", \"Sesamo\", \"966\", \"adriano_t@out.com\", \"adriano\", \"pass\", \"pass\");\r\n\r\n\r\n        System.out.println(\"LISTA UTILIZADORES\");\r\n        System.out.println(sistema.getListaUtilizadores());\r\n        System.out.println(\"---------------------\");\r\n\r\n        System.out.println(\"LISTA UTILIZADORES C STATUS TRUE\");\r\n        sistema.getListaUtilizadores().get(1).setStatus(false);\r\n        sistema.getListaUtilizadores().get(4).setStatus(false);\r\n\r\n//A forma de imprimir todos, excepto o que teem status false, sem ser com ciclo for??\r\n        for (int i = 0; i < sistema.getListaUtilizadores().size(); i++) {\r\n            if (sistema.getListaUtilizadores().get(i).getStatus() == true) {\r\n                System.out.println(sistema.getListaUtilizadores().get(i));\r\n            }\r\n        }\r\n        System.out.println(\"--------------------------------\");\r\n\r\n        ///NAO FUNCIONA O CRIAR RESERVA///\r\n//\r\n        System.out.println(\"CRIAR RESERVAS\");\r\n//        sistema.getClienteAtivo().criarReservaPresencial(\r\n//                (Restaurante) sistema.getListaUtilizadores().get(1), new GregorianCalendar(2020, 10, 10), LocalTime.of(21, 00), 1, 5);\r\n      //  System.out.println(sistema.getClienteAtivo().getListaReservas());\r\n        System.out.println(\"---------------------\");\r\n\r\n\r\n        System.out.println(\"LISTACOMENTARIOS\");\r\n        sistema.adicionarComentarioCliente(sistema.getClienteAtivo(),\r\n                \"Excelente\", 4,\r\n                (Restaurante) sistema.getListaUtilizadores().get(0));\r\n        sistema.adicionarComentarioCliente(sistema.getClienteAtivo(),\r\n                \"Horrivel\", 4,\r\n                (Restaurante) sistema.getListaUtilizadores().get(2));\r\n\r\n        //       sistema.listaComentarios.add(new Comentario(\"Horrivel\", 4, (Cliente) sistema.listaUtilizadores.get(3),(Restaurante) sistema.listaUtilizadores.get(2)));\r\n        System.out.println(sistema.getListaComentarios());\r\n        System.out.println(\"----------------------\");\r\n\r\n\r\n        //Neste ciclo, só vai buscar os comentarios de restaurante X, esta é feito à PEDREIRO!\r\n        for (int i = 0; i < sistema.getListaComentarios().size(); i++) {\r\n            if (sistema.getListaComentarios().get(i).getRestaurante().equals(sistema.getListaUtilizadores().get(0))) {\r\n                System.out.println(sistema.getListaComentarios().get(i));\r\n            }\r\n        }\r\n\r\n        //ESTA PARTE É PARA COLOCAR NA INTERFACE\r\n//        if (resultado.length()==0){\r\n//            // criar janel de login com sucesso\r\n//        } else {\r\n//            // criar janela com mensagem de erro\r\n//        }\r\n\r\n//       Utilizador u = sistema.listaUtilizadores.get(3);\r\n//               if (u instanceof Cliente) {\r\n//                   sistema.utilizador.listaReservas.add(new TakeAway((Cliente) sistema.listaUtilizadores.get(3), , 2020, 7, 5, 18, 30, 5));\r\n//               }else {\r\n//                   System.out.println(\"nao é um cliente\");\r\n//               }\r\n\r\n\r\n        System.out.println(\"LISTA RESERVAS\");\r\n        if (sistema.getClienteAtivo() != null) {\r\n            ArrayList<Reserva> listaReservaC = sistema.getClienteAtivo().getListaReservas();\r\n\r\n        }\r\n\r\n\r\n//            String resultadoo = sistema.login(\"joao\",\"xpto\");\r\n//            if (resultado.length()==0){\r\n//                // criar janel de login com sucesso\r\n//            } else {\r\n//                // criar janela com mensagem de erro\r\n//            }\r\n\r\n        // ArrayList<Reserva> listaReservaR = sistema.getRestauranteAtivo().getListaReservas();\r\n        //   }\r\n\r\n\r\n        //sistema.utilizador.cliente.restauranteAberto(18,30);\r\n        System.out.println(\"--------------------\");\r\n\r\n\r\n//       if ( sistema.cliente.restauranteAberto(16,00)){\r\n//           System.out.println(\"Fechado\");\r\n//       } else System.out.println(\"Aberto\");\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/Main.java	(revision f2cd0fea31c08a3416f9d5bc8383fa6a34583c8b)
+++ src/com/company/Main.java	(date 1609411999449)
@@ -1,12 +1,8 @@
 package com.company;
 
-import GUI.Frame;
-
 
 import java.time.LocalTime;
 import java.util.ArrayList;
-import java.util.Calendar;
-import java.util.GregorianCalendar;
 import java.util.Scanner;
 
 public class Main {
Index: src/Text.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- src/Text.properties	(date 1609193755324)
+++ src/Text.properties	(date 1609193755324)
@@ -0,0 +1,3 @@
+text.today=Today
+text.month=Month;
+text.year=Year;
\ No newline at end of file
Index: src/com/company/gui/util/DateLabelFormatter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/gui/util/DateLabelFormatter.java	(date 1609412064034)
+++ src/com/company/gui/util/DateLabelFormatter.java	(date 1609412064034)
@@ -0,0 +1,28 @@
+package com.company.gui.util;
+
+import javax.swing.JFormattedTextField.AbstractFormatter;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+
+public class DateLabelFormatter extends AbstractFormatter {
+
+    private String datePattern = "dd-MM-yyyy";
+    private SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);
+
+    @Override
+    public Object stringToValue(String text) throws ParseException {
+        return dateFormatter.parseObject(text);
+    }
+
+    @Override
+    public String valueToString(Object value) throws ParseException {
+        if (value != null) {
+            Calendar cal = (Calendar) value;
+            return dateFormatter.format(cal.getTime());
+        }
+
+        return "";
+    }
+
+}
\ No newline at end of file
Index: src/GUI/JLinkButton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.plaf.ComponentUI;\r\nimport javax.swing.plaf.metal.MetalButtonUI;\r\nimport java.awt.*;\r\nimport java.net.URL;\r\n\r\npublic class JLinkButton extends JButton {\r\n  private static final String uiString = \"LinkButtonUI\";\r\n\r\n  public static final int ALWAYS_UNDERLINE = 0;\r\n\r\n  public static final int HOVER_UNDERLINE = 1;\r\n\r\n  public static final int NEVER_UNDERLINE = 2;\r\n\r\n  public static final int SYSTEM_DEFAULT = 3;\r\n\r\n  private int linkBehavior;\r\n\r\n  private Color linkColor;\r\n\r\n  private Color colorPressed;\r\n\r\n  private Color visitedLinkColor;\r\n\r\n  private Color disabledLinkColor;\r\n\r\n  private URL buttonURL;\r\n\r\n  private Action defaultAction;\r\n\r\n  private boolean isLinkVisited;\r\n\r\n  public static void main(String[] a) {\r\n    JFrame f = new JFrame();\r\n    f.getContentPane().setLayout(new GridLayout(0,2));\r\n    f.getContentPane().add(new JLinkButton(\"www.java2s.com\"));\r\n    f.getContentPane().add(new JLinkButton(\"www.java2s.com/ExampleCode/CatalogExampleCode.htm\"));\r\n    f.setSize(600, 200);\r\n    f.setVisible(true);\r\n  }\r\n\r\n  public JLinkButton() {\r\n    this(null, null, null);\r\n  }\r\n\r\n  public JLinkButton(Action action) {\r\n    this();\r\n    setAction(action);\r\n  }\r\n\r\n  public JLinkButton(Icon icon) {\r\n    this(null, icon, null);\r\n  }\r\n\r\n  public JLinkButton(String s) {\r\n    this(s, null, null);\r\n  }\r\n\r\n  public JLinkButton(URL url) {\r\n    this(null, null, url);\r\n  }\r\n\r\n  public JLinkButton(String s, URL url) {\r\n    this(s, null, url);\r\n  }\r\n\r\n  public JLinkButton(Icon icon, URL url) {\r\n    this(null, icon, url);\r\n  }\r\n\r\n  public JLinkButton(String text, Icon icon, URL url) {\r\n    super(text, icon);\r\n    linkBehavior = SYSTEM_DEFAULT;\r\n    linkColor = Color.blue;\r\n    colorPressed = Color.red;\r\n    visitedLinkColor = new Color(128, 0, 128);\r\n    if (text == null && url != null)\r\n      setText(url.toExternalForm());\r\n    setLinkURL(url);\r\n    setCursor(Cursor.getPredefinedCursor(12));\r\n    setBorderPainted(false);\r\n    setContentAreaFilled(false);\r\n    setRolloverEnabled(true);\r\n    addActionListener(defaultAction);\r\n  }\r\n\r\n  public void updateUI() {\r\n    setUI(BasicLinkButtonUI.createUI(this));\r\n  }\r\n\r\n  private void setDefault() {\r\n    UIManager.getDefaults().put(\"LinkButtonUI\", \"BasicLinkButtonUI\");\r\n  }\r\n\r\n  public String getUIClassID() {\r\n    return \"LinkButtonUI\";\r\n  }\r\n\r\n  protected void setupToolTipText() {\r\n    String tip = null;\r\n    if (buttonURL != null)\r\n      tip = buttonURL.toExternalForm();\r\n    setToolTipText(tip);\r\n  }\r\n\r\n  public void setLinkBehavior(int bnew) {\r\n    checkLinkBehaviour(bnew);\r\n    int old = linkBehavior;\r\n    linkBehavior = bnew;\r\n    firePropertyChange(\"linkBehavior\", old, bnew);\r\n    repaint();\r\n  }\r\n\r\n  private void checkLinkBehaviour(int beha) {\r\n    if (beha != ALWAYS_UNDERLINE && beha != HOVER_UNDERLINE\r\n        && beha != NEVER_UNDERLINE && beha != SYSTEM_DEFAULT)\r\n      throw new IllegalArgumentException(\"Not a legal LinkBehavior\");\r\n    else\r\n      return;\r\n  }\r\n\r\n  public int getLinkBehavior() {\r\n    return linkBehavior;\r\n  }\r\n\r\n  public void setLinkColor(Color color) {\r\n    Color colorOld = linkColor;\r\n    linkColor = color;\r\n    firePropertyChange(\"linkColor\", colorOld, color);\r\n    repaint();\r\n  }\r\n\r\n  public Color getLinkColor() {\r\n    return linkColor;\r\n  }\r\n\r\n  public void setActiveLinkColor(Color colorNew) {\r\n    Color colorOld = colorPressed;\r\n    colorPressed = colorNew;\r\n    firePropertyChange(\"activeLinkColor\", colorOld, colorNew);\r\n    repaint();\r\n  }\r\n\r\n  public Color getActiveLinkColor() {\r\n    return colorPressed;\r\n  }\r\n\r\n  public void setDisabledLinkColor(Color color) {\r\n    Color colorOld = disabledLinkColor;\r\n    disabledLinkColor = color;\r\n    firePropertyChange(\"disabledLinkColor\", colorOld, color);\r\n    if (!isEnabled())\r\n      repaint();\r\n  }\r\n\r\n  public Color getDisabledLinkColor() {\r\n    return disabledLinkColor;\r\n  }\r\n\r\n  public void setVisitedLinkColor(Color colorNew) {\r\n    Color colorOld = visitedLinkColor;\r\n    visitedLinkColor = colorNew;\r\n    firePropertyChange(\"visitedLinkColor\", colorOld, colorNew);\r\n    repaint();\r\n  }\r\n\r\n  public Color getVisitedLinkColor() {\r\n    return visitedLinkColor;\r\n  }\r\n\r\n  public URL getLinkURL() {\r\n    return buttonURL;\r\n  }\r\n\r\n  public void setLinkURL(URL url) {\r\n    URL urlOld = buttonURL;\r\n    buttonURL = url;\r\n    setupToolTipText();\r\n    firePropertyChange(\"linkURL\", urlOld, url);\r\n    revalidate();\r\n    repaint();\r\n  }\r\n\r\n  public void setLinkVisited(boolean flagNew) {\r\n    boolean flagOld = isLinkVisited;\r\n    isLinkVisited = flagNew;\r\n    firePropertyChange(\"linkVisited\", flagOld, flagNew);\r\n    repaint();\r\n  }\r\n\r\n  public boolean isLinkVisited() {\r\n    return isLinkVisited;\r\n  }\r\n\r\n  public void setDefaultAction(Action actionNew) {\r\n    Action actionOld = defaultAction;\r\n    defaultAction = actionNew;\r\n    firePropertyChange(\"defaultAction\", actionOld, actionNew);\r\n  }\r\n\r\n  public Action getDefaultAction() {\r\n    return defaultAction;\r\n  }\r\n\r\n  protected String paramString() {\r\n    String str;\r\n    if (linkBehavior == ALWAYS_UNDERLINE)\r\n      str = \"ALWAYS_UNDERLINE\";\r\n    else if (linkBehavior == HOVER_UNDERLINE)\r\n      str = \"HOVER_UNDERLINE\";\r\n    else if (linkBehavior == NEVER_UNDERLINE)\r\n      str = \"NEVER_UNDERLINE\";\r\n    else\r\n      str = \"SYSTEM_DEFAULT\";\r\n    String colorStr = linkColor == null ? \"\" : linkColor.toString();\r\n    String colorPressStr = colorPressed == null ? \"\" : colorPressed\r\n        .toString();\r\n    String disabledLinkColorStr = disabledLinkColor == null ? \"\"\r\n        : disabledLinkColor.toString();\r\n    String visitedLinkColorStr = visitedLinkColor == null ? \"\"\r\n        : visitedLinkColor.toString();\r\n    String buttonURLStr = buttonURL == null ? \"\" : buttonURL.toString();\r\n    String isLinkVisitedStr = isLinkVisited ? \"true\" : \"false\";\r\n    return super.paramString() + \",linkBehavior=\" + str + \",linkURL=\"\r\n        + buttonURLStr + \",linkColor=\" + colorStr + \",activeLinkColor=\"\r\n        + colorPressStr + \",disabledLinkColor=\" + disabledLinkColorStr\r\n        + \",visitedLinkColor=\" + visitedLinkColorStr\r\n        + \",linkvisitedString=\" + isLinkVisitedStr;\r\n  }\r\n}\r\n\r\nclass BasicLinkButtonUI extends MetalButtonUI {\r\n  private static final BasicLinkButtonUI ui = new BasicLinkButtonUI();\r\n\r\n  public BasicLinkButtonUI() {\r\n  }\r\n\r\n  public static ComponentUI createUI(JComponent jcomponent) {\r\n    return ui;\r\n  }\r\n\r\n  protected void paintText(Graphics g, JComponent com, Rectangle rect,\r\n      String s) {\r\n    JLinkButton bn = (JLinkButton) com;\r\n    ButtonModel bnModel = bn.getModel();\r\n    Color color = bn.getForeground();\r\n    Object obj = null;\r\n    if (bnModel.isEnabled()) {\r\n      if (bnModel.isPressed())\r\n        bn.setForeground(bn.getActiveLinkColor());\r\n      else if (bn.isLinkVisited())\r\n        bn.setForeground(bn.getVisitedLinkColor());\r\n\r\n      else\r\n        bn.setForeground(bn.getLinkColor());\r\n    } else {\r\n      if (bn.getDisabledLinkColor() != null)\r\n        bn.setForeground(bn.getDisabledLinkColor());\r\n    }\r\n    super.paintText(g, com, rect, s);\r\n    int behaviour = bn.getLinkBehavior();\r\n    boolean drawLine = false;\r\n    if (behaviour == JLinkButton.HOVER_UNDERLINE) {\r\n      if (bnModel.isRollover())\r\n        drawLine = true;\r\n    } else if (behaviour == JLinkButton.ALWAYS_UNDERLINE || behaviour == JLinkButton.SYSTEM_DEFAULT)\r\n      drawLine = true;\r\n    if (!drawLine)\r\n      return;\r\n    FontMetrics fm = g.getFontMetrics();\r\n    int x = rect.x + getTextShiftOffset();\r\n    int y = (rect.y + fm.getAscent() + fm.getDescent() + getTextShiftOffset()) - 1;\r\n    if (bnModel.isEnabled()) {\r\n      g.setColor(bn.getForeground());\r\n      g.drawLine(x, y, (x + rect.width) - 1, y);\r\n    } else {\r\n      g.setColor(bn.getBackground().brighter());\r\n      g.drawLine(x, y, (x + rect.width) - 1, y);\r\n    }\r\n  }\r\n}\r\n
===================================================================
--- src/GUI/JLinkButton.java	(revision f2cd0fea31c08a3416f9d5bc8383fa6a34583c8b)
+++ src/com/company/gui/JLinkButton.java	(date 1609411999290)
@@ -1,4 +1,4 @@
-package GUI;
+package com.company.gui;
 
 import javax.swing.*;
 import javax.swing.plaf.ComponentUI;
