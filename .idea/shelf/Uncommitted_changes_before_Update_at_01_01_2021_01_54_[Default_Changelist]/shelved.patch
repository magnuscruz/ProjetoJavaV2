Index: src/com/company/gui/Interface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.gui;\r\n\r\nimport com.company.Sistema;\r\nimport com.company.gui.util.DateLabelFormatter;\r\nimport org.jdatepicker.impl.JDatePanelImpl;\r\nimport org.jdatepicker.impl.JDatePickerImpl;\r\nimport org.jdatepicker.impl.UtilDateModel;\r\n\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.text.ParseException;\r\nimport java.util.Enumeration;\r\nimport java.util.Properties;\r\nimport java.util.ResourceBundle;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.text.MaskFormatter;\r\n\r\npublic class Interface extends JFrame {\r\n    private static final String LOGIN_CARD = \"LOGIN\";\r\n    private static final String RESTAURANTE_CARD = \"RESTAURANTE\";\r\n    private static final String CLIENTE_CARD = \"CLIENTE\";\r\n    private static final String MENUCLIENTE_CARD = \"MENU CLIENTE\";\r\n    private static final String MCLIREST_CARD = \"MENU CLIENTE - CONSULTAR RESTAURANTES\";\r\n    private static final String MCLICOMENTARIOS_CARD = \"MENU CLIENTE - COMENTÁRIOS\";\r\n    private static final String MCLIATDADOS_CARD = \"MENU CLIENTE - ACTUALIZAR DADOS\";\r\n    private static final String MCLIHISRES_CARD = \"MENU CLIENTE - HISTÓRICO DE RESERVAS\";\r\n    private static final String MCLIMRESCOMPONTRESE_CARD = \"MENU CLIENTE - HISTÓRICO DE RESERVAS: COMENTAR\";\r\n    private static final String MCLIRESACT_CARD = \"MENU CLIENTE - RESERVAS ACTIVAS\";\r\n    private static final String MCLIFAZERRES_CARD = \"MENU CLIENTE - FAZER RESERVAS\";\r\n    private static final String MCLIFAZERRESP_CARD = \"MENU CLIENTE - FAZER RESERVAS PRESENCIAL\";\r\n    private static final String MCLIFAZERRESTA_CARD = \"MENU CLIENTE - FAZER RESERVAS TAKE-AWAY\";\r\n    private static final String MCLIRESERVAS_CARD = \"MENU CLIENTE - RESERVAS\";\r\n\r\n\r\n    private static final String MENURESTAURANTE_CARD = \"MENU RESTAURANTE\";\r\n    private static final String MRESTADICIONARPRATO_CARD = \"ADICIONAR PRATO\";\r\n    private static final String MRESTACTUALIZARPRATO_CARD = \"ACTUALIZAR PRATO DO DIA\";\r\n    private static final String MRESTACTUALIZARDADOS_CARD = \"MENU RESTAURANTE - ACTUALIZAR DADOS\";\r\n    private static final String MRESTRESERV_CARD = \"MENU RESTAURANTE - HISTÓRICO DE RESERVAS\";\r\n    private static final String MRESTCOMENTARIOS_CARD = \"MENU RESTAURANTE - COMENTÁRIOS\";\r\n    private static final int LARGURA_LOGIN = 400;\r\n    private static final int ALTURA_LOGIN = 180;\r\n    private static final int LARGURA_PADRAO = 500;\r\n    private static final int ALTURA_PADRAO = 300;\r\n    private boolean passwordValido;\r\n    private boolean confirmarPasswordValido;\r\n    private Sistema sistema = new Sistema();\r\n    private MaskFormatter mascaraTelemovel;\r\n\r\n\r\n    public Interface() {\r\n\r\n        try {\r\n            mascaraTelemovel = new MaskFormatter(\"#########\");\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        ImageIcon logo = new ImageIcon(\"logo3.png\");\r\n        this.setIconImage(logo.getImage());\r\n\r\n\r\n        this.setTitle(\"RESERVAS DE RESTAURANTES\");\r\n        this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n        this.setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        Container contentor = this.getContentPane();\r\n        contentor.setLayout(new CardLayout());\r\n\r\n        /////// SUPERPAINEIS////////\r\n        JPanel loginSuperPanel = new JPanel();\r\n        loginSuperPanel.setLayout(new BorderLayout());\r\n        JPanel regNovoCliSuperPanel = new JPanel();\r\n        regNovoCliSuperPanel.setLayout(new BorderLayout());\r\n        JPanel registarNovoRestSuperPanel = new JPanel();\r\n        registarNovoRestSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliSuperPanel = new JPanel();\r\n        mCliSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliRestSuperPanel = new JPanel();\r\n        mCliRestSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliComentariosSuperPanel = new JPanel();\r\n        mCliComentariosSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliAtDadosSuperPanel = new JPanel();\r\n        mCliAtDadosSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliHistResSuperPanel = new JPanel();\r\n        mCliHistResSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliMResComPontReseSuperPanel = new JPanel();\r\n        mCliMResComPontReseSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliResActSuperPanel = new JPanel();\r\n        mCliResActSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliFazerResSuperPanel = new JPanel();\r\n        mCliFazerResSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliFazerResPSuperPanel = new JPanel();\r\n        mCliFazerResPSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliFazerResTASuperPanel = new JPanel();\r\n        mCliFazerResTASuperPanel.setLayout(new BorderLayout());\r\n        JPanel mCliReservasMReseSuperPanel = new JPanel();\r\n        mCliReservasMReseSuperPanel.setLayout(new BorderLayout());\r\n\r\n\r\n        JPanel mRestSuperPanel = new JPanel();\r\n        mRestSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestAdPratoSuperPanel = new JPanel();\r\n        mRestAdPratoSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestAtPratoDiaSuperPanel = new JPanel();\r\n        mRestAtPratoDiaSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestAtDadosSuperPanel = new JPanel();\r\n        mRestAtDadosSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestReservasSuperPanel = new JPanel();\r\n        mRestReservasSuperPanel.setLayout(new BorderLayout());\r\n        JPanel mRestComentariosSuperPanel = new JPanel();\r\n        mRestComentariosSuperPanel.setLayout(new BorderLayout());\r\n\r\n\r\n        construirPanelLogin(this, contentor, loginSuperPanel);\r\n\r\n        construirPanelCliente(this, contentor, loginSuperPanel, regNovoCliSuperPanel);\r\n\r\n        construirPanelRestaurante(this, contentor, loginSuperPanel, registarNovoRestSuperPanel);\r\n\r\n        construirPanelMenuCliente(this, contentor, loginSuperPanel, mCliSuperPanel);\r\n\r\n        ////PROBLEMA - não aceita this\r\n        construirPanelMRest(contentor, loginSuperPanel, mRestSuperPanel);\r\n\r\n        construirPanelMRestAdPrato(this, contentor, loginSuperPanel, mRestAdPratoSuperPanel);\r\n\r\n        construirPanelMRestAtPratoDia(this, contentor, loginSuperPanel, mRestAtPratoDiaSuperPanel);\r\n\r\n        construirPanelMRestAtDados(this, contentor, loginSuperPanel, mRestAtDadosSuperPanel);\r\n\r\n        construirPanelMRestReservas(this, contentor, loginSuperPanel, mRestReservasSuperPanel);\r\n\r\n        construirPanelMRestComentarios(this, contentor, loginSuperPanel, mRestComentariosSuperPanel);\r\n\r\n        construirPanelMCliRestaurantes(this, contentor, loginSuperPanel, mCliRestSuperPanel);\r\n\r\n        construirPanelMCliComentarios(this, contentor, loginSuperPanel, mCliComentariosSuperPanel);\r\n\r\n        construirPanelMCliAtDados(this, contentor, loginSuperPanel, mCliAtDadosSuperPanel);\r\n\r\n        construirPanelMCliHistRes(this, contentor, loginSuperPanel, mCliHistResSuperPanel);\r\n\r\n        construirPanelMCliResAct(this, contentor, loginSuperPanel, mCliResActSuperPanel);\r\n\r\n        construirPanelMCliFazerRes(this, contentor, loginSuperPanel, mCliFazerResSuperPanel);\r\n\r\n        construirPanelMCliFazerResP(this, contentor, loginSuperPanel, mCliFazerResPSuperPanel);\r\n\r\n        construirPanelMCliFazerResTA(this, contentor, loginSuperPanel, mCliFazerResTASuperPanel);\r\n\r\n        construirPanelReservasMCliMRese(this, contentor, loginSuperPanel, mCliReservasMReseSuperPanel);\r\n\r\n        construirPanelMCliMResComPonReservas(this, contentor, loginSuperPanel, mCliMResComPontReseSuperPanel);\r\n\r\n\r\n        contentor.add(loginSuperPanel, LOGIN_CARD);\r\n        contentor.add(regNovoCliSuperPanel, CLIENTE_CARD);\r\n        contentor.add(registarNovoRestSuperPanel, RESTAURANTE_CARD);\r\n        contentor.add(mCliSuperPanel, MENUCLIENTE_CARD);\r\n        contentor.add(mRestSuperPanel, MENURESTAURANTE_CARD);\r\n        contentor.add(mRestAdPratoSuperPanel, MRESTADICIONARPRATO_CARD);\r\n        contentor.add(mRestAtPratoDiaSuperPanel, MRESTACTUALIZARPRATO_CARD);\r\n        contentor.add(mRestAtDadosSuperPanel, MRESTACTUALIZARDADOS_CARD);\r\n        contentor.add(mRestReservasSuperPanel, MRESTRESERV_CARD);\r\n        contentor.add(mRestComentariosSuperPanel, MRESTCOMENTARIOS_CARD);\r\n        contentor.add(mCliRestSuperPanel, MCLIREST_CARD);\r\n        contentor.add(mCliComentariosSuperPanel, MCLICOMENTARIOS_CARD);\r\n        contentor.add(mCliAtDadosSuperPanel, MCLIATDADOS_CARD);\r\n        contentor.add(mCliHistResSuperPanel, MCLIHISRES_CARD);\r\n        contentor.add(mCliResActSuperPanel, MCLIRESACT_CARD);\r\n        contentor.add(mCliFazerResSuperPanel, MCLIFAZERRES_CARD);\r\n        contentor.add(mCliFazerResPSuperPanel, MCLIFAZERRESP_CARD);\r\n        contentor.add(mCliFazerResTASuperPanel, MCLIFAZERRESTA_CARD);\r\n        contentor.add(mCliReservasMReseSuperPanel, MCLIRESERVAS_CARD);\r\n        contentor.add(mCliMResComPontReseSuperPanel, MCLIMRESCOMPONTRESE_CARD);\r\n\r\n\r\n    }\r\n\r\n\r\n    private void construirPanelLogin(Interface janela, Container contentor, JPanel loginSuperPanel) {\r\n        ////Criação dos subpaineis norte, centro e sul\r\n        JPanel norteLoginSubPanel = new JPanel();\r\n        JPanel centroLoginSubPanel = new JPanel();\r\n        JPanel sulLoginSubPanel = new JPanel();\r\n\r\n        JButton ptEnLoginButton = new JButton(\"PT/EN\");\r\n        ptEnLoginButton.setSize(15, 5);\r\n        JButton loginButton = new JButton(LOGIN_CARD);\r\n        loginButton.setSize(15, 5);\r\n        JButton clienteNovoButton = new JLinkButton(\"Novo Cliente\");\r\n        JButton restauranteNovoButton = new JLinkButton(\"Novo Restaurante\");\r\n\r\n        JLabel titleLoginLabel = new JLabel(\"LOGIN\");\r\n        JLabel usernameLoginLabel = new JLabel(\"Username\");\r\n        JLabel passwordLoginLabel = new JLabel(\"Password\");\r\n\r\n        JTextField usernameLoginText = new JTextField(20);\r\n\r\n        JPasswordField passwordLoginField = new JPasswordField(20);\r\n\r\n///Layout dos subPaineis north, centro e south\r\n        norteLoginSubPanel.setLayout(new BorderLayout());\r\n        centroLoginSubPanel.setLayout(new BorderLayout());\r\n        sulLoginSubPanel.setLayout(new BorderLayout());\r\n\r\n//Adicionar subPaineis no superpainel Login\r\n        loginSuperPanel.add(norteLoginSubPanel, BorderLayout.NORTH);\r\n        loginSuperPanel.add(centroLoginSubPanel, BorderLayout.CENTER);\r\n        loginSuperPanel.add(sulLoginSubPanel, BorderLayout.SOUTH);\r\n\r\n/// Criação dos subpaineis nos subpaineis norte, centro e sul\r\n        JPanel norteLoginSSPanelTitle = new JPanel();\r\n        JPanel centroLoginSSPanelForm = new JPanel();\r\n        JPanel centroLoginSSPanelButton = new JPanel();\r\n        JPanel sulLoginSSPanelLinks = new JPanel();\r\n\r\n//Layout dos subpaineis dos subpaineis norte, centro e sul\r\n        norteLoginSubPanel.add(norteLoginSSPanelTitle, BorderLayout.CENTER);\r\n        norteLoginSubPanel.add(ptEnLoginButton, BorderLayout.EAST);\r\n        norteLoginSSPanelTitle.setLayout(new FlowLayout());\r\n        norteLoginSSPanelTitle.add(titleLoginLabel);\r\n\r\n        centroLoginSubPanel.add(centroLoginSSPanelForm, BorderLayout.NORTH);\r\n        centroLoginSSPanelForm.setLayout(new GridLayout(2, 2));\r\n        centroLoginSSPanelForm.add(usernameLoginLabel);\r\n        centroLoginSSPanelForm.add(usernameLoginText);\r\n        centroLoginSSPanelForm.add(passwordLoginLabel);\r\n        centroLoginSSPanelForm.add(passwordLoginField);\r\n        centroLoginSubPanel.add(centroLoginSSPanelButton, BorderLayout.SOUTH);\r\n        centroLoginSSPanelButton.setLayout(new FlowLayout());\r\n        centroLoginSSPanelButton.add(loginButton);\r\n\r\n        sulLoginSubPanel.add(sulLoginSSPanelLinks);\r\n        sulLoginSSPanelLinks.setLayout(new BorderLayout());\r\n        sulLoginSSPanelLinks.add(clienteNovoButton, BorderLayout.EAST);\r\n        sulLoginSSPanelLinks.add(restauranteNovoButton, BorderLayout.WEST);\r\n\r\n\r\n        clienteNovoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, CLIENTE_CARD);\r\n            janela.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos\r\n            // no actionlistener)\r\n        });\r\n\r\n        restauranteNovoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, RESTAURANTE_CARD);\r\n            janela.setSize(LARGURA_PADRAO, 350);\r\n            // passar por parâmetro no construtor (fica como referência pq qdo precisarmos\r\n            // no actionlistener)\r\n        });\r\n    }\r\n\r\n    ////////////////////NOVO CLIENTE/////////////////////////\r\n    private void construirPanelCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoClienteSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteNovoClienteSubPanel = new JPanel();\r\n        norteNovoClienteSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroNovoClienteSubPanel = new JPanel();\r\n        JPanel sulNovoClienteSubPanel = new JPanel();\r\n\r\n        JLabel registarNovoClienteLabel = new JLabel(\"NOVO CLIENTE\");\r\n        registarNovoClienteLabel.setForeground(Color.BLUE);\r\n        JLabel nomeClienteLabel = new JLabel(\"Nome\");\r\n        //nomeClienteLabel.setBounds(50,80,100,20);\r\n        JLabel emailClienteLabel = new JLabel(\"E-mail\");\r\n        JLabel moradaClienteLabel = new JLabel(\"Morada\");\r\n        JLabel telemovelClienteLabel = new JLabel(\"Telemóvel\");\r\n        JLabel usernameClienteLabel = new JLabel(\"Username\");\r\n        JLabel passwordClienteLabel = new JLabel(\"Password \");\r\n        JLabel confirmarPasswordClienteLabel = new JLabel(\"Confirmar password \");\r\n\r\n        JTextField nomeClienteText = new JTextField(20);\r\n        nomeClienteText.setMargin(new Insets(3, 3, 3, 3));\r\n        //nomeClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));\r\n        JTextField emailClienteText = new JTextField(20);\r\n        //emailClienteText.setBorder(BorderFactory.createLineBorder(Color.black, 1));\r\n        JTextField moradaClienteText = new JTextField(20);\r\n        JTextField telemovelClienteText = new JFormattedTextField(mascaraTelemovel);\r\n        telemovelClienteText.setColumns(20);\r\n        JTextField usernameClienteText = new JTextField(20);\r\n\r\n        JPasswordField passwordClienteField = new JPasswordField(20);\r\n        JPasswordField confirmarPassawordClienteField = new JPasswordField(20);\r\n\r\n        JButton ptEnNovoClienteButton = new JButton(\"PT/EN\");\r\n        JButton cancelarClienteButton = new JButton(\"CANCELAR\");\r\n        JButton registarClienteButton = new JButton(\"REGISTAR\");\r\n\r\n        //todo não deu certo\r\n        //Define as máscaras\r\n        MaskFormatter mascaraTelCliente = null;\r\n\r\n        try {\r\n            mascaraTelCliente = new MaskFormatter(\"(##)####-####\");\r\n\r\n        } catch (ParseException excp) {\r\n            System.err.println(\"Erro na formatação: \" + excp.getMessage());\r\n            System.exit(-1);\r\n        }\r\n\r\n        //Seta as máscaras nos objetos JFormattedTextField\r\n        JFormattedTextField telClienteT = new JFormattedTextField(mascaraTelCliente);\r\n        //telClienteT.setBounds(150,80,100,20);\r\n\r\n\r\n        registarNovoClienteSuperPanel.add(norteNovoClienteSubPanel, \"North\");\r\n        registarNovoClienteSuperPanel.add(centroNovoClienteSubPanel, \"Center\");\r\n        registarNovoClienteSuperPanel.add(sulNovoClienteSubPanel, \"South\");\r\n\r\n        JPanel norteNovoClienteSSPanel = new JPanel();\r\n        norteNovoClienteSSPanel.setLayout(new FlowLayout());\r\n        norteNovoClienteSSPanel.add(registarNovoClienteLabel);\r\n        norteNovoClienteSubPanel.add(norteNovoClienteSSPanel, BorderLayout.CENTER);\r\n        norteNovoClienteSubPanel.add(ptEnNovoClienteButton, BorderLayout.EAST);\r\n\r\n        JPanel centroNovoClienteSSPanelForm = new JPanel();\r\n        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));\r\n        centroNovoClienteSubPanel.add(centroNovoClienteSSPanelForm);\r\n        centroNovoClienteSSPanelForm.add(nomeClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(nomeClienteText);\r\n        centroNovoClienteSSPanelForm.add(emailClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(emailClienteText);\r\n        centroNovoClienteSSPanelForm.add(moradaClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(moradaClienteText);\r\n        centroNovoClienteSSPanelForm.add(telemovelClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(telemovelClienteText);\r\n        centroNovoClienteSSPanelForm.add(usernameClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(usernameClienteText);\r\n        centroNovoClienteSSPanelForm.add(passwordClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(passwordClienteField);\r\n        centroNovoClienteSSPanelForm.add(confirmarPasswordClienteLabel);\r\n        centroNovoClienteSSPanelForm.add(confirmarPassawordClienteField);\r\n\r\n        sulNovoClienteSubPanel.setLayout(new FlowLayout());\r\n        sulNovoClienteSubPanel.add(cancelarClienteButton);\r\n        sulNovoClienteSubPanel.add(registarClienteButton);\r\n\r\n\r\n        registarClienteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n        cancelarClienteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n\r\n        });\r\n    }\r\n\r\n\r\n    ////// MENU CLIENTE//////////\r\n    private void construirPanelMenuCliente(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliSuperPanel) {\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMenuClienteSubPanel = new JPanel();\r\n        norteMenuClienteSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMenuClienteSubPanel = new JPanel();\r\n        JPanel sulMenuClienteSubPanel = new JPanel();\r\n\r\n        JLabel registarNovoClienteLabel = new JLabel(\"MENU CLIENTE\");\r\n        registarNovoClienteLabel.setForeground(Color.BLUE);\r\n\r\n        JButton ptEnMenuClienteButton = new JButton(\"PT/EN\");\r\n        ////\r\n        JButton consultarRestMCliButton = new JButton(\"RESTAURANTES\");\r\n        JButton comentariosMCliButton = new JButton(\"COMENTÁRIOS\");\r\n        JButton reservasMCliButton = new JButton(\"RESERVAS\");\r\n\r\n        JButton atualDadosMCliButton = new JButton(\"ACTUALIZAR DADOS\");\r\n\r\n        ///\r\n        //JButton cancelarMenuClienteButton = new JButton(\"CANCELAR\");\r\n        JButton logoutMenuClienteButton = new JButton(\"LOGOUT\");\r\n\r\n        mCliSuperPanel.add(norteMenuClienteSubPanel, \"North\");\r\n        mCliSuperPanel.add(centroMenuClienteSubPanel, \"Center\");\r\n        mCliSuperPanel.add(sulMenuClienteSubPanel, \"South\");\r\n\r\n        JPanel norteClienteSubPanel = new JPanel();\r\n        norteClienteSubPanel.setLayout(new FlowLayout());\r\n        norteClienteSubPanel.add(registarNovoClienteLabel);\r\n        norteMenuClienteSubPanel.add(norteClienteSubPanel, BorderLayout.CENTER);\r\n        norteMenuClienteSubPanel.add(ptEnMenuClienteButton, BorderLayout.EAST);\r\n\r\n        JPanel centroNovoClienteSSPanelForm = new JPanel();\r\n        centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));\r\n        centroMenuClienteSubPanel.add(centroNovoClienteSSPanelForm);\r\n        centroNovoClienteSSPanelForm.add(consultarRestMCliButton);\r\n        centroNovoClienteSSPanelForm.add(comentariosMCliButton);\r\n        centroNovoClienteSSPanelForm.add(reservasMCliButton);\r\n\r\n        centroNovoClienteSSPanelForm.add(atualDadosMCliButton);\r\n\r\n        sulMenuClienteSubPanel.setLayout(new FlowLayout());\r\n        sulMenuClienteSubPanel.add(logoutMenuClienteButton);\r\n\r\n\r\n        comentariosMCliButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLICOMENTARIOS_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        consultarRestMCliButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIREST_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        reservasMCliButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIRESERVAS_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        atualDadosMCliButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIATDADOS_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n\r\n        logoutMenuClienteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(400, 180);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    ////// MENU CLIENTE – MENU RESERVAS//////////\r\n    private void construirPanelReservasMCliMRese\r\n    (Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliReservasMReseSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMCliMReseSubPanel = new JPanel();\r\n        norteMCliMReseSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMCliMReseSubPanel = new JPanel();\r\n        JPanel sulMCliMReseSubPanel = new JPanel();\r\n\r\n        JLabel registarNovoMCliMReseLabel = new JLabel(\"MENU CLIENTE - RESERVAS\");\r\n        registarNovoMCliMReseLabel.setForeground(Color.BLUE);\r\n\r\n        JButton ptEnMCliMReseButton = new JButton(\"PT/EN\");\r\n        JButton histReseComPonMCliMReseButton = new JButton(\"HISTÓRICO\");\r\n        JButton ReservasActMCliMReseButton = new JButton(\"RESERVAS ACTIVAS\");\r\n        JButton fazerReservasMCliMReseButton = new JButton(\"FAZER RESERVAS\");\r\n        JButton voltarMCliMReseButton = new JButton(\"MENU CLIENTE\");\r\n\r\n        JButton logoutMCliMReseButton = new JButton(\"LOGOUT\");\r\n\r\n        mCliReservasMReseSuperPanel.add(norteMCliMReseSubPanel, \"North\");\r\n        mCliReservasMReseSuperPanel.add(centroMCliMReseSubPanel, \"Center\");\r\n        mCliReservasMReseSuperPanel.add(sulMCliMReseSubPanel, \"South\");\r\n\r\n        JPanel norteMCliMReseSSPanel = new JPanel();\r\n        norteMCliMReseSSPanel.setLayout(new FlowLayout());\r\n        norteMCliMReseSSPanel.add(registarNovoMCliMReseLabel);\r\n        norteMCliMReseSubPanel.add(norteMCliMReseSSPanel, BorderLayout.CENTER);\r\n        norteMCliMReseSubPanel.add(ptEnMCliMReseButton, BorderLayout.EAST);\r\n\r\n        JPanel centroNovoMCliMReseSSPanel = new JPanel();\r\n        centroNovoMCliMReseSSPanel.setLayout(new GridLayout(7, 2));\r\n        centroMCliMReseSubPanel.add(centroNovoMCliMReseSSPanel);\r\n\r\n        centroNovoMCliMReseSSPanel.add(histReseComPonMCliMReseButton);\r\n        centroNovoMCliMReseSSPanel.add(ReservasActMCliMReseButton);\r\n        centroNovoMCliMReseSSPanel.add(fazerReservasMCliMReseButton);\r\n\r\n        sulMCliMReseSubPanel.setLayout(new FlowLayout());\r\n        sulMCliMReseSubPanel.add(logoutMCliMReseButton);\r\n        sulMCliMReseSubPanel.add(voltarMCliMReseButton);\r\n\r\n\r\n        histReseComPonMCliMReseButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIHISRES_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        ReservasActMCliMReseButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIRESACT_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        fazerReservasMCliMReseButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIFAZERRES_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        voltarMCliMReseButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        logoutMCliMReseButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(400, 180);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //////MENU CLIENTE – RESERVAS - HISTÓRICO//////////\r\n\r\n    private void construirPanelMCliHistRes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliHistResSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMCliHistResSubPanel = new JPanel();\r\n        norteMCliHistResSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMCliHistResSubPanel = new JPanel();\r\n        JPanel sulMCliHistResSubPanel = new JPanel();\r\n\r\n        JLabel mCliTitHistResLabel = new JLabel(\"MENU CLIENTE - HISTÓRICO DE RESERVAS\");\r\n\r\n        JLabel mCliIdHistResLabel = new JLabel(\"ID\");\r\n\r\n        String[] mCliIdHistRes = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"};\r\n        JComboBox arrayMCliIdHistResCBox = new JComboBox(mCliIdHistRes);\r\n\r\n//todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, comentar e pontuar\r\n        String[] nomeColunasMCliHistRes = new String[]{\r\n                \"ID\", \"DATA\", \"RESTAURANTE\"\r\n        };\r\n\r\n        Object[][] data = new Object[][]{\r\n                {\"ID\", \"DATA\", \"RESTAURANTE\"},\r\n                {1, \"dd/MM/yyy\", \"A\"},\r\n                {1, \"dd/MM/yyy\", \"B\"},\r\n                {3, \"dd/MM/yyy\", \"C\"},\r\n        };\r\n        //criação da tabela\r\n        JTable tabelaMCliHistRes = new JTable(data, nomeColunasMCliHistRes);\r\n\r\n        JButton ptEnMCliRestButton = new JButton(\"PT/EN\");\r\n        JButton voltarMCliHistResButton = new JButton(\"MENU CLIENTE\");\r\n        JButton comentarMCliHistResButton = new JButton(\"COMENTAR\");\r\n        JButton retornarMCliHistResButton = new JButton(\"VOLTAR\");\r\n\r\n        mCliHistResSuperPanel.add(norteMCliHistResSubPanel, \"North\");\r\n        mCliHistResSuperPanel.add(centroMCliHistResSubPanel, \"Center\");\r\n        mCliHistResSuperPanel.add(sulMCliHistResSubPanel, \"South\");\r\n\r\n        JPanel norteMCliHistResSSPanel = new JPanel();\r\n        norteMCliHistResSSPanel.setLayout(new FlowLayout());\r\n        norteMCliHistResSSPanel.add(mCliTitHistResLabel);\r\n        norteMCliHistResSubPanel.add(norteMCliHistResSSPanel, BorderLayout.CENTER);\r\n        norteMCliHistResSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMCliHistResSSPanel = new JPanel();\r\n        centroMCliHistResSSPanel.setLayout(new FlowLayout());\r\n        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliHistResSSPanel1 = new JPanel();\r\n        centroMCliHistResSSPanel1.setLayout(new FlowLayout());\r\n        centroMCliHistResSubPanel.add(centroMCliHistResSSPanel1, BorderLayout.WEST);\r\n\r\n        centroMCliHistResSSPanel.add(tabelaMCliHistRes);\r\n        centroMCliHistResSSPanel1.add(mCliIdHistResLabel);\r\n        centroMCliHistResSSPanel1.add(arrayMCliIdHistResCBox);\r\n\r\n        sulMCliHistResSubPanel.setLayout(new FlowLayout());\r\n        sulMCliHistResSubPanel.add(voltarMCliHistResButton);\r\n        sulMCliHistResSubPanel.add(retornarMCliHistResButton);\r\n        sulMCliHistResSubPanel.add(comentarMCliHistResButton);\r\n\r\n        retornarMCliHistResButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIRESERVAS_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        //todo falta ativar este botão\r\n        comentarMCliHistResButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIMRESCOMPONTRESE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        voltarMCliHistResButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n    }\r\n    //todo espaço para escrever comentário pode ter barra de rolagem? ativar o botão OK\r\n    /////////// MENU CLIENTE - MENU RESERVA - HISTÓRICO DE RESERVAS - COMENTAR UMA RESERVA///////\r\n    private void construirPanelMCliMResComPonReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMResComPontReseSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMCliRestComPonReseSubPanel = new JPanel();\r\n        norteMCliRestComPonReseSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMCliRestComPonReseSubPanel = new JPanel();\r\n        JPanel sulMCliRestComPonReseSubPanel = new JPanel();\r\n\r\n        JRadioButton umPont = new JRadioButton(\"1\");\r\n        JRadioButton doisPont = new JRadioButton(\"2\");\r\n        JRadioButton tresPont = new JRadioButton(\"3\");\r\n        JRadioButton quatroPont = new JRadioButton(\"4\");\r\n        JRadioButton cincoPont = new JRadioButton(\"5\");\r\n\r\n        JLabel mCliRestComPonReseLabel = new JLabel(\"MENU CLIENTE – HISTÓRICO DE RESERVAS - COMENTAR\");\r\n        JLabel restMCliMReseComPonLabel = new JLabel(\"RESTAURANTE\");\r\n        JLabel dataMCliMReseComPonLabel = new JLabel(\"DATA DA RESERVA\");\r\n        JLabel pontMCliRestComPonReseLabel = new JLabel(\"ATRIBUIR PONTUAÇÃO:\");\r\n\r\n        JTextField restMCliMReseComPonText = new JTextField(20);\r\n        JTextField dataMCliMReseComPonText = new JTextField(8);\r\n        JTextArea novoComMCliMReseComPonTextA = new JTextArea(5, 50);\r\n        //novoComMCliMReseComPonTextA.setSize(100, 80);\r\n\r\n        ButtonGroup group = new ButtonGroup();\r\n        group.add(umPont);\r\n        group.add(doisPont);\r\n        group.add(tresPont);\r\n        group.add(quatroPont);\r\n        group.add(cincoPont);\r\n\r\n        JButton ptEnMCliRestComPonReseButton = new JButton(\"PT/EN\");\r\n        JButton voltarMCliRestComPonReseButton = new JButton(\"MENU CLIENTE\");\r\n        JButton okMCliRestComPonReseButton = new JButton(\"OK\");\r\n        JButton retornarMCliRestComPonReseButton = new JButton(\"VOLTAR\");\r\n\r\n        mCliMResComPontReseSuperPanel.add(norteMCliRestComPonReseSubPanel, \"North\");\r\n        mCliMResComPontReseSuperPanel.add(centroMCliRestComPonReseSubPanel, \"Center\");\r\n        mCliMResComPontReseSuperPanel.add(sulMCliRestComPonReseSubPanel, \"South\");\r\n\r\n        JPanel norteMCliRestComPonReseSSPanel = new JPanel();\r\n        norteMCliRestComPonReseSSPanel.setLayout(new FlowLayout());\r\n        norteMCliRestComPonReseSSPanel.add(mCliRestComPonReseLabel);\r\n        norteMCliRestComPonReseSubPanel.add(norteMCliRestComPonReseSSPanel, BorderLayout.CENTER);\r\n        norteMCliRestComPonReseSubPanel.add(ptEnMCliRestComPonReseButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMCliRestComPonReseSSPanel = new JPanel();\r\n        centroMCliRestComPonReseSSPanel.setLayout(new FlowLayout());\r\n        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliRestComPonReseSSPanel1 = new JPanel();\r\n        centroMCliRestComPonReseSSPanel1.setLayout(new FlowLayout());\r\n        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel1, BorderLayout.CENTER);\r\n\r\n        JPanel centroMCliRestComPonReseSSPanel2 = new JPanel();\r\n        centroMCliRestComPonReseSSPanel2.setLayout(new GridLayout(1, 1));\r\n        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel2);\r\n\r\n        JPanel centroMCliRestComPonReseSSPanel3 = new JPanel();\r\n        centroMCliRestComPonReseSSPanel3.setLayout(new BorderLayout());\r\n        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel3, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliRestComPonReseSSPanel4 = new JPanel();\r\n        centroMCliRestComPonReseSSPanel4.setLayout(new BorderLayout());\r\n        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel4, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliRestComPonReseSSPanel5 = new JPanel();\r\n        centroMCliRestComPonReseSSPanel5.setLayout(new BorderLayout());\r\n        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel5, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliRestComPonReseSSPanel6 = new JPanel();\r\n        centroMCliRestComPonReseSSPanel6.setLayout(new BorderLayout());\r\n        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel6, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliRestComPonReseSSPanel7 = new JPanel();\r\n        centroMCliRestComPonReseSSPanel7.setLayout(new BorderLayout());\r\n        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel7, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliRestComPonReseSSPanel8 = new JPanel();\r\n        centroMCliRestComPonReseSSPanel8.setLayout(new GridLayout(1, 2));\r\n        centroMCliRestComPonReseSubPanel.add(centroMCliRestComPonReseSSPanel8);\r\n        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonLabel);\r\n        centroMCliRestComPonReseSSPanel.add(restMCliMReseComPonText);\r\n        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonLabel);\r\n        centroMCliRestComPonReseSSPanel.add(dataMCliMReseComPonText);\r\n        centroMCliRestComPonReseSSPanel1.add(novoComMCliMReseComPonTextA);\r\n\r\n        centroMCliRestComPonReseSSPanel2.add(pontMCliRestComPonReseLabel);\r\n        centroMCliRestComPonReseSSPanel3.add(umPont);\r\n        centroMCliRestComPonReseSSPanel4.add(doisPont);\r\n        centroMCliRestComPonReseSSPanel5.add(tresPont);\r\n        centroMCliRestComPonReseSSPanel6.add(quatroPont);\r\n        centroMCliRestComPonReseSSPanel7.add(cincoPont);\r\n\r\n        sulMCliRestComPonReseSubPanel.setLayout(new FlowLayout());\r\n        sulMCliRestComPonReseSubPanel.add(voltarMCliRestComPonReseButton);\r\n        sulMCliRestComPonReseSubPanel.add(retornarMCliRestComPonReseButton);\r\n        sulMCliRestComPonReseSubPanel.add(okMCliRestComPonReseButton);\r\n\r\n        retornarMCliRestComPonReseButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIRESERVAS_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n        voltarMCliRestComPonReseButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        //todo ver os encaminhamentos\r\n        okMCliRestComPonReseButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n    }\r\n\r\n\r\n    ////////////////////NOVO RESTAURANTE/////////////////////////\r\n    private void construirPanelRestaurante(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel registarNovoRestauranteSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteNovoRestauranteSubPanel = new JPanel();\r\n        norteNovoRestauranteSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroNovoRestauranteSubPanel = new JPanel();\r\n        centroNovoRestauranteSubPanel.setLayout(new FlowLayout());\r\n        JPanel sulNovoRestauranteSubPanel = new JPanel();\r\n\r\n        JLabel registarNovoRestauranteLabel = new JLabel(\"NOVO RESTAURANTE\");\r\n        registarNovoRestauranteLabel.setForeground(Color.RED);\r\n        JLabel nomeRestauranteLabel = new JLabel(\"Nome\");\r\n        JLabel emailRestauranteLabel = new JLabel(\"E-mail\");\r\n        JLabel moradaRestauranteLabel = new JLabel(\"Morada\");\r\n        JLabel cidadeRestauranteLabel = new JLabel(\"Cidade\");\r\n        JLabel telemovelRestauranteLabel = new JLabel(\"Telemóvel\");\r\n///////////////////////\r\n        JLabel lotacaoRestauranteLabel = new JLabel(\"Lotação:\");\r\n        JLabel esplanadaRestauranteLabel = new JLabel(\"Esplanada\");\r\n        JLabel zonaInteriorLabel = new JLabel(\"Zona Interior:\");\r\n        JLabel zonaInteriorNFumRestauranteLabel = new JLabel(\"Ñ Fumadores\");\r\n        JLabel zonaInteriorFumRestauranteLabel = new JLabel(\"Fumadores\");\r\n        JLabel horariosRestauranteLabel = new JLabel(\"Horários:\");\r\n        JLabel horariosAlmocoRestauranteLabel = new JLabel(\"Almoço:\");\r\n        JLabel horarioAlmocoInicioRestauranteLabel = new JLabel(\"Início\");\r\n        JLabel horarioAlmocoFimRestauranteLabel = new JLabel(\"Fim\");\r\n        JLabel horariosJantarRestauranteLabel = new JLabel(\"Jantar:\");\r\n        JLabel horarioJantarInicioRestauranteLabel = new JLabel(\"Início\");\r\n        JLabel horarioJantarFimRestauranteLabel = new JLabel(\"Fim\");\r\n//////////////////////////////////\r\n\r\n\r\n        JLabel usernameRestauranteLabel = new JLabel(\"Username\");\r\n        JLabel passwordRestauranteLabel = new JLabel(\"Password \");\r\n        JLabel confirmarPasswordRestauranteLabel = new JLabel(\"Confirmar password \");\r\n\r\n        JTextField nomeRestauranteText = new JTextField(18);\r\n        nomeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField emailRestauranteText = new JTextField(18);\r\n        emailRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField moradaRestauranteText = new JTextField(20);\r\n        moradaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField cidadeRestauranteText = new JTextField(15);\r\n        cidadeRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField telemovelRestauranteText = new JFormattedTextField(mascaraTelemovel);\r\n        telemovelRestauranteText.setColumns(8);\r\n        telemovelRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        ////////\r\n        JTextField esplanadaRestauranteText = new JTextField(3);\r\n        esplanadaRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField zonaInteriorNFumRestauranteText = new JTextField(3);\r\n        zonaInteriorNFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField zonaInteriorFumRestauranteText = new JTextField(3);\r\n        zonaInteriorFumRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioAlmocoInicioRestauranteText = new JTextField(3);\r\n        horarioAlmocoInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioAlmocoFimRestauranteText = new JTextField(3);\r\n        horarioAlmocoFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioJantarInicioRestauranteText = new JTextField(3);\r\n        horarioJantarInicioRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioJantarFimRestauranteText = new JTextField(3);\r\n        horarioJantarFimRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        ///////\r\n        JTextField usernameRestauranteText = new JTextField(20);\r\n        usernameRestauranteText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        JPasswordField passwordRestauranteField = new JPasswordField(15);\r\n        passwordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JPasswordField confirmarPasswordRestauranteField = new JPasswordField(15);\r\n        confirmarPasswordRestauranteField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        JButton ptEnNovoRestauranteButton = new JButton(\"PT/EN\");\r\n        JButton cancelarRestauranteButton = new JButton(\"CANCELAR\");\r\n        JButton registarRestauranteButton = new JButton(\"REGISTAR\");\r\n\r\n        registarNovoRestauranteSuperPanel.add(norteNovoRestauranteSubPanel, \"North\");\r\n        registarNovoRestauranteSuperPanel.add(centroNovoRestauranteSubPanel, \"Center\");\r\n        registarNovoRestauranteSuperPanel.add(sulNovoRestauranteSubPanel, \"South\");\r\n\r\n//        JPanel norteSupMRestSubPanel = new JPanel();\r\n//        norteSupMRestSubPanel.setLayout(new FlowLayout());\r\n//        norteNovoRestauranteSubPanel.add(norteSupMRestSubPanel, BorderLayout.CENTER);\r\n//        norteSupMRestSubPanel.add(registarNovoRestauranteLabel);\r\n//        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);\r\n\r\n        JPanel norteNovoRestSSPanel = new JPanel();\r\n        norteNovoRestSSPanel.setLayout(new FlowLayout());\r\n        norteNovoRestSSPanel.add(registarNovoRestauranteLabel);\r\n        norteNovoRestauranteSubPanel.add(norteNovoRestSSPanel, BorderLayout.CENTER);\r\n        norteNovoRestauranteSubPanel.add(ptEnNovoRestauranteButton, BorderLayout.EAST);\r\n\r\n        JPanel centroNovoRestSSPanelForm1 = new JPanel();\r\n        centroNovoRestSSPanelForm1.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm1);\r\n        JPanel centroNovoRestSSPanelForm2 = new JPanel();\r\n        centroNovoRestSSPanelForm2.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2, BorderLayout.CENTER);\r\n        JPanel centroNovoRestSSPanelForm2A = new JPanel();\r\n        centroNovoRestSSPanelForm2A.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm2A, BorderLayout.CENTER);\r\n        JPanel centroNovoRestSSPanelForm3 = new JPanel();\r\n        //centroNovoRestSSPanelForm3.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm3, BorderLayout.CENTER);\r\n\r\n        JPanel centroNovoRestSSPanelForm4 = new JPanel();\r\n        centroNovoRestSSPanelForm4.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm4, BorderLayout.CENTER);\r\n\r\n        JPanel centroNovoRestSSPanelForm5 = new JPanel();\r\n        centroNovoRestSSPanelForm5.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm5, BorderLayout.CENTER);\r\n\r\n        JPanel centroNovoRestSSPanelForm6 = new JPanel();\r\n        centroNovoRestSSPanelForm6.setLayout(new FlowLayout());\r\n        centroNovoRestauranteSubPanel.add(centroNovoRestSSPanelForm6, BorderLayout.CENTER);\r\n\r\n        centroNovoRestSSPanelForm1.add(nomeRestauranteLabel);\r\n        centroNovoRestSSPanelForm1.add(nomeRestauranteText);\r\n        centroNovoRestSSPanelForm1.add(emailRestauranteLabel);\r\n        centroNovoRestSSPanelForm1.add(emailRestauranteText);\r\n        centroNovoRestSSPanelForm2.add(moradaRestauranteLabel);\r\n        centroNovoRestSSPanelForm2.add(moradaRestauranteText);\r\n        centroNovoRestSSPanelForm2A.add(cidadeRestauranteLabel);\r\n        centroNovoRestSSPanelForm2A.add(cidadeRestauranteText);\r\n        centroNovoRestSSPanelForm2A.add(telemovelRestauranteLabel);\r\n        centroNovoRestSSPanelForm2A.add(telemovelRestauranteText);\r\n        /////\r\n        centroNovoRestSSPanelForm3.add(lotacaoRestauranteLabel);\r\n        centroNovoRestSSPanelForm3.add(esplanadaRestauranteLabel);\r\n        centroNovoRestSSPanelForm3.add(esplanadaRestauranteText);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorLabel);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteLabel);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorNFumRestauranteText);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteLabel);\r\n        centroNovoRestSSPanelForm3.add(zonaInteriorFumRestauranteText);\r\n\r\n        centroNovoRestSSPanelForm4.add(horariosRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horariosAlmocoRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioAlmocoInicioRestauranteText);\r\n        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioAlmocoFimRestauranteText);\r\n        centroNovoRestSSPanelForm4.add(horariosJantarRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioJantarInicioRestauranteText);\r\n        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteLabel);\r\n        centroNovoRestSSPanelForm4.add(horarioJantarFimRestauranteText);\r\n\r\n        //\r\n        centroNovoRestSSPanelForm5.add(usernameRestauranteLabel);\r\n        centroNovoRestSSPanelForm5.add(usernameRestauranteText);\r\n\r\n        centroNovoRestSSPanelForm6.add(passwordRestauranteLabel);\r\n        centroNovoRestSSPanelForm6.add(passwordRestauranteField);\r\n        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteLabel);\r\n        centroNovoRestSSPanelForm6.add(confirmarPasswordRestauranteField);\r\n\r\n\r\n        sulNovoRestauranteSubPanel.setLayout(new FlowLayout());\r\n        sulNovoRestauranteSubPanel.add(cancelarRestauranteButton);\r\n        sulNovoRestauranteSubPanel.add(registarRestauranteButton);\r\n\r\n        cancelarRestauranteButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n\r\n        registarRestauranteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(500, 300);\r\n\r\n        });\r\n    }\r\n\r\n    //////MENU RESTAURANTE////////\r\n    private void construirPanelMRest(Container contentor, JPanel loginSuperPanel, JPanel menuRestauranteSuperPanel) {\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMenuRestauranteSubPanel = new JPanel();\r\n        norteMenuRestauranteSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMenuRestauranteSubPanel = new JPanel();\r\n        JPanel sulMenuRestauranteSubPanel = new JPanel();\r\n\r\n        JLabel registarNovoRestauranteLabel = new JLabel(\"MENU RESTAURANTE\");\r\n        registarNovoRestauranteLabel.setForeground(Color.RED);\r\n\r\n        JButton ptEnMenuRestauranteButton = new JButton(\"PT/EN\");\r\n        ////\r\n        JButton mRestAdicionarPratoButton = new JButton(\"ADICIONAR PRATO\");\r\n        JButton mRestActualizarPratoDiaButton = new JButton(\"ACTUALIZAR PRATO DO DIA\");\r\n        JButton mRestActualizarDadosButton = new JButton(\"ACTUALIZAR DADOS\");\r\n        JButton mRestReservasButton = new JButton(\"RESERVAS\");\r\n        JButton mRestConsultarComentariosButton = new JButton(\"COMENTÁRIOS\");\r\n        JButton pontuacaoMedia = new JButton(\"PONTUAÇÃO MÉDIA\");\r\n\r\n\r\n        ///\r\n        //JButton cancelarMenuRestauranteButton = new JButton(\"CANCELAR\");\r\n        JButton logoutMenuRestauranteButton = new JButton(\"LOGOUT\");\r\n\r\n        menuRestauranteSuperPanel.add(norteMenuRestauranteSubPanel, \"North\");\r\n        menuRestauranteSuperPanel.add(centroMenuRestauranteSubPanel, \"Center\");\r\n        menuRestauranteSuperPanel.add(sulMenuRestauranteSubPanel, \"South\");\r\n\r\n        JPanel norteMenuRestauranteSSPanel = new JPanel();\r\n        norteMenuRestauranteSSPanel.setLayout(new FlowLayout());\r\n        norteMenuRestauranteSSPanel.add(registarNovoRestauranteLabel);\r\n        norteMenuRestauranteSubPanel.add(norteMenuRestauranteSSPanel, BorderLayout.CENTER);\r\n        norteMenuRestauranteSubPanel.add(ptEnMenuRestauranteButton, BorderLayout.EAST);\r\n\r\n        JPanel centroNovoRestauranteSSPanelForm = new JPanel();\r\n        centroNovoRestauranteSSPanelForm.setLayout(new GridLayout(7, 1));\r\n        centroMenuRestauranteSubPanel.add(centroNovoRestauranteSSPanelForm);\r\n        centroNovoRestauranteSSPanelForm.add(mRestAdicionarPratoButton);\r\n        centroNovoRestauranteSSPanelForm.add(mRestActualizarPratoDiaButton);\r\n        centroNovoRestauranteSSPanelForm.add(mRestActualizarDadosButton);\r\n        centroNovoRestauranteSSPanelForm.add(mRestReservasButton);\r\n        centroNovoRestauranteSSPanelForm.add(mRestConsultarComentariosButton);\r\n        centroNovoRestauranteSSPanelForm.add(pontuacaoMedia);\r\n\r\n        sulMenuRestauranteSubPanel.setLayout(new FlowLayout());\r\n        //sulMenuRestauranteSubPanel.add(cancelarMenuRestauranteButton);\r\n        sulMenuRestauranteSubPanel.add(logoutMenuRestauranteButton);\r\n\r\n//        cancelarMenuRestauranteButton.addActionListener(a -> {\r\n//           CardLayout cl = (CardLayout) contentor.getLayout();\r\n//           cl.show(contentor, LOGIN_CARD);\r\n//            this.setSize(500, 300);\r\n//\r\n//       });\r\n        mRestAdicionarPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MRESTADICIONARPRATO_CARD);\r\n            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n        });\r\n\r\n        mRestActualizarPratoDiaButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MRESTACTUALIZARPRATO_CARD);\r\n            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n        });\r\n\r\n        mRestReservasButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MRESTRESERV_CARD);\r\n            this.setSize(LARGURA_PADRAO, 350);\r\n        });\r\n\r\n        mRestActualizarDadosButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MRESTACTUALIZARDADOS_CARD);\r\n            this.setSize(LARGURA_PADRAO, 350);\r\n        });\r\n\r\n//        mRestReservasButton.addActionListener(a -> {\r\n//            CardLayout cl = (CardLayout) contentor.getLayout();\r\n//            cl.show(contentor, MRESTCOMENTARIOS_CARD);\r\n//            this.setSize(LARGURA_PADRAO, 350);\r\n//      });\r\n\r\n        mRestConsultarComentariosButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MRESTCOMENTARIOS_CARD);\r\n            this.setSize(LARGURA_PADRAO, 350);\r\n        });\r\n\r\n        logoutMenuRestauranteButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(LARGURA_LOGIN, ALTURA_LOGIN);\r\n        });\r\n    }\r\n\r\n    ///////////MENU RESTAURANTE - ADICIONAR PRATO//////////////////////\r\n    private void construirPanelMRestAdPrato(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAdPratoSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteAdPratoSubPanel = new JPanel();\r\n        norteAdPratoSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroAdPratoSubPanel = new JPanel();\r\n        JPanel sulAdPratoSubPanel = new JPanel();\r\n\r\n        JLabel adPratoLabel = new JLabel(\"ADICIONAR PRATO\");\r\n        JLabel nomePratoLabel = new JLabel(\"Nome Prato\");\r\n        JLabel descricaoPratoLabel = new JLabel(\"Descrição\");\r\n        JLabel precoPratoLabel = new JLabel(\"Preço\");\r\n\r\n        JTextField nomePratoText = new JTextField(20);\r\n        JTextField descricaoPratoText = new JTextField(20);\r\n        JTextField precoPratoText = new JTextField(10);\r\n\r\n\r\n        JButton ptEnAdPratoButton = new JButton(\"PT/EN\");\r\n        JButton voltarMenuRestAdPratoButton = new JButton(\"MENU RESTAURANTE\");\r\n        JButton confirmarAdPratoButton = new JButton(\"CONFIRMAR\");\r\n\r\n\r\n        JComboBox tipoPratoAd = new JComboBox();\r\n        tipoPratoAd.addItem(\"Carta\");\r\n        tipoPratoAd.addItem(\"Prato do dia\");\r\n\r\n\r\n        mRestAdPratoSuperPanel.add(norteAdPratoSubPanel, \"North\");\r\n        mRestAdPratoSuperPanel.add(centroAdPratoSubPanel, \"Center\");\r\n        mRestAdPratoSuperPanel.add(sulAdPratoSubPanel, \"South\");\r\n\r\n        JPanel norteAdPratoSSPanel = new JPanel();\r\n        norteAdPratoSSPanel.setLayout(new FlowLayout());\r\n        norteAdPratoSSPanel.add(adPratoLabel);\r\n        norteAdPratoSubPanel.add(norteAdPratoSSPanel, BorderLayout.CENTER);\r\n        norteAdPratoSubPanel.add(ptEnAdPratoButton, BorderLayout.EAST);\r\n\r\n        JPanel centroAdPratoSSPanelForm = new JPanel();\r\n        centroAdPratoSSPanelForm.setLayout(new GridLayout(5, 2));\r\n        centroAdPratoSubPanel.add(centroAdPratoSSPanelForm);\r\n        centroAdPratoSubPanel.add(tipoPratoAd);\r\n        centroAdPratoSSPanelForm.add(nomePratoLabel);\r\n        centroAdPratoSSPanelForm.add(nomePratoText);\r\n        centroAdPratoSSPanelForm.add(descricaoPratoLabel);\r\n        centroAdPratoSSPanelForm.add(descricaoPratoText);\r\n        centroAdPratoSSPanelForm.add(precoPratoLabel);\r\n        centroAdPratoSSPanelForm.add(precoPratoText);\r\n\r\n        sulAdPratoSubPanel.setLayout(new FlowLayout());\r\n        sulAdPratoSubPanel.add(voltarMenuRestAdPratoButton);\r\n        sulAdPratoSubPanel.add(confirmarAdPratoButton);\r\n\r\n\r\n        voltarMenuRestAdPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n        confirmarAdPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    /////////MENU RESTAURANTE – ACTUALIZAR PRATO//////////////////////\r\n    private void construirPanelMRestAtPratoDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtPratoSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteAtPratoSubPanel = new JPanel();\r\n        norteAtPratoSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroAtPratoSubPanel = new JPanel();\r\n        JPanel sulAtPratoSubPanel = new JPanel();\r\n\r\n        JLabel atPratoLabel = new JLabel(\"ACTUALIZAR PRATO DO DIA\");\r\n        JLabel atNomePratoLabel = new JLabel(\"Nome Prato\");\r\n        JLabel atDescricaoPratoLabel = new JLabel(\"Descrição\");\r\n        JLabel atPrecoPratoLabel = new JLabel(\"Preço\");\r\n\r\n        JTextField atNomePratoText = new JTextField(20);\r\n        JTextField atDescricaoPratoText = new JTextField(20);\r\n        JTextField atPrecoPratoText = new JTextField(10);\r\n\r\n        JButton ptEnAtPratoButton = new JButton(\"PT/EN\");\r\n        JButton voltarMenuRestAtPratoButton = new JButton(\"MENU RESTAURANTE\");\r\n        JButton confirmarAtPratoButton = new JButton(\"CONFIRMAR\");\r\n\r\n        mRestAtPratoSuperPanel.add(norteAtPratoSubPanel, \"North\");\r\n        mRestAtPratoSuperPanel.add(centroAtPratoSubPanel, \"Center\");\r\n        mRestAtPratoSuperPanel.add(sulAtPratoSubPanel, \"South\");\r\n\r\n        JPanel norteAtPratoSSPanel = new JPanel();\r\n        norteAtPratoSSPanel.setLayout(new FlowLayout());\r\n        norteAtPratoSSPanel.add(atPratoLabel);\r\n        norteAtPratoSubPanel.add(norteAtPratoSSPanel, BorderLayout.CENTER);\r\n        norteAtPratoSubPanel.add(ptEnAtPratoButton, BorderLayout.EAST);\r\n\r\n        JPanel centroAtPratoSSPanelForm = new JPanel();\r\n        centroAtPratoSSPanelForm.setLayout(new GridLayout(3, 2));\r\n        centroAtPratoSubPanel.add(centroAtPratoSSPanelForm);\r\n        //centroAtPratoSSPanelForm.add(atPratoLabel);\r\n        centroAtPratoSSPanelForm.add(atNomePratoLabel);\r\n        centroAtPratoSSPanelForm.add(atNomePratoText);\r\n        centroAtPratoSSPanelForm.add(atDescricaoPratoLabel);\r\n        centroAtPratoSSPanelForm.add(atDescricaoPratoText);\r\n        centroAtPratoSSPanelForm.add(atPrecoPratoLabel);\r\n        centroAtPratoSSPanelForm.add(atPrecoPratoText);\r\n\r\n        sulAtPratoSubPanel.setLayout(new FlowLayout());\r\n        sulAtPratoSubPanel.add(voltarMenuRestAtPratoButton);\r\n        sulAtPratoSubPanel.add(confirmarAtPratoButton);\r\n\r\n\r\n        voltarMenuRestAtPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n        confirmarAtPratoButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n    }\r\n\r\n    ///////////////////MENU RESTAURANTE - ACTUALIZAR DADOS /////////////////////////\r\n    private void construirPanelMRestAtDados(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestAtDadosSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMRestAtDadosSubPanel = new JPanel();\r\n        norteMRestAtDadosSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMRestAtDadosSubPanel = new JPanel();\r\n        JPanel sulMRestAtDadosSubPanel = new JPanel();\r\n\r\n        JLabel atDadosRestLabel = new JLabel(\"ACTUALIZAR DADOS\");\r\n        JLabel nomeAtDadosRestLabel = new JLabel(\"Nome\");\r\n        JLabel emailAtDadosRestLabel = new JLabel(\"E-mail\");\r\n        JLabel moradaAtDadosRestLabel = new JLabel(\"Morada\");\r\n        JLabel cidadeAtDadosRestLabel = new JLabel(\"Cidade\");\r\n        JLabel telemovelAtDadosRestLabel = new JLabel(\"Telemóvel\");\r\n///////////////////////\r\n        JLabel lotacaoAtDadosRestLabel = new JLabel(\"Lotação:\");\r\n        JLabel esplanadaAtDadosRestLabel = new JLabel(\"Esplanada\");\r\n        JLabel zonaInteriorAtDadosRestLabel = new JLabel(\"Zona Interior:\");\r\n        JLabel zonaInteriorNFumAtDadosRestLabel = new JLabel(\"Ñ Fumadores\");\r\n        JLabel zonaInteriorFumAtDadosRestLabel = new JLabel(\"Fumadores\");\r\n        JLabel horariosAtDadosRestLabel = new JLabel(\"Horários:\");\r\n        JLabel horariosAlmocoAtDadosRestLabel = new JLabel(\"Almoço:\");\r\n        JLabel horarioAlmocoInicioAtDadosRestLabel = new JLabel(\"Início\");\r\n        JLabel horarioAlmocoFimAtDadosRestLabel = new JLabel(\"Fim\");\r\n        JLabel horariosJantarAtDadosRestLabel = new JLabel(\"Jantar:\");\r\n        JLabel horarioJantarInicioAtDadosRestLabel = new JLabel(\"Início\");\r\n        JLabel horarioJantarFimAtDadosRestLabel = new JLabel(\"Fim\");\r\n        JLabel usernameAtDadosRestLabel = new JLabel(\"Username\");\r\n        JLabel passwordAtDadosRestLabel = new JLabel(\"Password\");\r\n        JLabel confirmarPasswordAtDadosRestLabel = new JLabel(\"Confirmar password \");\r\n\r\n        JTextField nomeAtDadosRestText = new JTextField(18);\r\n        nomeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField emailAtDadosRestText = new JTextField(18);\r\n        emailAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField moradaAtDadosRestText = new JTextField(20);\r\n        moradaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField cidadeAtDadosRestText = new JTextField(15);\r\n        cidadeAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField telemovelAtDadosRestText = new JFormattedTextField(mascaraTelemovel);\r\n        telemovelAtDadosRestText.setColumns(8);\r\n        telemovelAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        //JTextField lotacaoAtDadosRestText = new JTextField(5);\r\n        JTextField esplanadaAtDadosRestText = new JTextField(3);\r\n        esplanadaAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField zonaInteriorNFumAtDadosRestText = new JTextField(3);\r\n        zonaInteriorNFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField zonaInteriorFumAtDadosRestText = new JTextField(3);\r\n        zonaInteriorFumAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioAlmocoInicioAtDadosRestText = new JTextField(3);\r\n        horarioAlmocoInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioAlmocoFimAtDadosRestText = new JTextField(3);\r\n        horarioAlmocoFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioJantarInicioAtDadosRestText = new JTextField(3);\r\n        horarioJantarInicioAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JTextField horarioJantarFimAtDadosRestText = new JTextField(3);\r\n        horarioJantarFimAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        ///////\r\n        JTextField usernameAtDadosRestText = new JTextField(20);\r\n        usernameAtDadosRestText.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        JPasswordField passwordAtDadosRestField = new JPasswordField(15);\r\n        passwordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n        JPasswordField confirmarPasswordAtDadosRestField = new JPasswordField(15);\r\n        confirmarPasswordAtDadosRestField.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\r\n\r\n        JButton ptEnAtDadosRestButton = new JButton(\"PT/EN\");\r\n        JButton voltarMenuRestAtDadosRestButton = new JButton(\"MENU RESTAURANTE\");\r\n        JButton atDadosRestButton = new JButton(\"ACTUALIZAR\");\r\n\r\n        mRestAtDadosSuperPanel.add(norteMRestAtDadosSubPanel, \"North\");\r\n        mRestAtDadosSuperPanel.add(centroMRestAtDadosSubPanel, \"Center\");\r\n        mRestAtDadosSuperPanel.add(sulMRestAtDadosSubPanel, \"South\");\r\n\r\n        JPanel norteAtDadosRestSSPanel = new JPanel();\r\n        norteAtDadosRestSSPanel.setLayout(new FlowLayout());\r\n        norteAtDadosRestSSPanel.add(atDadosRestLabel);\r\n        norteMRestAtDadosSubPanel.add(norteAtDadosRestSSPanel, BorderLayout.CENTER);\r\n        norteMRestAtDadosSubPanel.add(ptEnAtDadosRestButton, BorderLayout.EAST);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm1 = new JPanel();\r\n        centroAtDadosRestSSPanelForm1.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm1, BorderLayout.WEST);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm2 = new JPanel();\r\n        centroAtDadosRestSSPanelForm2.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2, BorderLayout.WEST);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm2A = new JPanel();\r\n        centroAtDadosRestSSPanelForm2A.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm2A, BorderLayout.WEST);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm3 = new JPanel();\r\n        //centroAtDadosRestSSPanelForm3.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm3, BorderLayout.WEST);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm4 = new JPanel();\r\n        centroAtDadosRestSSPanelForm4.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm4, BorderLayout.WEST);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm5 = new JPanel();\r\n        centroAtDadosRestSSPanelForm5.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm5, BorderLayout.WEST);\r\n\r\n        JPanel centroAtDadosRestSSPanelForm6 = new JPanel();\r\n        centroAtDadosRestSSPanelForm6.setLayout(new FlowLayout());\r\n        centroMRestAtDadosSubPanel.add(centroAtDadosRestSSPanelForm6, BorderLayout.WEST);\r\n\r\n        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm1.add(nomeAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm1.add(emailAtDadosRestText);\r\n\r\n        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm2.add(moradaAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm2A.add(cidadeAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm2A.add(telemovelAtDadosRestText);\r\n\r\n        centroAtDadosRestSSPanelForm3.add(lotacaoAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(esplanadaAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorNFumAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm3.add(zonaInteriorFumAtDadosRestText);\r\n\r\n\r\n        centroAtDadosRestSSPanelForm4.add(horariosAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horariosAlmocoAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioAlmocoInicioAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioAlmocoFimAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm4.add(horariosJantarAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioJantarInicioAtDadosRestText);\r\n        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm4.add(horarioJantarFimAtDadosRestText);\r\n\r\n        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm5.add(usernameAtDadosRestText);\r\n\r\n        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm6.add(passwordAtDadosRestField);\r\n        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestLabel);\r\n        centroAtDadosRestSSPanelForm6.add(confirmarPasswordAtDadosRestField);\r\n\r\n        sulMRestAtDadosSubPanel.setLayout(new FlowLayout());\r\n        sulMRestAtDadosSubPanel.add(voltarMenuRestAtDadosRestButton);\r\n        sulMRestAtDadosSubPanel.add(atDadosRestButton);\r\n\r\n        voltarMenuRestAtDadosRestButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        atDadosRestButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    //////MENU RESTAURANTE – HISTÓRICO DE RESERVAS//////////\r\n    private void construirPanelMRestReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestReservasSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMRestReservasSubPanel = new JPanel();\r\n        norteMRestReservasSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMRestReservasSubPanel = new JPanel();\r\n        JPanel sulMRestReservasSubPanel = new JPanel();\r\n\r\n        JLabel mRestReservasLabel = new JLabel(\"HISTÓRICO DE RESERVAS\");\r\n        JLabel usernameMRestReservasLabel = new JLabel(\"Username\");\r\n        //JLabel filtrarTipomRestResLabel = new JLabel(\"Escolha a opção em que a lista será mostrada:\");\r\n        JLabel filtrarDataInicioMRestReservasLabel = new JLabel(\"De\");\r\n        JLabel filtrarDataFimMRestReservasLabel = new JLabel(\"Até\");\r\n\r\n\r\n        JTextField usernameMRestReservasText = new JTextField(20);\r\n\r\n        JCheckBox cem = new JCheckBox(\"Até 100\");\r\n        cem.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox duzentos = new JCheckBox(\"100-200\");\r\n        duzentos.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox trezentos = new JCheckBox(\"200-300\");\r\n        trezentos.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox quatrocentos = new JCheckBox(\"+ de 300\");\r\n        quatrocentos.setMnemonic(KeyEvent.VK_C);\r\n\r\n\r\n        JRadioButton filtrarIntervDatasMRestResRButton = new JRadioButton(\"DATAS\");\r\n        //todo verificar a questão do calendário\r\n        JRadioButton filtrarTipomRestResRButton = new JRadioButton(\"TIPO\");\r\n        JRadioButton filtrarIntervValmRestResRButton = new JRadioButton(\"VALORES\");\r\n        JRadioButton filtrarClientemRestResRButton = new JRadioButton(\"CLIENTE\");\r\n\r\n        ButtonGroup group = new ButtonGroup();\r\n        group.add(filtrarIntervDatasMRestResRButton);\r\n        group.add(filtrarTipomRestResRButton);\r\n        group.add(filtrarIntervValmRestResRButton);\r\n        group.add(filtrarClientemRestResRButton);\r\n\r\n        JComboBox<String> filtrosTipoMRestReservasJCBox = new JComboBox<>();\r\n        filtrosTipoMRestReservasJCBox.addItem(\"\");\r\n        filtrosTipoMRestReservasJCBox.addItem(\"Presencial\");\r\n        filtrosTipoMRestReservasJCBox.addItem(\"Take-Away\");\r\n\r\n        JButton ptEnMRestReservasButton = new JButton(\"PT/EN\");\r\n        JButton voltarMRestReservasButton = new JButton(\"MENU RESTAURANTE\");\r\n        JButton okMRestReservasButton = new JButton(\"OK\");\r\n\r\n        //Adição do calendário\r\n        UtilDateModel model1 = new UtilDateModel();\r\n        UtilDateModel model2 = new UtilDateModel();\r\n\r\n        ResourceBundle b = ResourceBundle.getBundle(\"Text\");\r\n\r\n        Properties p = convertResourceBundleToProperties(b);\r\n        JDatePanelImpl datePanel = new JDatePanelImpl(model1, p);\r\n        JDatePickerImpl datePicker1 = new JDatePickerImpl(datePanel, new DateLabelFormatter());\r\n\r\n        JDatePanelImpl datePanel1 = new JDatePanelImpl(model2, p);\r\n        JDatePickerImpl datePicker2 = new JDatePickerImpl(datePanel1, new DateLabelFormatter());\r\n\r\n        mRestReservasSuperPanel.add(norteMRestReservasSubPanel, \"North\");\r\n        mRestReservasSuperPanel.add(centroMRestReservasSubPanel, \"Center\");\r\n        mRestReservasSuperPanel.add(sulMRestReservasSubPanel, \"South\");\r\n\r\n        JPanel norteMRestReservasSSPanel = new JPanel();\r\n        norteMRestReservasSSPanel.setLayout(new FlowLayout());\r\n        norteMRestReservasSSPanel.add(mRestReservasLabel);\r\n        norteMRestReservasSubPanel.add(norteMRestReservasSSPanel, BorderLayout.CENTER);\r\n        norteMRestReservasSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMRestReservasSSPanel = new JPanel();\r\n        centroMRestReservasSSPanel.setLayout(new FlowLayout());\r\n        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel, BorderLayout.WEST);\r\n\r\n        JPanel centroMRestReservasSSPanel1 = new JPanel();\r\n        centroMRestReservasSSPanel1.setLayout(new FlowLayout());\r\n        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel1, BorderLayout.WEST);\r\n\r\n        JPanel centroMRestReservasSSPanel2 = new JPanel();\r\n        centroMRestReservasSSPanel2.setLayout(new FlowLayout());\r\n        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2, BorderLayout.WEST);\r\n\r\n        JPanel centroMRestReservasSSPanel2A = new JPanel();\r\n        centroMRestReservasSSPanel2A.setLayout(new GridLayout(1, 1));\r\n        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel2A, BorderLayout.WEST);\r\n\r\n        JPanel centroMRestReservasSSPanel3 = new JPanel();\r\n        centroMRestReservasSSPanel3.setLayout(new FlowLayout());\r\n        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel3, BorderLayout.WEST);\r\n\r\n        JPanel centroMRestReservasSSPanel4 = new JPanel();\r\n        centroMRestReservasSSPanel4.setLayout(new FlowLayout());\r\n        centroMRestReservasSubPanel.add(centroMRestReservasSSPanel4, BorderLayout.WEST);\r\n\r\n        centroMRestReservasSSPanel.add(filtrarIntervDatasMRestResRButton);\r\n        centroMRestReservasSSPanel1.add(filtrarDataInicioMRestReservasLabel);\r\n        centroMRestReservasSSPanel1.add(datePicker1);\r\n        centroMRestReservasSSPanel1.add(filtrarDataFimMRestReservasLabel);\r\n        centroMRestReservasSSPanel1.add(datePicker2);\r\n\r\n        centroMRestReservasSSPanel2.add(filtrarTipomRestResRButton);\r\n        centroMRestReservasSSPanel2A.add(filtrosTipoMRestReservasJCBox);\r\n\r\n        centroMRestReservasSSPanel3.add(filtrarIntervValmRestResRButton);\r\n        centroMRestReservasSSPanel3.add(cem);\r\n        centroMRestReservasSSPanel3.add(duzentos);\r\n        centroMRestReservasSSPanel3.add(trezentos);\r\n        centroMRestReservasSSPanel3.add(quatrocentos);\r\n\r\n        centroMRestReservasSSPanel4.add(filtrarClientemRestResRButton);\r\n        centroMRestReservasSSPanel4.add(usernameMRestReservasLabel);\r\n        centroMRestReservasSSPanel4.add(usernameMRestReservasText);\r\n\r\n        sulMRestReservasSubPanel.setLayout(new FlowLayout());\r\n        sulMRestReservasSubPanel.add(voltarMRestReservasButton);\r\n        sulMRestReservasSubPanel.add(okMRestReservasButton);\r\n\r\n\r\n        voltarMRestReservasButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n        //todo ver os encaminhamentos\r\n        okMRestReservasButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convert ResourceBundle into a Properties object.\r\n     *\r\n     * @param resource a resource bundle to convert.\r\n     * @return Properties a properties version of the resource bundle.\r\n     */\r\n    private static Properties convertResourceBundleToProperties(ResourceBundle resource) {\r\n        Properties properties = new Properties();\r\n        Enumeration<String> keys = resource.getKeys();\r\n        while (keys.hasMoreElements()) {\r\n            String key = keys.nextElement();\r\n            properties.put(key, resource.getString(key));\r\n        }\r\n        return properties;\r\n    }\r\n\r\n\r\n    //////MENU RESTAURANTE – COMENTÁRIOS//////////\r\n    private void construirPanelMRestComentarios(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mRestComentariosSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMRestComentariosSubPanel = new JPanel();\r\n        norteMRestComentariosSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMRestComentariosSubPanel = new JPanel();\r\n        JPanel sulMRestComentariosSubPanel = new JPanel();\r\n\r\n        JLabel mRestComentariosLabel = new JLabel(\"COMENTÁRIOS RECEBIDOS\");\r\n\r\n\r\n        String[] nomeColunasMRestComentarios = new String[]{\r\n                \"USERNAME\", \"COMENTÁRIO\", \"PONTUAÇÃO\"\r\n        };\r\n\r\n        //todo exemplo a verificar\r\n        Object[][] dados = new Object[][]{\r\n                {\"USERNAME\", \"COMENTÁRIO\", \"PONTUAÇÃO\"},\r\n                {\"Nuno\", \"Muito bom\", 4.0},\r\n                {\"Manuel\", \"Excelente\", 5.0},\r\n                {\"André\", \"Pouco espaço interno\", 3.0},\r\n        };\r\n        //criação da tabela\r\n        JTable tabela = new JTable(dados, nomeColunasMRestComentarios);\r\n\r\n//        JPopupMenu popupMenu = new JPopupMenu();\r\n//        JMenuItem menuItemAdd = new JMenuItem(\"Responder\");\r\n\r\n        JButton ptEnMRestReservasButton = new JButton(\"PT/EN\");\r\n        JButton voltarMRestComentariosButton = new JButton(\"MENU RESTAURANTE\");\r\n        JButton responderMRestComentariosButton = new JButton(\"OK\");\r\n\r\n        mRestComentariosSuperPanel.add(norteMRestComentariosSubPanel, \"North\");\r\n        mRestComentariosSuperPanel.add(centroMRestComentariosSubPanel, \"Center\");\r\n        mRestComentariosSuperPanel.add(sulMRestComentariosSubPanel, \"South\");\r\n\r\n        JPanel norteMRestComentariosSSPanel = new JPanel();\r\n        norteMRestComentariosSSPanel.setLayout(new FlowLayout());\r\n        norteMRestComentariosSSPanel.add(mRestComentariosLabel);\r\n        norteMRestComentariosSubPanel.add(norteMRestComentariosSSPanel, BorderLayout.CENTER);\r\n        norteMRestComentariosSubPanel.add(ptEnMRestReservasButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMRestReservasSSPanel1 = new JPanel();\r\n        centroMRestReservasSSPanel1.setLayout(new FlowLayout());\r\n        centroMRestComentariosSubPanel.add(tabela, BorderLayout.WEST);\r\n\r\n        sulMRestComentariosSubPanel.setLayout(new FlowLayout());\r\n        sulMRestComentariosSubPanel.add(voltarMRestComentariosButton);\r\n        sulMRestComentariosSubPanel.add(responderMRestComentariosButton);\r\n\r\n\r\n        voltarMRestComentariosButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENURESTAURANTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n        //todo ver os encaminhamentos para responder comentário\r\n        responderMRestComentariosButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n\r\n    }\r\n\r\n    //todo mudar linha pontuação e aparecer nome das colunas na tabela, permitir de possa comentar/pontuar uma reserva(Comentar um restaurante e atribuir pontuação)\r\n    //////MENU RESTAURANTE – LISTAR RESTAURANTES//////////\r\n    private void construirPanelMCliRestaurantes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliRestSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMCliRestSubPanel = new JPanel();\r\n        norteMCliRestSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMCliRestSubPanel = new JPanel();\r\n        JPanel sulMCliRestSubPanel = new JPanel();\r\n\r\n\r\n        JCheckBox um = new JCheckBox(\"1\");\r\n        um.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox dois = new JCheckBox(\"2\");\r\n        dois.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox tres = new JCheckBox(\"3\");\r\n        tres.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox quatro = new JCheckBox(\"4\");\r\n        quatro.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox cinco = new JCheckBox(\"5\");\r\n        cinco.setMnemonic(KeyEvent.VK_C);\r\n\r\n        JCheckBox dez = new JCheckBox(\">10€\");\r\n        um.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox dezVinte = new JCheckBox(\"10€-20€\");\r\n        dois.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox vinteTrinta = new JCheckBox(\"20€-30€\");\r\n        tres.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox trintaQuarenta = new JCheckBox(\"30€-40€\");\r\n        quatro.setMnemonic(KeyEvent.VK_C);\r\n        JCheckBox quarenta = new JCheckBox(\"<40€\");\r\n        cinco.setMnemonic(KeyEvent.VK_C);\r\n\r\n\r\n        JLabel mCliRestLabel = new JLabel(\"PESQUISAR RESTAURANTES\");\r\n        JLabel fDataMCliRestLabel = new JLabel(\"DATA\");\r\n        JLabel fhoraFMCliRestLabel = new JLabel(\"HORA DE FUNCIONAMENTO:\");\r\n        JLabel fvaloresMedCPMCliRestLabel = new JLabel(\"VALORES MÉDIOS DOS PRATOS:\");\r\n        JLabel fPontMCliRestLabel = new JLabel(\"PONTUAÇÃO:\");\r\n        JLabel fLotMCliRestLabel = new JLabel(\"LOTAÇÃO:\");\r\n        JLabel fCidMCliRestLabel = new JLabel(\"CIDADE:\");\r\n\r\n        JRadioButton fvaloresMCMCliRestRButton = new JRadioButton(\"CARTA\");\r\n        JRadioButton fvaloresMPMCliRestRButton = new JRadioButton(\"PRATOS DO DIA\");\r\n\r\n        ButtonGroup group = new ButtonGroup();\r\n        group.add(fvaloresMCMCliRestRButton);\r\n        group.add(fvaloresMPMCliRestRButton);\r\n\r\n        JComboBox<String> fHoraFMCliRestJCBox = new JComboBox<>();\r\n        fHoraFMCliRestJCBox.addItem(\"\");\r\n        fHoraFMCliRestJCBox.addItem(\"Almoço\");\r\n        fHoraFMCliRestJCBox.addItem(\"Jantar\");\r\n        fHoraFMCliRestJCBox.addItem(\"Ambos\");\r\n\r\n\r\n        //todo verificar porque não deu certo\r\n        JComboBox fLotCliRestJCBox = new JComboBox();\r\n        for (int i = 1; i <= 50; i++) {\r\n            fLotCliRestJCBox.addItem(i);\r\n        }\r\n\r\n        JComboBox fCidMCliRestJCBox = new JComboBox();\r\n        fCidMCliRestJCBox.addItem(\"\");\r\n        fCidMCliRestJCBox.addItem(\"Coimbra\");\r\n        fCidMCliRestJCBox.addItem(\"Porto\");\r\n        fCidMCliRestJCBox.addItem(\"Lisboa\");\r\n\r\n        JButton ptEnMCliRestButton = new JButton(\"PT/EN\");\r\n        JButton voltarMCliRestButton = new JButton(\"MENU CLIENTE\");\r\n        JButton okMCliRestButton = new JButton(\"OK\");\r\n\r\n        //todo exemplo a verificar\r\n        String[] nomeColunasMCliRest = new String[]{\r\n                \"ZONA\", \"TOTAL\", \"DISPONÍVEIS\"\r\n        };\r\n\r\n        Object[][] dados = new Object[][]{\r\n                {\"ZONA\", \"TOTAL\", \"DISPONÍVEIS\"},\r\n                {\"Esplanada\", 20, 5},\r\n                {\"Interior Ñ Fumadores\", 20, 10},\r\n                {\"Interior Fumadores\", 5, 2},\r\n        };\r\n        //criação da tabela\r\n        JTable tabelaMCliRest = new JTable(dados, nomeColunasMCliRest);\r\n\r\n\r\n//Calendário\r\n        UtilDateModel model3 = new UtilDateModel();\r\n\r\n        ResourceBundle b = ResourceBundle.getBundle(\"Text\");\r\n\r\n        Properties p = convertResourceBundleToProperties(b);\r\n        JDatePanelImpl datePanel2 = new JDatePanelImpl(model3, p);\r\n        JDatePickerImpl datePicker3 = new JDatePickerImpl(datePanel2, new DateLabelFormatter());\r\n\r\n        mCliRestSuperPanel.add(norteMCliRestSubPanel, \"North\");\r\n        mCliRestSuperPanel.add(centroMCliRestSubPanel, \"Center\");\r\n        mCliRestSuperPanel.add(sulMCliRestSubPanel, \"South\");\r\n\r\n        JPanel norteMCliRestSSPanel = new JPanel();\r\n        norteMCliRestSSPanel.setLayout(new FlowLayout());\r\n        norteMCliRestSSPanel.add(mCliRestLabel);\r\n        norteMCliRestSubPanel.add(norteMCliRestSSPanel, BorderLayout.CENTER);\r\n        norteMCliRestSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMCliRestSSPanel = new JPanel();\r\n        centroMCliRestSSPanel.setLayout(new GridLayout(1, 2));\r\n        centroMCliRestSubPanel.add(centroMCliRestSSPanel);\r\n\r\n        JPanel centroMCliRestSSPanel1 = new JPanel();\r\n        centroMCliRestSSPanel1.setLayout(new GridBagLayout());\r\n        centroMCliRestSubPanel.add(centroMCliRestSSPanel1);\r\n\r\n        JPanel centroMCliRestSSPanel2 = new JPanel();\r\n        centroMCliRestSSPanel2.setLayout(new GridBagLayout());\r\n        centroMCliRestSubPanel.add(centroMCliRestSSPanel2);\r\n\r\n        JPanel centroMCliRestSSPanel3 = new JPanel();\r\n        centroMCliRestSSPanel3.setLayout(new GridBagLayout());\r\n        centroMCliRestSubPanel.add(centroMCliRestSSPanel3);\r\n\r\n        JPanel centroMCliRestSSPanel4 = new JPanel();\r\n        centroMCliRestSSPanel4.setLayout(new BorderLayout());\r\n        centroMCliRestSubPanel.add(centroMCliRestSSPanel4, BorderLayout.CENTER);\r\n\r\n        JPanel centroMCliRestSSPanel5 = new JPanel();\r\n        centroMCliRestSSPanel5.setLayout(new GridBagLayout());\r\n        centroMCliRestSubPanel.add(centroMCliRestSSPanel5);\r\n\r\n        JPanel centroMCliRestSSPanel6 = new JPanel();\r\n        centroMCliRestSSPanel6.setLayout(new GridBagLayout());\r\n        centroMCliRestSubPanel.add(centroMCliRestSSPanel6);\r\n\r\n        JPanel centroMCliRestSSPanel7 = new JPanel();\r\n        centroMCliRestSSPanel7.setLayout(new GridBagLayout());\r\n        centroMCliRestSubPanel.add(centroMCliRestSSPanel7);\r\n\r\n        centroMCliRestSSPanel.add(fhoraFMCliRestLabel);\r\n        centroMCliRestSSPanel1.add(fDataMCliRestLabel);\r\n        centroMCliRestSSPanel1.add(datePicker3);\r\n        centroMCliRestSSPanel1.add(fHoraFMCliRestJCBox);\r\n\r\n        centroMCliRestSSPanel2.add(fvaloresMedCPMCliRestLabel);\r\n        centroMCliRestSSPanel2.add(fvaloresMCMCliRestRButton);\r\n        centroMCliRestSSPanel2.add(fvaloresMPMCliRestRButton);\r\n        centroMCliRestSSPanel3.add(dez);\r\n        centroMCliRestSSPanel3.add(dezVinte);\r\n        centroMCliRestSSPanel3.add(vinteTrinta);\r\n        centroMCliRestSSPanel3.add(trintaQuarenta);\r\n        centroMCliRestSSPanel3.add(quarenta);\r\n\r\n        centroMCliRestSSPanel4.add(fPontMCliRestLabel);\r\n        centroMCliRestSSPanel5.add(um);\r\n        centroMCliRestSSPanel5.add(dois);\r\n        centroMCliRestSSPanel5.add(tres);\r\n        centroMCliRestSSPanel5.add(quatro);\r\n        centroMCliRestSSPanel5.add(cinco);\r\n\r\n        centroMCliRestSSPanel6.add(fLotMCliRestLabel);\r\n        centroMCliRestSSPanel6.add(tabelaMCliRest);\r\n\r\n        centroMCliRestSSPanel7.add(fCidMCliRestLabel);\r\n        centroMCliRestSSPanel7.add(fCidMCliRestJCBox);\r\n\r\n        sulMCliRestSubPanel.setLayout(new FlowLayout());\r\n        sulMCliRestSubPanel.add(voltarMCliRestButton);\r\n        sulMCliRestSubPanel.add(okMCliRestButton);\r\n\r\n\r\n        voltarMCliRestButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n        //todo ver os encaminhamentos\r\n        okMCliRestButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n    }\r\n    //todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK\r\n    //////MENU CLIENTE – CONSULTAR COMENTÁRIOS//////////\r\n\r\n    private void construirPanelMCliComentarios(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliComSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMCliComSubPanel = new JPanel();\r\n        norteMCliComSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMCliComSubPanel = new JPanel();\r\n        JPanel sulMCliComSubPanel = new JPanel();\r\n\r\n        JLabel mCliFilComLabel = new JLabel(\"CONSULTAR COMENTÁRIOS:\");\r\n\r\n        JLabel mCliFComLabel = new JLabel(\"PRÓPRIOS\");\r\n        JLabel mCliFComCliLabel = new JLabel(\"CLIENTE\");\r\n        JLabel mCliFComRestLabel = new JLabel(\"RESTAURANTE\");\r\n        JLabel mCliFComDatasLabel = new JLabel(\"INTERVALO DATAS\");\r\n        JLabel mCliFComDataILabel = new JLabel(\"De\");\r\n        JLabel mCliFComDataFLabel = new JLabel(\"Até\");\r\n\r\n//todo faltou visualizar\r\n        String[] nomeColunasMCliCom = new String[]{\r\n                \"ID\", \"DATA\", \"RESTAURNATE\"\r\n        };\r\n\r\n        Object[][] data = new Object[][]{\r\n                {\"ID\", \"DATA\", \"RESTAURANTE\"},\r\n                {1, \"dd/MM/yyy\", \"A\"},\r\n                {2, \"dd/MM/yyy\", \"B\"},\r\n                {3, \"dd/MM/yyy\", \"C\"},\r\n        };\r\n        //criação da tabela\r\n        JTable tabelaMCliFCom = new JTable(data, nomeColunasMCliCom);\r\n\r\n        //JPopupMenu popupMenu = new JPopupMenu();\r\n        //JMenuItem menuItemAdd = new JMenuItem(\"Responder\");\r\n\r\n        JTextField mCliFComCliText = new JTextField(17);\r\n        JTextField mCliFComRestText = new JTextField(17);\r\n\r\n//Adição do calendário\r\n        UtilDateModel model4 = new UtilDateModel();\r\n        UtilDateModel model5 = new UtilDateModel();\r\n\r\n        ResourceBundle b = ResourceBundle.getBundle(\"Text\");\r\n\r\n        Properties p = convertResourceBundleToProperties(b);\r\n        JDatePanelImpl datePanel3 = new JDatePanelImpl(model4, p);\r\n        JDatePickerImpl datePicker4 = new JDatePickerImpl(datePanel3, new DateLabelFormatter());\r\n        JDatePanelImpl datePanel4 = new JDatePanelImpl(model5, p);\r\n        JDatePickerImpl datePicker5 = new JDatePickerImpl(datePanel4, new DateLabelFormatter());\r\n\r\n\r\n        JButton ptEnMCliRestButton = new JButton(\"PT/EN\");\r\n        JButton voltarMCliComButton = new JButton(\"MENU CLIENTE\");\r\n        JButton okMCliComButton = new JButton(\"OK\");\r\n\r\n        mCliComSuperPanel.add(norteMCliComSubPanel, \"North\");\r\n        mCliComSuperPanel.add(centroMCliComSubPanel, \"Center\");\r\n        mCliComSuperPanel.add(sulMCliComSubPanel, \"South\");\r\n\r\n        JPanel norteMCliComSSPanel = new JPanel();\r\n        norteMCliComSSPanel.setLayout(new FlowLayout());\r\n        norteMCliComSSPanel.add(mCliFilComLabel);\r\n        norteMCliComSubPanel.add(norteMCliComSSPanel, BorderLayout.CENTER);\r\n        norteMCliComSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMCliComSSPanel = new JPanel();\r\n        centroMCliComSSPanel.setLayout(new FlowLayout());\r\n        centroMCliComSubPanel.add(centroMCliComSSPanel, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliComSSPanel1 = new JPanel();\r\n        centroMCliComSSPanel1.setLayout(new FlowLayout());\r\n        centroMCliComSubPanel.add(centroMCliComSSPanel1, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliComSSPanel2 = new JPanel();\r\n        centroMCliComSSPanel2.setLayout(new FlowLayout());\r\n        centroMCliComSubPanel.add(centroMCliComSSPanel2, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliComSSPanel3 = new JPanel();\r\n        centroMCliComSSPanel3.setLayout(new FlowLayout());\r\n        centroMCliComSubPanel.add(centroMCliComSSPanel3, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliComSSPanel4 = new JPanel();\r\n        centroMCliComSSPanel4.setLayout(new FlowLayout());\r\n        centroMCliComSubPanel.add(centroMCliComSSPanel4, BorderLayout.CENTER);\r\n\r\n        centroMCliComSSPanel.add(mCliFComLabel);\r\n        centroMCliComSSPanel.add(tabelaMCliFCom);\r\n\r\n        centroMCliComSSPanel1.add(mCliFComCliLabel);\r\n        centroMCliComSSPanel1.add(mCliFComCliText);\r\n\r\n        centroMCliComSSPanel1.add(mCliFComRestLabel);\r\n        centroMCliComSSPanel1.add(mCliFComRestText);\r\n\r\n        centroMCliComSSPanel2.add(mCliFComDatasLabel);\r\n        centroMCliComSSPanel3.add(mCliFComDataILabel);\r\n        centroMCliComSSPanel3.add(datePicker4);\r\n        centroMCliComSSPanel3.add(mCliFComDataFLabel);\r\n        centroMCliComSSPanel3.add(datePicker5);\r\n\r\n        sulMCliComSubPanel.setLayout(new FlowLayout());\r\n        sulMCliComSubPanel.add(voltarMCliComButton);\r\n        sulMCliComSubPanel.add(okMCliComButton);\r\n\r\n\r\n        voltarMCliComButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n        //todo ver os encaminhamentos para responder comentário\r\n        okMCliComButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n\r\n    }\r\n\r\n    ////////////////////MENU CLIENTE - ACTUALIZAR DADOS /////////////////////////\r\n    private void construirPanelMCliAtDados(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliAtDadosSuperPanel) {\r\n\r\n        passwordValido = false;\r\n        confirmarPasswordValido = false;\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteAtDadosMCliSubPanel = new JPanel();\r\n        norteAtDadosMCliSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroAtDadosMCliSubPanel = new JPanel();\r\n        JPanel sulAtDadosMCliSubPanel = new JPanel();\r\n\r\n        JLabel atDadosMCliLabel = new JLabel(\"ACTUALIZAR DADOS\");\r\n        atDadosMCliLabel.setForeground(Color.BLUE);\r\n        JLabel nomeCliMCliLabel = new JLabel(\"Nome\");\r\n        //nomeCliMCliLabel.setBounds(50,80,100,20);\r\n        JLabel emailCliMCliLabel = new JLabel(\"E-mail\");\r\n        JLabel moradaCliMCliLabel = new JLabel(\"Morada\");\r\n        JLabel telemovelCliMCliLabel = new JLabel(\"Telemóvel\");\r\n        JLabel usernameCliMCliLabel = new JLabel(\"Username\");\r\n        JLabel passwordCliMCliLabel = new JLabel(\"Password\");\r\n        JLabel confirmarPasswordCliMCliLabel = new JLabel(\"Confirmar password: \");\r\n\r\n        JTextField nomeCliMCliText = new JTextField(20);\r\n        nomeCliMCliText.setMargin(new Insets(3, 3, 3, 3));\r\n        JTextField emailCliMCliText = new JTextField(20);\r\n        JTextField moradaCliMCliText = new JTextField(20);\r\n        JTextField telemovelCliMCliText = new JFormattedTextField(mascaraTelemovel);\r\n        telemovelCliMCliText.setColumns(20);\r\n        JTextField usernameCliMCliText = new JTextField(20);\r\n\r\n        JPasswordField passwordCliMCliField = new JPasswordField(20);\r\n        passwordCliMCliField.addFocusListener(new FocusListener() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                passwordValido = true;\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (passwordCliMCliField.getPassword().length<6) {\r\n                    passwordValido = false;\r\n                }\r\n\r\n            }\r\n        });\r\n        JPasswordField confirmarPassawordCliMCliField = new JPasswordField(20);\r\n        confirmarPassawordCliMCliField.addFocusListener(new FocusListener() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                confirmarPasswordValido = true;\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (!passwordCliMCliField.getPassword().equals(confirmarPassawordCliMCliField.getPassword())) {\r\n                    confirmarPasswordValido = false;\r\n                }\r\n\r\n            }\r\n        });\r\n        JButton ptEnAtDadosMCliButton = new JButton(\"PT/EN\");\r\n        JButton voltarCliMCliButton = new JButton(\"MENU CLIENTE\");\r\n        JButton actualizarCliMCliButton = new JButton(\"ACTUALIZAR\");\r\n\r\n        mCliAtDadosSuperPanel.add(norteAtDadosMCliSubPanel, \"North\");\r\n        mCliAtDadosSuperPanel.add(centroAtDadosMCliSubPanel, \"Center\");\r\n        mCliAtDadosSuperPanel.add(sulAtDadosMCliSubPanel, \"South\");\r\n\r\n        JPanel norteAtDadosMCliSSPanel = new JPanel();\r\n        norteAtDadosMCliSSPanel.setLayout(new FlowLayout());\r\n        norteAtDadosMCliSSPanel.add(atDadosMCliLabel);\r\n        norteAtDadosMCliSubPanel.add(norteAtDadosMCliSSPanel, BorderLayout.CENTER);\r\n        norteAtDadosMCliSubPanel.add(ptEnAtDadosMCliButton, BorderLayout.EAST);\r\n\r\n        JPanel centroAtDadosMCliSSPanel = new JPanel();\r\n        centroAtDadosMCliSSPanel.setLayout(new GridLayout(7, 2));\r\n        centroAtDadosMCliSubPanel.add(centroAtDadosMCliSSPanel);\r\n        centroAtDadosMCliSSPanel.add(nomeCliMCliLabel);\r\n        centroAtDadosMCliSSPanel.add(nomeCliMCliText);\r\n        centroAtDadosMCliSSPanel.add(emailCliMCliLabel);\r\n        centroAtDadosMCliSSPanel.add(emailCliMCliText);\r\n        centroAtDadosMCliSSPanel.add(moradaCliMCliLabel);\r\n        centroAtDadosMCliSSPanel.add(moradaCliMCliText);\r\n        centroAtDadosMCliSSPanel.add(telemovelCliMCliLabel);\r\n        centroAtDadosMCliSSPanel.add(telemovelCliMCliText);\r\n        centroAtDadosMCliSSPanel.add(usernameCliMCliLabel);\r\n        centroAtDadosMCliSSPanel.add(usernameCliMCliText);\r\n        centroAtDadosMCliSSPanel.add(passwordCliMCliLabel);\r\n        centroAtDadosMCliSSPanel.add(passwordCliMCliField);\r\n        centroAtDadosMCliSSPanel.add(confirmarPasswordCliMCliLabel);\r\n        centroAtDadosMCliSSPanel.add(confirmarPassawordCliMCliField);\r\n\r\n        sulAtDadosMCliSubPanel.setLayout(new FlowLayout());\r\n        sulAtDadosMCliSubPanel.add(voltarCliMCliButton);\r\n        sulAtDadosMCliSubPanel.add(actualizarCliMCliButton);\r\n\r\n        actualizarCliMCliButton.addActionListener(a -> {\r\n            if(!passwordValido){\r\n                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(),\"Password Inválido: deve conter o mínimo de 6 caracteres!\");\r\n                passwordCliMCliField.requestFocus();\r\n                return;\r\n            }\r\n            if(!confirmarPasswordValido) {\r\n                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(), \"Password Inválido: deve ser igual password!\");\r\n                confirmarPassawordCliMCliField.requestFocus();\r\n                return;\r\n            }\r\n            //TODO faz-se necessário atualizar  método atualizarDados Cliente, retirando o password e criar um novo metodo para atualização de password\r\n            sistema.atualizarDadosCliente(nomeCliMCliText.getText(),\r\n                    moradaCliMCliText.getText(),\r\n                    telemovelCliMCliText.getText(),\r\n                    emailCliMCliText.getText(),\r\n                    passwordCliMCliField.getPassword().toString(),\r\n                    confirmarPassawordCliMCliField.getPassword().toString(),\r\n                    confirmarPassawordCliMCliField.getPassword().toString());\r\n        });\r\n        voltarCliMCliButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n    }\r\n// todo verificar os botões editar e apagar que estão em conflito com visualizar\r\n    //////MENU CLIENTE – RESERVAS - ACTIVAS//////////\r\n\r\n    private void construirPanelMCliResAct(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliResActSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMCliResActSubPanel = new JPanel();\r\n        norteMCliResActSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMCliResActSubPanel = new JPanel();\r\n        JPanel sulMCliResActSubPanel = new JPanel();\r\n\r\n        JLabel mCliTitHistResActLabel = new JLabel(\"MENU CLIENTE - RESERVAS ACTIVAS\");\r\n        JLabel mCliIdHistResActLabel = new JLabel(\"ID\");\r\n\r\n        String[] mCliIdHistResAct = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"};\r\n        JComboBox arrayMCliIdHistResActCBox = new JComboBox(mCliIdHistResAct);\r\n\r\n//todo faltou visualizar – aumentar tamanho da coluna e tornar possível seleção para visualizar, editar e cancelar\r\n        String[] nomeColunasMCliResAct = new String[]{\r\n                \"ID\", \"DATA\", \"RESTAURNATE\"\r\n        };\r\n\r\n        Object[][] dados = new Object[][]{\r\n                {\"ID\", \"DATA\", \"RESTAURANTE\"},\r\n                {1, \"dd/MM/yyy\", \"A\"},\r\n                {2, \"dd/MM/yyy\", \"B\"},\r\n                {3, \"dd/MM/yyy\", \"C\"},\r\n        };\r\n        //criação da tabela\r\n        JTable tabelaMCliResAct = new JTable(dados, nomeColunasMCliResAct);\r\n\r\n        JButton ptEnMCliRestButton = new JButton(\"PT/EN\");\r\n        JButton voltarMCliResActButton = new JButton(\"MENU CLIENTE\");\r\n        JButton visualizarMCliResActButton = new JButton(\"VISUALIZAR\");\r\n        JButton retonarMCliResActButton = new JButton(\"RETORNAR\");\r\n\r\n        JRadioButton editarMCliResActButton = new JRadioButton(\"EDITAR\");\r\n        JRadioButton apagarMCliResActButton = new JRadioButton(\"APAGAR\");\r\n\r\n        ButtonGroup group = new ButtonGroup();\r\n        group.add(editarMCliResActButton);\r\n        group.add(apagarMCliResActButton);\r\n\r\n        mCliResActSuperPanel.add(norteMCliResActSubPanel, \"North\");\r\n        mCliResActSuperPanel.add(centroMCliResActSubPanel, \"Center\");\r\n        mCliResActSuperPanel.add(sulMCliResActSubPanel, \"South\");\r\n\r\n        JPanel norteMCliResActSSPanel = new JPanel();\r\n        norteMCliResActSSPanel.setLayout(new FlowLayout());\r\n        norteMCliResActSSPanel.add(mCliTitHistResActLabel);\r\n        norteMCliResActSubPanel.add(norteMCliResActSSPanel, BorderLayout.CENTER);\r\n        norteMCliResActSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMCliResActSSPanel = new JPanel();\r\n        centroMCliResActSSPanel.setLayout(new FlowLayout());\r\n        centroMCliResActSubPanel.add(centroMCliResActSSPanel, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliResActSSPanel1 = new JPanel();\r\n        centroMCliResActSSPanel1.setLayout(new FlowLayout());\r\n        centroMCliResActSubPanel.add(centroMCliResActSSPanel1, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliResActSSPanel2 = new JPanel();\r\n        centroMCliResActSSPanel2.setLayout(new FlowLayout());\r\n        centroMCliResActSubPanel.add(centroMCliResActSSPanel2, BorderLayout.WEST);\r\n\r\n        centroMCliResActSSPanel.add(tabelaMCliResAct);\r\n        centroMCliResActSSPanel1.add(mCliIdHistResActLabel);\r\n        centroMCliResActSSPanel1.add(arrayMCliIdHistResActCBox);\r\n        centroMCliResActSSPanel2.add(editarMCliResActButton);\r\n        centroMCliResActSSPanel2.add(apagarMCliResActButton);\r\n\r\n        sulMCliResActSubPanel.setLayout(new FlowLayout());\r\n        sulMCliResActSubPanel.add(voltarMCliResActButton);\r\n        sulMCliResActSubPanel.add(retonarMCliResActButton);\r\n        sulMCliResActSubPanel.add(visualizarMCliResActButton);\r\n\r\n\r\n        visualizarMCliResActButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n\r\n        });\r\n\r\n        editarMCliResActButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        apagarMCliResActButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        retonarMCliResActButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIRESERVAS_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        voltarMCliResActButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n    }\r\n\r\n    //////MENU CLIENTE – FAZER RESERVAS//////////\r\n    private void construirPanelMCliFazerRes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliFazerResSuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMCliFResSubPanel = new JPanel();\r\n        norteMCliFResSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMCliFResSubPanel = new JPanel();\r\n        JPanel sulMCliFResSubPanel = new JPanel();\r\n\r\n        JLabel mCliTitFResLabel = new JLabel(\"MENU CLIENTE - FAZER RESERVAS\");\r\n        JLabel tipoResMCliFResLabel = new JLabel(\"TIPO DE RESERVA:\");\r\n        JLabel nomeResMCliFResLabel = new JLabel(\"RESTAURANTE:\");\r\n\r\n        JTextField nomeResMCliFResText = new JTextField(25);\r\n\r\n        JRadioButton presencialMCliFResRButton = new JRadioButton(\"PRESENCIAL\");\r\n        JRadioButton takeAwayMCliFResRButton = new JRadioButton(\"TAKE-AWAY\");\r\n\r\n        ButtonGroup group = new ButtonGroup();\r\n        group.add(presencialMCliFResRButton);\r\n        group.add(takeAwayMCliFResRButton);\r\n\r\n        JButton ptEnMCliFResButton = new JButton(\"PT/EN\");\r\n        JButton voltarMCliFResButton = new JButton(\"MENU CLIENTE\");\r\n        JButton retornarMCliFResButton = new JButton(\"VOLTAR\");\r\n\r\n        mCliFazerResSuperPanel.add(norteMCliFResSubPanel, \"North\");\r\n        mCliFazerResSuperPanel.add(centroMCliFResSubPanel, \"Center\");\r\n        mCliFazerResSuperPanel.add(sulMCliFResSubPanel, \"South\");\r\n\r\n        JPanel norteMCliFResSSPanel = new JPanel();\r\n        norteMCliFResSSPanel.setLayout(new FlowLayout());\r\n        norteMCliFResSSPanel.add(mCliTitFResLabel);\r\n        norteMCliFResSubPanel.add(norteMCliFResSSPanel, BorderLayout.CENTER);\r\n        norteMCliFResSubPanel.add(ptEnMCliFResButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMCliFResSSPanel = new JPanel();\r\n        centroMCliFResSSPanel.setLayout(new FlowLayout());\r\n        centroMCliFResSubPanel.add(centroMCliFResSSPanel, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResSSPanel1 = new JPanel();\r\n        centroMCliFResSSPanel1.setLayout(new FlowLayout());\r\n        centroMCliFResSubPanel.add(centroMCliFResSSPanel1, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResSSPanel2 = new JPanel();\r\n        centroMCliFResSSPanel2.setLayout(new FlowLayout());\r\n        centroMCliFResSubPanel.add(centroMCliFResSSPanel2, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResSSPanel3 = new JPanel();\r\n        centroMCliFResSSPanel3.setLayout(new GridLayout(1, 1));\r\n        centroMCliFResSubPanel.add(centroMCliFResSSPanel3, BorderLayout.WEST);\r\n\r\n        //todo ver como listar o restaurantes\r\n        centroMCliFResSSPanel1.add(nomeResMCliFResLabel);\r\n        centroMCliFResSSPanel1.add(nomeResMCliFResText);\r\n        centroMCliFResSSPanel2.add(tipoResMCliFResLabel);\r\n        centroMCliFResSSPanel3.add(presencialMCliFResRButton);\r\n        centroMCliFResSSPanel3.add(takeAwayMCliFResRButton);\r\n\r\n        sulMCliFResSubPanel.setLayout(new FlowLayout());\r\n        sulMCliFResSubPanel.add(voltarMCliFResButton);\r\n        sulMCliFResSubPanel.add(retornarMCliFResButton);\r\n\r\n        presencialMCliFResRButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIFAZERRESP_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        takeAwayMCliFResRButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIFAZERRESTA_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        retornarMCliFResButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIRESERVAS_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        voltarMCliFResButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //////MENU CLIENTE – FAZER RESERVA PRESENCIAL//////////\r\n    private void construirPanelMCliFazerResP(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliFazerResPSuperPanel) {\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMCliFResPSubPanel = new JPanel();\r\n        norteMCliFResPSubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMCliFResPSubPanel = new JPanel();\r\n        JPanel sulMCliFResPSubPanel = new JPanel();\r\n\r\n        JLabel mCliTitFResPLabel = new JLabel(\"FAZER RESERVAS PRESENCIAL\");\r\n        JLabel diaMCliFResPLabel = new JLabel(\"DIA\");\r\n        JLabel horaMCliFResPLabel = new JLabel(\"HORA\");\r\n        //JLabel horaDeMCliFResPLabel = new JLabel(\"De\");\r\n        //JLabel horaAteMCliFResPLabel = new JLabel(\"Até\");\r\n        JLabel qtdePessoasMCliFResPLabel = new JLabel(\"QUANTIDADE DE PESSOAS\");\r\n        JLabel msgMCliFResPLabel = new JLabel(\"Contatar diretamente o restaurante no caso de reservas para mais de 20 pessoas\");\r\n\r\n        String[] horaDeMCliFRes = {\"\", \"11h\", \"11h30\", \"12h\", \"12h30\", \"13h\", \"13h30\", \"14h\", \"14h30\", \"15h\", \"15h30\", \"19h\", \"19h30\", \"20h\", \"20h30\", \"21h\", \"21h30\", \"22h\", \"22h30\"};\r\n        JComboBox arrayHoraDeMCliFResPCBox = new JComboBox(horaDeMCliFRes);\r\n\r\n        //todo verificar se não deve mesmo constar\r\n        //String [] horaAteMCliFRes = {\"\",\"12h\",\"12h30\",\"13h\",\"13h30\",\"14h\",\"14h30\",\"15h\",\"15h30\",\"19h\",\"19h30\",\"20h\",\"20h30\",\"21h\",\"21h30\",\"22h\",\"22h30\"};\r\n        //JComboBox arrayHoraAteMCliFResPCBox = new JComboBox(horaAteMCliFRes);\r\n\r\n        String[] qtdePessoasMCliFRes = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\"};\r\n        JComboBox arrayQtdePessoasMCliFResPCBox = new JComboBox(qtdePessoasMCliFRes);\r\n\r\n        JButton ptEnMCliFResPButton = new JButton(\"PT/EN\");\r\n        JButton voltarMCliFResPButton = new JButton(\"MENU CLIENTE\");\r\n        JButton confirmarMCliFResPButton = new JButton(\"OK\");\r\n        JButton retornarMCliFResPButton = new JButton(\"VOLTAR\");\r\n\r\n        //Adição do calendário\r\n        UtilDateModel model1 = new UtilDateModel();\r\n        UtilDateModel model6 = new UtilDateModel();\r\n\r\n        ResourceBundle b = ResourceBundle.getBundle(\"Text\");\r\n\r\n        Properties p = convertResourceBundleToProperties(b);\r\n        JDatePanelImpl datePanel5 = new JDatePanelImpl(model6, p);\r\n        JDatePickerImpl datePicker6 = new JDatePickerImpl(datePanel5, new DateLabelFormatter());\r\n\r\n        mCliFazerResPSuperPanel.add(norteMCliFResPSubPanel, \"North\");\r\n        mCliFazerResPSuperPanel.add(centroMCliFResPSubPanel, \"Center\");\r\n        mCliFazerResPSuperPanel.add(sulMCliFResPSubPanel, \"South\");\r\n\r\n        JPanel norteMCliFResSPPSSPanel = new JPanel();\r\n        norteMCliFResSPPSSPanel.setLayout(new FlowLayout());\r\n        norteMCliFResSPPSSPanel.add(mCliTitFResPLabel);\r\n        norteMCliFResPSubPanel.add(norteMCliFResSPPSSPanel, BorderLayout.CENTER);\r\n        norteMCliFResPSubPanel.add(ptEnMCliFResPButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMCliFResPSSPanel = new JPanel();\r\n        centroMCliFResPSSPanel.setLayout(new FlowLayout());\r\n        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResPSSPanel1 = new JPanel();\r\n        centroMCliFResPSSPanel1.setLayout(new FlowLayout());\r\n        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel1, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResPSSPanel2 = new JPanel();\r\n        centroMCliFResPSSPanel2.setLayout(new FlowLayout());\r\n        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel2, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResPSSPanel3 = new JPanel();\r\n        centroMCliFResPSSPanel3.setLayout(new GridLayout(1, 1));\r\n        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel3, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResPSSPanel4 = new JPanel();\r\n        centroMCliFResPSSPanel4.setLayout(new FlowLayout());\r\n        centroMCliFResPSubPanel.add(centroMCliFResPSSPanel4, BorderLayout.WEST);\r\n\r\n        centroMCliFResPSSPanel.add(diaMCliFResPLabel);\r\n        centroMCliFResPSSPanel.add(datePicker6);\r\n        centroMCliFResPSSPanel1.add(horaMCliFResPLabel);\r\n        //centroMCliFResPSSPanel2.add(horaDeMCliFResPLabel);\r\n        centroMCliFResPSSPanel2.add(arrayHoraDeMCliFResPCBox);\r\n        //centroMCliFResPSSPanel2.add(horaAteMCliFResPLabel);\r\n        //centroMCliFResPSSPanel2.add(arrayHoraAteMCliFResPCBox);\r\n\r\n        centroMCliFResPSSPanel3.add(qtdePessoasMCliFResPLabel);\r\n        centroMCliFResPSSPanel3.add(arrayQtdePessoasMCliFResPCBox);\r\n        centroMCliFResPSSPanel4.add(msgMCliFResPLabel);\r\n\r\n        sulMCliFResPSubPanel.setLayout(new FlowLayout());\r\n        sulMCliFResPSubPanel.add(voltarMCliFResPButton);\r\n        sulMCliFResPSubPanel.add(retornarMCliFResPButton);\r\n        sulMCliFResPSubPanel.add(confirmarMCliFResPButton);\r\n\r\n        voltarMCliFResPButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        retornarMCliFResPButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIFAZERRES_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        //todo ver os encaminhamentos\r\n        confirmarMCliFResPButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, LOGIN_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n\r\n    }\r\n\r\n    //////MENU CLIENTE – FAZER RESERVA TAKE-AWAY//////////\r\n    private void construirPanelMCliFazerResTA(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliFazerResTASuperPanel) {\r\n\r\n\r\n        /////SUBPAINEIS//////\r\n        JPanel norteMCliFResTASubPanel = new JPanel();\r\n        norteMCliFResTASubPanel.setLayout(new BorderLayout());\r\n        JPanel centroMCliFResTASubPanel = new JPanel();\r\n        JPanel sulMCliFResTASubPanel = new JPanel();\r\n\r\n        JLabel mCliTitFResTALabel = new JLabel(\"FAZER RESERVAS TAKE-AWAY\");\r\n        JLabel horaMCliFResTALabel = new JLabel(\"HORA\");\r\n        JLabel idMCliFResTALabel = new JLabel(\"ID\");\r\n        JLabel qtdePratosMCliFResTALabel = new JLabel(\"QUANTIDADE\");\r\n        JLabel pratosMCliFResTALabel = new JLabel(\"PRATOS\");\r\n\r\n        String[] horasMCliFResTA = {\"\", \"11h30\", \"12h\", \"12h30\", \"13h\", \"13h30\", \"14h\", \"14h30\", \"15h\", \"15h30\", \"19h\", \"19h30\", \"20h\", \"20h30\", \"21h\", \"21h30\", \"22h\", \"22h30\"};\r\n        JComboBox arrayHorasMCliFResTACBox = new JComboBox(horasMCliFResTA);\r\n\r\n        String[] idMCliFResTA = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"};\r\n        JComboBox arrayIdMCliFResTACBox = new JComboBox(idMCliFResTA);\r\n\r\n        String[] qtdePratosMCliFResTA = {\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\"};\r\n        JComboBox arrayQtdePratosMCliFResTACBox = new JComboBox(qtdePratosMCliFResTA);\r\n\r\n//todo possibilitar que o prato possa ser selecionado\r\n        String[] nomeColunasMCliFResTA = new String[]{\r\n                \"ID\", \"NOME\", \"DESCRIÇÃO\", \"PREÇO\", \"TIPO\"\r\n        };\r\n\r\n        Object[][] dados = new Object[][]{\r\n                {\"ID\", \"NOME\", \"DESCRIÇÃO\", \"PREÇO\", \"TIPO\"},\r\n                {1, \"Sardinha\", \"Assada\", \"15.0\", \"Carta\"},\r\n                {2, \"Peru\", \"Ensopado\", \"15.0\", \"Prato do Dia\"},\r\n                {3, \"Bifana\", \"Frita\", \"15.0\", \"Carta\"},\r\n                {4, \"Sardinha\", \"Assada\", \"15.0\", \"Carta\"},\r\n                {5, \"Peru\", \"Ensopado\", \"15.0\", \"Prato do Dia\"},\r\n                {6, \"Bifana\", \"Frita\", \"15.0\", \"Carta\"},\r\n\r\n        };\r\n        //criação da tabela\r\n        JTable tabelaMCliFResTA = new JTable(dados, nomeColunasMCliFResTA);\r\n\r\n        JButton ptEnMCliFResTAButton = new JButton(\"PT/EN\");\r\n        JButton voltarMCliFResTAButton = new JButton(\"MENU CLIENTE\");\r\n        JButton adicionarMCliFResTAButton = new JButton(\"ADICIONAR\");\r\n        JButton retornarMCliFResButton = new JButton(\"VOLTAR\");\r\n        JButton finalizarMCliFResTAButton = new JButton(\"FINALIZAR\");\r\n\r\n        mCliFazerResTASuperPanel.add(norteMCliFResTASubPanel, \"North\");\r\n        mCliFazerResTASuperPanel.add(centroMCliFResTASubPanel, \"Center\");\r\n        mCliFazerResTASuperPanel.add(sulMCliFResTASubPanel, \"South\");\r\n\r\n        JPanel norteMCliFResTASSPanel = new JPanel();\r\n        norteMCliFResTASSPanel.setLayout(new FlowLayout());\r\n        norteMCliFResTASSPanel.add(mCliTitFResTALabel);\r\n        norteMCliFResTASubPanel.add(norteMCliFResTASSPanel, BorderLayout.CENTER);\r\n        norteMCliFResTASubPanel.add(ptEnMCliFResTAButton, BorderLayout.EAST);\r\n\r\n        JPanel centroMCliFResTASSPanel = new JPanel();\r\n        centroMCliFResTASSPanel.setLayout(new FlowLayout());\r\n        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResTASSPanel1 = new JPanel();\r\n        centroMCliFResTASSPanel1.setLayout(new FlowLayout());\r\n        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel1, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResTASSPanel2 = new JPanel();\r\n        centroMCliFResTASSPanel2.setLayout(new FlowLayout());\r\n        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel2, BorderLayout.WEST);\r\n\r\n        JPanel centroMCliFResTASSPanel3 = new JPanel();\r\n        centroMCliFResTASSPanel3.setLayout(new FlowLayout());\r\n        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel3, BorderLayout.CENTER);\r\n\r\n        JPanel centroMCliFResTASSPanel4 = new JPanel();\r\n        centroMCliFResTASSPanel4.setLayout(new FlowLayout());\r\n        centroMCliFResTASubPanel.add(centroMCliFResTASSPanel4, BorderLayout.WEST);\r\n\r\n        centroMCliFResTASSPanel.add(horaMCliFResTALabel);\r\n        centroMCliFResTASSPanel1.add(arrayHorasMCliFResTACBox);\r\n        centroMCliFResTASSPanel3.add(pratosMCliFResTALabel);\r\n        centroMCliFResTASSPanel3.add(tabelaMCliFResTA);\r\n        centroMCliFResTASSPanel4.add(idMCliFResTALabel);\r\n        centroMCliFResTASSPanel4.add(arrayIdMCliFResTACBox);\r\n        centroMCliFResTASSPanel4.add(qtdePratosMCliFResTALabel);\r\n        centroMCliFResTASSPanel4.add(arrayQtdePratosMCliFResTACBox);\r\n\r\n        sulMCliFResTASubPanel.setLayout(new FlowLayout());\r\n        sulMCliFResTASubPanel.add(voltarMCliFResTAButton);\r\n        sulMCliFResTASubPanel.add(retornarMCliFResButton);\r\n        sulMCliFResTASubPanel.add(adicionarMCliFResTAButton);\r\n        sulMCliFResTASubPanel.add(finalizarMCliFResTAButton);\r\n\r\n\r\n        voltarMCliFResTAButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MENUCLIENTE_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        retornarMCliFResButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIFAZERRES_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n        //todo fazer nova página com valor final (botoes de finalizar, editar e remover com quantidade)\r\n        finalizarMCliFResTAButton.addActionListener(a -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIFAZERRES_CARD);\r\n            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);\r\n        });\r\n\r\n        //todo ver os encaminhamentos\r\n        adicionarMCliFResTAButton.addActionListener(e -> {\r\n            CardLayout cl = (CardLayout) contentor.getLayout();\r\n            cl.show(contentor, MCLIFAZERRES_CARD);\r\n            this.setSize(500, 180);\r\n        });\r\n\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/gui/Interface.java	(revision 969c4f798b4cc1d9e4ee6c6a4b871ae9e1f3fbe9)
+++ src/com/company/gui/Interface.java	(date 1609466044662)
@@ -31,6 +31,14 @@
     private static final String MCLIFAZERRESP_CARD = "MENU CLIENTE - FAZER RESERVAS PRESENCIAL";
     private static final String MCLIFAZERRESTA_CARD = "MENU CLIENTE - FAZER RESERVAS TAKE-AWAY";
     private static final String MCLIRESERVAS_CARD = "MENU CLIENTE - RESERVAS";
+    private static final String MCLIMRESTFORDRESTS_CARD = "MENU CLIENTE - MENU RESTAURANTES";
+    private static final String MCLIMRESTFRESTPONT_CARD = "MENU CLIENTE - MENU RESTAURANTES - PONTUAÇÃO";
+    private static final String MCLIMRESTFORDRESTVALOR_CARD = "MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS";
+    private static final String MCLIMRESTFORDRESTVALORCARTA_CARD = "MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS - CARTA";
+    private static final String MCLIMRESTFORDRESTVALORPDIA_CARD = "MENU CLIENTE - MENU RESTAURANTES - VALOR MÉDIO DOS PRATOS - PRATO DO DIA";
+    private static final String MCLIMRESTFRESTHFUNC_CARD = "MENU CLIENTE - MENU RESTAURANTES - HORÁRIO FUNCIONAMENTO";
+    private static final String MCLIMRESTFRESTLOT_CARD = "MENU CLIENTE - MENU RESTAURANTES - LOTAÇÃO";
+    private static final String MCLIMRESTFRESTCID_CARD = "MENU CLIENTE - MENU RESTAURANTES - CIDADE";
 
 
     private static final String MENURESTAURANTE_CARD = "MENU RESTAURANTE";
@@ -96,6 +104,22 @@
         mCliFazerResTASuperPanel.setLayout(new BorderLayout());
         JPanel mCliReservasMReseSuperPanel = new JPanel();
         mCliReservasMReseSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFOrdRestsSuperPanel = new JPanel();
+        mCliMRestFOrdRestsSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFRestPontSuperPanel = new JPanel();
+        mCliMRestFRestPontSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFOrdRestValorSuperPanel = new JPanel();
+        mCliMRestFOrdRestValorSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFOrdRestValorCartaSuperPanel = new JPanel();
+        mCliMRestFOrdRestValorCartaSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFOrdRestValorPDiaSuperPanel = new JPanel();
+        mCliMRestFOrdRestValorPDiaSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFRestHFuncSuperPanel = new JPanel();
+        mCliMRestFRestHFuncSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFRestLotSuperPanel = new JPanel();
+        mCliMRestFRestLotSuperPanel.setLayout(new BorderLayout());
+        JPanel mCliMRestFRestCidSuperPanel = new JPanel();
+        mCliMRestFRestCidSuperPanel.setLayout(new BorderLayout());
 
 
         JPanel mRestSuperPanel = new JPanel();
@@ -133,7 +157,7 @@
 
         construirPanelMRestComentarios(this, contentor, loginSuperPanel, mRestComentariosSuperPanel);
 
-        construirPanelMCliRestaurantes(this, contentor, loginSuperPanel, mCliRestSuperPanel);
+        //construirPanelMCliRestaurantes(this, contentor, loginSuperPanel, mCliRestSuperPanel);
 
         construirPanelMCliComentarios(this, contentor, loginSuperPanel, mCliComentariosSuperPanel);
 
@@ -153,6 +177,22 @@
 
         construirPanelMCliMResComPonReservas(this, contentor, loginSuperPanel, mCliMResComPontReseSuperPanel);
 
+        construirPanelMCliMRestFOrdRests(this, contentor, loginSuperPanel, mCliMRestFOrdRestsSuperPanel);
+
+        construirPanelMCliMRestFRestPont(this, contentor, loginSuperPanel, mCliMRestFRestPontSuperPanel);
+
+        construirPanelMCliMRestFOrdRestValor(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorSuperPanel);
+
+        construirPanelMCliMRestFOrdRestValorCarta(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorCartaSuperPanel);
+
+        construirPanelMCliMRestFOrdRestValorPDia(this, contentor, loginSuperPanel, mCliMRestFOrdRestValorPDiaSuperPanel);
+
+        construirPanelMCliMRestFRestHFunc(this, contentor, loginSuperPanel, mCliMRestFRestHFuncSuperPanel);
+
+        construirPanelMCliMRestFRestLot(this, contentor, loginSuperPanel, mCliMRestFRestLotSuperPanel);
+
+        construirPanelMCliMRestFRestCid(this, contentor, loginSuperPanel, mCliMRestFRestCidSuperPanel);
+
 
         contentor.add(loginSuperPanel, LOGIN_CARD);
         contentor.add(regNovoCliSuperPanel, CLIENTE_CARD);
@@ -174,7 +214,14 @@
         contentor.add(mCliFazerResTASuperPanel, MCLIFAZERRESTA_CARD);
         contentor.add(mCliReservasMReseSuperPanel, MCLIRESERVAS_CARD);
         contentor.add(mCliMResComPontReseSuperPanel, MCLIMRESCOMPONTRESE_CARD);
-
+        contentor.add(mCliMRestFOrdRestsSuperPanel, MCLIMRESTFORDRESTS_CARD);
+        contentor.add(mCliMRestFRestPontSuperPanel, MCLIMRESTFRESTPONT_CARD);
+        contentor.add(mCliMRestFOrdRestValorSuperPanel, MCLIMRESTFORDRESTVALOR_CARD);
+        contentor.add(mCliMRestFOrdRestValorCartaSuperPanel, MCLIMRESTFORDRESTVALORCARTA_CARD);
+        contentor.add(mCliMRestFOrdRestValorPDiaSuperPanel, MCLIMRESTFORDRESTVALORPDIA_CARD);
+        contentor.add(mCliMRestFRestHFuncSuperPanel, MCLIMRESTFRESTHFUNC_CARD);
+        contentor.add(mCliMRestFRestLotSuperPanel, MCLIMRESTFRESTLOT_CARD);
+        contentor.add(mCliMRestFRestCidSuperPanel, MCLIMRESTFRESTCID_CARD);
 
     }
 
@@ -373,7 +420,7 @@
 
         JButton ptEnMenuClienteButton = new JButton("PT/EN");
         ////
-        JButton consultarRestMCliButton = new JButton("RESTAURANTES");
+        JButton restaurantesMCliButton = new JButton("RESTAURANTES");
         JButton comentariosMCliButton = new JButton("COMENTÁRIOS");
         JButton reservasMCliButton = new JButton("RESERVAS");
 
@@ -396,7 +443,7 @@
         JPanel centroNovoClienteSSPanelForm = new JPanel();
         centroNovoClienteSSPanelForm.setLayout(new GridLayout(7, 2));
         centroMenuClienteSubPanel.add(centroNovoClienteSSPanelForm);
-        centroNovoClienteSSPanelForm.add(consultarRestMCliButton);
+        centroNovoClienteSSPanelForm.add(restaurantesMCliButton);
         centroNovoClienteSSPanelForm.add(comentariosMCliButton);
         centroNovoClienteSSPanelForm.add(reservasMCliButton);
 
@@ -405,16 +452,15 @@
         sulMenuClienteSubPanel.setLayout(new FlowLayout());
         sulMenuClienteSubPanel.add(logoutMenuClienteButton);
 
-
         comentariosMCliButton.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
             cl.show(contentor, MCLICOMENTARIOS_CARD);
             this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
         });
 
-        consultarRestMCliButton.addActionListener(a -> {
+        restaurantesMCliButton.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
-            cl.show(contentor, MCLIREST_CARD);
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
             this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
         });
 
@@ -601,6 +647,7 @@
             this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
         });
     }
+
     //todo espaço para escrever comentário pode ter barra de rolagem? ativar o botão OK
     /////////// MENU CLIENTE - MENU RESERVA - HISTÓRICO DE RESERVAS - COMENTAR UMA RESERVA///////
     private void construirPanelMCliMResComPonReservas(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMResComPontReseSuperPanel) {
@@ -1529,195 +1576,752 @@
 
     }
 
-    //todo mudar linha pontuação e aparecer nome das colunas na tabela, permitir de possa comentar/pontuar uma reserva(Comentar um restaurante e atribuir pontuação)
-    //////MENU RESTAURANTE – LISTAR RESTAURANTES//////////
-    private void construirPanelMCliRestaurantes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliRestSuperPanel) {
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS//////////
+    private void construirPanelMCliMRestFOrdRests(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestsSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFOrdRestsSubPanel = new JPanel();
+        norteMCliMRestFOrdRestsSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFOrdRestsSubPanel = new JPanel();
+        JPanel sulMCliMRestFOrdRestsSubPanel = new JPanel();
+
+        JLabel mCliMRestFOrdRestsLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+
+        JLabel fMCliMRestFOrdRestsLabel = new JLabel("FILTRAR:");
+        JButton fhoraFMCliMRestFOrdRestsButton = new JButton("HORA DE FUNCIONAMENTO:");
+        JButton fLotMCliMRestFOrdRestsButton = new JButton("LOTAÇÃO:");
+        JButton fCidCliMRestFOrdRestsButton = new JButton("CIDADE:");
+
+        JLabel fOrdMCliMRestsFOrdRestLabel = new JLabel("FILTRAR/ORDENAR:");
+        JButton fOrdPontCliMRestFOrdRestsButton = new JButton("PONTUAÇÃO:");
+        JButton fOrdValoresMCliMRestFOrdRestsButton = new JButton("VALORES MÉDIOS DOS PRATOS:");
+
+        JButton ptEnMCliMRestFOrdRestsButton = new JButton("PT/EN");
+        JButton voltarMCliMRestsFOrdRestButton = new JButton("MENU CLIENTE");
+
+        mCliMRestFOrdRestsSuperPanel.add(norteMCliMRestFOrdRestsSubPanel, "North");
+        mCliMRestFOrdRestsSuperPanel.add(centroMCliMRestFOrdRestsSubPanel, "Center");
+        mCliMRestFOrdRestsSuperPanel.add(sulMCliMRestFOrdRestsSubPanel, "South");
+
+        JPanel norteMCliMRestFOrdRestsSSPanel = new JPanel();
+        norteMCliMRestFOrdRestsSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFOrdRestsSSPanel.add(mCliMRestFOrdRestsLabel);
+        norteMCliMRestFOrdRestsSubPanel.add(norteMCliMRestFOrdRestsSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFOrdRestsSubPanel.add(ptEnMCliMRestFOrdRestsButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFOrdRestsSSPanel = new JPanel();
+        centroMCliMRestFOrdRestsSSPanel.setLayout(new GridLayout(8, 1));
+        centroMCliMRestFOrdRestsSubPanel.add(centroMCliMRestFOrdRestsSSPanel);
+
+        centroMCliMRestFOrdRestsSSPanel.add(fMCliMRestFOrdRestsLabel);
+        centroMCliMRestFOrdRestsSSPanel.add(fhoraFMCliMRestFOrdRestsButton);
+        centroMCliMRestFOrdRestsSSPanel.add(fLotMCliMRestFOrdRestsButton);
+        centroMCliMRestFOrdRestsSSPanel.add(fCidCliMRestFOrdRestsButton);
+        centroMCliMRestFOrdRestsSSPanel.add(fOrdMCliMRestsFOrdRestLabel);
+        centroMCliMRestFOrdRestsSSPanel.add(fOrdPontCliMRestFOrdRestsButton);
+        centroMCliMRestFOrdRestsSSPanel.add(fOrdValoresMCliMRestFOrdRestsButton);
+
+        sulMCliMRestFOrdRestsSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFOrdRestsSubPanel.add(voltarMCliMRestsFOrdRestButton);
+
+        fhoraFMCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFRESTHFUNC_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        fLotMCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFRESTLOT_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        fCidCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFRESTCID_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        fOrdPontCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFRESTPONT_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        fOrdValoresMCliMRestFOrdRestsButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTVALOR_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestsFOrdRestButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – FILTRAR POR PONTUAÇÃO//////////
+    private void construirPanelMCliMRestFRestPont(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestPontSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFRestPontSubPanel = new JPanel();
+        norteMCliMRestFRestPontSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFRestPontSubPanel = new JPanel();
+        JPanel sulMCliMRestFRestPontSubPanel = new JPanel();
+
+        JLabel mCliMRestsFRestPontLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFRestPontLabel = new JLabel("PONTUAÇÃO");
+
+        JCheckBox umMCliMRestFRestPont = new JCheckBox("1");
+        umMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+        JCheckBox doisMCliMRestFRestPont = new JCheckBox("2");
+        doisMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+        JCheckBox tresMCliMRestFRestPont = new JCheckBox("3");
+        tresMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quatroMCliMRestFRestPont = new JCheckBox("4");
+        quatroMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+        JCheckBox cincoMCliMRestFRestPont = new JCheckBox("5");
+        cincoMCliMRestFRestPont.setMnemonic(KeyEvent.VK_C);
+
+        JButton ptEnMCliMRestFRestPontButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFRestPontButton = new JButton("MENU CLIENTE");
+        JButton retonarMCliMRestFRestPontButton = new JButton("VOLTAR");
+
+        mCliMRestFRestPontSuperPanel.add(norteMCliMRestFRestPontSubPanel, "North");
+        mCliMRestFRestPontSuperPanel.add(centroMCliMRestFRestPontSubPanel, "Center");
+        mCliMRestFRestPontSuperPanel.add(sulMCliMRestFRestPontSubPanel, "South");
+
+        JPanel norteMCliMRestFRestPontSSPanel = new JPanel();
+        norteMCliMRestFRestPontSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFRestPontSSPanel.add(mCliMRestsFRestPontLabel);
+        norteMCliMRestFRestPontSubPanel.add(norteMCliMRestFRestPontSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFRestPontSubPanel.add(ptEnMCliMRestFRestPontButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFRestPontSSPanel = new JPanel();
+        centroMCliMRestFRestPontSSPanel.setLayout(new GridLayout(6, 1));
+        centroMCliMRestFRestPontSubPanel.add(centroMCliMRestFRestPontSSPanel);
+
+        centroMCliMRestFRestPontSSPanel.add(mCliMRestFRestPontLabel);
+        centroMCliMRestFRestPontSSPanel.add(umMCliMRestFRestPont);
+        centroMCliMRestFRestPontSSPanel.add(doisMCliMRestFRestPont);
+        centroMCliMRestFRestPontSSPanel.add(tresMCliMRestFRestPont);
+        centroMCliMRestFRestPontSSPanel.add(quatroMCliMRestFRestPont);
+        centroMCliMRestFRestPontSSPanel.add(cincoMCliMRestFRestPont);
+
+        sulMCliMRestFRestPontSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFRestPontSubPanel.add(voltarMCliMRestFRestPontButton);
+        sulMCliMRestFRestPontSubPanel.add(retonarMCliMRestFRestPontButton);
+
+        umMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        doisMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        tresMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        quatroMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        cincoMCliMRestFRestPont.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retonarMCliMRestFRestPontButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestFRestPontButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS – VALORES MÉDIOS DOS PRATOS//////////
+    private void construirPanelMCliMRestFOrdRestValor(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorSuperPanel) {
 
 
         /////SUBPAINEIS//////
-        JPanel norteMCliRestSubPanel = new JPanel();
-        norteMCliRestSubPanel.setLayout(new BorderLayout());
-        JPanel centroMCliRestSubPanel = new JPanel();
-        JPanel sulMCliRestSubPanel = new JPanel();
-
-
-        JCheckBox um = new JCheckBox("1");
-        um.setMnemonic(KeyEvent.VK_C);
-        JCheckBox dois = new JCheckBox("2");
-        dois.setMnemonic(KeyEvent.VK_C);
-        JCheckBox tres = new JCheckBox("3");
-        tres.setMnemonic(KeyEvent.VK_C);
-        JCheckBox quatro = new JCheckBox("4");
-        quatro.setMnemonic(KeyEvent.VK_C);
-        JCheckBox cinco = new JCheckBox("5");
-        cinco.setMnemonic(KeyEvent.VK_C);
-
-        JCheckBox dez = new JCheckBox(">10€");
-        um.setMnemonic(KeyEvent.VK_C);
-        JCheckBox dezVinte = new JCheckBox("10€-20€");
-        dois.setMnemonic(KeyEvent.VK_C);
-        JCheckBox vinteTrinta = new JCheckBox("20€-30€");
-        tres.setMnemonic(KeyEvent.VK_C);
-        JCheckBox trintaQuarenta = new JCheckBox("30€-40€");
-        quatro.setMnemonic(KeyEvent.VK_C);
-        JCheckBox quarenta = new JCheckBox("<40€");
-        cinco.setMnemonic(KeyEvent.VK_C);
+        JPanel norteMCliMRestFOrdRestValorSubPanel = new JPanel();
+        norteMCliMRestFOrdRestValorSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFOrdRestValorSubPanel = new JPanel();
+        JPanel sulMCliMRestFOrdRestValorSubPanel = new JPanel();
 
+        JLabel mCliMRestFOrdRestsValorLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFOrdRestValorLabel = new JLabel("VALORES MÉDIOS DOS PRATOS");
 
-        JLabel mCliRestLabel = new JLabel("PESQUISAR RESTAURANTES");
-        JLabel fDataMCliRestLabel = new JLabel("DATA");
-        JLabel fhoraFMCliRestLabel = new JLabel("HORA DE FUNCIONAMENTO:");
-        JLabel fvaloresMedCPMCliRestLabel = new JLabel("VALORES MÉDIOS DOS PRATOS:");
-        JLabel fPontMCliRestLabel = new JLabel("PONTUAÇÃO:");
-        JLabel fLotMCliRestLabel = new JLabel("LOTAÇÃO:");
-        JLabel fCidMCliRestLabel = new JLabel("CIDADE:");
-
-        JRadioButton fvaloresMCMCliRestRButton = new JRadioButton("CARTA");
-        JRadioButton fvaloresMPMCliRestRButton = new JRadioButton("PRATOS DO DIA");
+        JRadioButton fOrdValoresCartaMCliMRestFOrdRestValorRButton = new JRadioButton("CARTA");
+        JRadioButton fOrdValoresPDiaMCliMRestFOrdRestValorRButton = new JRadioButton("PRATOS DO DIA");
 
         ButtonGroup group = new ButtonGroup();
-        group.add(fvaloresMCMCliRestRButton);
-        group.add(fvaloresMPMCliRestRButton);
+        group.add(fOrdValoresCartaMCliMRestFOrdRestValorRButton);
+        group.add(fOrdValoresPDiaMCliMRestFOrdRestValorRButton);
+
+        JButton ptEnMCliMRestFOrdRestValorButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFOrdRestValorutton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFOrdRestValorButton = new JButton("VOLTAR");
+
+        mCliMRestFOrdRestValorSuperPanel.add(norteMCliMRestFOrdRestValorSubPanel, "North");
+        mCliMRestFOrdRestValorSuperPanel.add(centroMCliMRestFOrdRestValorSubPanel, "Center");
+        mCliMRestFOrdRestValorSuperPanel.add(sulMCliMRestFOrdRestValorSubPanel, "South");
+
+        JPanel norteMCliMRestFOrdRestValorSSPanel = new JPanel();
+        norteMCliMRestFOrdRestValorSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFOrdRestValorSSPanel.add(mCliMRestFOrdRestsValorLabel);
+        norteMCliMRestFOrdRestValorSubPanel.add(norteMCliMRestFOrdRestValorSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFOrdRestValorSubPanel.add(ptEnMCliMRestFOrdRestValorButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFOrdRestValorSSPanel = new JPanel();
+        centroMCliMRestFOrdRestValorSSPanel.setLayout(new GridLayout(3, 1));
+        centroMCliMRestFOrdRestValorSubPanel.add(centroMCliMRestFOrdRestValorSSPanel);
+
+        JPanel centroMCliMRestFOrdRestValorSSPanel1 = new JPanel();
+        centroMCliMRestFOrdRestValorSSPanel1.setLayout(new GridBagLayout());
+        centroMCliMRestFOrdRestValorSubPanel.add(centroMCliMRestFOrdRestValorSSPanel1);
+
+        centroMCliMRestFOrdRestValorSSPanel.add(mCliMRestFOrdRestValorLabel);
+        centroMCliMRestFOrdRestValorSSPanel.add(fOrdValoresCartaMCliMRestFOrdRestValorRButton);
+        centroMCliMRestFOrdRestValorSSPanel.add(fOrdValoresPDiaMCliMRestFOrdRestValorRButton);
+
+        sulMCliMRestFOrdRestValorSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFOrdRestValorSubPanel.add(voltarMCliMRestFOrdRestValorutton);
+        sulMCliMRestFOrdRestValorSubPanel.add(retornarMCliMRestFOrdRestValorButton);
+
+
+        fOrdValoresCartaMCliMRestFOrdRestValorRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTVALORCARTA_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+
+        fOrdValoresPDiaMCliMRestFOrdRestValorRButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTVALORPDIA_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+        retornarMCliMRestFOrdRestValorButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        voltarMCliMRestFOrdRestValorutton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
+
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTRAR POR VALORES MÉDIOS DOS PRATOS - CARTA//////////
+    private void construirPanelMCliMRestFOrdRestValorCarta(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorCartaSuperPanel) {
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFOrdRestValorCartaSubPanel = new JPanel();
+        norteMCliMRestFOrdRestValorCartaSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFOrdRestValorCartaSubPanel = new JPanel();
+        JPanel sulMCliMRestFOrdRestValorCartaSubPanel = new JPanel();
+
+        JLabel mCliMRestFOrdRestsValorCartaLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFOrdRestValorCartaLabel = new JLabel("VALORES MÉDIOS DOS PRATOS - CARTA");
+        JCheckBox dezMCliMRestFOrdRestValorCartaCBox = new JCheckBox(">10€");
+        dezMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox dezVinteMCliMRestFOrdRestValorCartaCBox = new JCheckBox("10€-20€");
+        dezVinteMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox vinteTrintaMCliMRestFOrdRestValorCartaCBox = new JCheckBox("20€-30€");
+        vinteTrintaMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox trintaQuarentaMCliMRestFOrdRestValorCartaCBox = new JCheckBox("30€-40€");
+        trintaQuarentaMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quarentaMaisMCliMRestFOrdRestValorCartaCBox = new JCheckBox("<40€");
+        quarentaMaisMCliMRestFOrdRestValorCartaCBox.setMnemonic(KeyEvent.VK_C);
+
+        JButton ptEnMCliMRestFOrdRestValorCartaButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFOrdRestValorCartaButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFOrdRestValorCartaButton = new JButton("VOLTAR");
+
+
+        mCliMRestFOrdRestValorCartaSuperPanel.add(norteMCliMRestFOrdRestValorCartaSubPanel, "North");
+        mCliMRestFOrdRestValorCartaSuperPanel.add(centroMCliMRestFOrdRestValorCartaSubPanel, "Center");
+        mCliMRestFOrdRestValorCartaSuperPanel.add(sulMCliMRestFOrdRestValorCartaSubPanel, "South");
+
+        JPanel norteMCliMRestFOrdRestValorCartaSSPanel = new JPanel();
+        norteMCliMRestFOrdRestValorCartaSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFOrdRestValorCartaSSPanel.add(mCliMRestFOrdRestsValorCartaLabel);
+        norteMCliMRestFOrdRestValorCartaSubPanel.add(norteMCliMRestFOrdRestValorCartaSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFOrdRestValorCartaSubPanel.add(ptEnMCliMRestFOrdRestValorCartaButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFOrdRestValorCartaSSPanel = new JPanel();
+        centroMCliMRestFOrdRestValorCartaSSPanel.setLayout(new GridLayout(1, 2));
+        centroMCliMRestFOrdRestValorCartaSubPanel.add(centroMCliMRestFOrdRestValorCartaSSPanel);
+
+        JPanel centroMCliMRestFOrdRestValorCartaSSPanel1 = new JPanel();
+        centroMCliMRestFOrdRestValorCartaSSPanel1.setLayout(new GridBagLayout());
+        centroMCliMRestFOrdRestValorCartaSubPanel.add(centroMCliMRestFOrdRestValorCartaSSPanel1);
+
+        centroMCliMRestFOrdRestValorCartaSSPanel.add(mCliMRestFOrdRestValorCartaLabel);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(dezMCliMRestFOrdRestValorCartaCBox);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(dezVinteMCliMRestFOrdRestValorCartaCBox);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(vinteTrintaMCliMRestFOrdRestValorCartaCBox);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(trintaQuarentaMCliMRestFOrdRestValorCartaCBox);
+        centroMCliMRestFOrdRestValorCartaSSPanel1.add(quarentaMaisMCliMRestFOrdRestValorCartaCBox);
 
-        JComboBox<String> fHoraFMCliRestJCBox = new JComboBox<>();
-        fHoraFMCliRestJCBox.addItem("");
-        fHoraFMCliRestJCBox.addItem("Almoço");
-        fHoraFMCliRestJCBox.addItem("Jantar");
-        fHoraFMCliRestJCBox.addItem("Ambos");
+        sulMCliMRestFOrdRestValorCartaSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFOrdRestValorCartaSubPanel.add(voltarMCliMRestFOrdRestValorCartaButton);
+        sulMCliMRestFOrdRestValorCartaSubPanel.add(retornarMCliMRestFOrdRestValorCartaButton);
 
+        dezMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
 
-        //todo verificar porque não deu certo
-        JComboBox fLotCliRestJCBox = new JComboBox();
-        for (int i = 1; i <= 50; i++) {
-            fLotCliRestJCBox.addItem(i);
-        }
+        dezVinteMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        vinteTrintaMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        trintaQuarentaMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        quarentaMaisMCliMRestFOrdRestValorCartaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMRestFOrdRestValorCartaButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestFOrdRestValorCartaButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
 
-        JComboBox fCidMCliRestJCBox = new JComboBox();
-        fCidMCliRestJCBox.addItem("");
-        fCidMCliRestJCBox.addItem("Coimbra");
-        fCidMCliRestJCBox.addItem("Porto");
-        fCidMCliRestJCBox.addItem("Lisboa");
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTRAR POR VALORES MÉDIOS DOS PRATOS – PRATO DO DIA//////////
+    private void construirPanelMCliMRestFOrdRestValorPDia(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFOrdRestValorPDiaSuperPanel) {
 
-        JButton ptEnMCliRestButton = new JButton("PT/EN");
-        JButton voltarMCliRestButton = new JButton("MENU CLIENTE");
-        JButton okMCliRestButton = new JButton("OK");
 
-        //todo exemplo a verificar
-        String[] nomeColunasMCliRest = new String[]{
-                "ZONA", "TOTAL", "DISPONÍVEIS"
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();
+        norteMCliMRestFOrdRestValorPDiaSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();
+        JPanel sulMCliMRestFOrdRestValorPDiaSubPanel = new JPanel();
+        JLabel mCliMRestFOrdRestsValorPDiaLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFOrdRestValorMedPDiaLabel = new JLabel("VALORES MÉDIOS DOS PRATOS – PRATO DO DIA");
+
+        JCheckBox dezMCliMRestFOrdRestValorPDiaCBox = new JCheckBox(">10€");
+        dezMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox dezVinteMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("10€-20€");
+        dezVinteMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox vinteTrintaMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("20€-30€");
+        vinteTrintaMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox trintaQuarentaMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("30€-40€");
+        trintaQuarentaMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox quarentaMaisMCliMRestFOrdRestValorPDiaCBox = new JCheckBox("<40€");
+        quarentaMaisMCliMRestFOrdRestValorPDiaCBox.setMnemonic(KeyEvent.VK_C);
+
+        JButton ptEnMCliMRestFOrdRestValorPDiaButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFOrdRestValorPDiaButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFOrdRestValorPDiaButton = new JButton("VOLTAR");
+
+        mCliMRestFOrdRestValorPDiaSuperPanel.add(norteMCliMRestFOrdRestValorPDiaSubPanel, "North");
+        mCliMRestFOrdRestValorPDiaSuperPanel.add(centroMCliMRestFOrdRestValorPDiaSubPanel, "Center");
+        mCliMRestFOrdRestValorPDiaSuperPanel.add(sulMCliMRestFOrdRestValorPDiaSubPanel, "South");
+
+        JPanel norteMCliMRestFOrdRestValorPDiaSSPanel = new JPanel();
+        norteMCliMRestFOrdRestValorPDiaSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFOrdRestValorPDiaSSPanel.add(mCliMRestFOrdRestsValorPDiaLabel);
+        norteMCliMRestFOrdRestValorPDiaSubPanel.add(norteMCliMRestFOrdRestValorPDiaSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFOrdRestValorPDiaSubPanel.add(ptEnMCliMRestFOrdRestValorPDiaButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFOrdRestValorPDiaSSPanel = new JPanel();
+        centroMCliMRestFOrdRestValorPDiaSSPanel.setLayout(new GridLayout(1, 2));
+        centroMCliMRestFOrdRestValorPDiaSubPanel.add(centroMCliMRestFOrdRestValorPDiaSSPanel);
+
+        JPanel centroMCliMRestFOrdRestValorPDiaSSPanel1 = new JPanel();
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.setLayout(new GridBagLayout());
+        centroMCliMRestFOrdRestValorPDiaSubPanel.add(centroMCliMRestFOrdRestValorPDiaSSPanel1);
+
+        centroMCliMRestFOrdRestValorPDiaSSPanel.add(mCliMRestFOrdRestValorMedPDiaLabel);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(dezMCliMRestFOrdRestValorPDiaCBox);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(dezVinteMCliMRestFOrdRestValorPDiaCBox);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(vinteTrintaMCliMRestFOrdRestValorPDiaCBox);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(trintaQuarentaMCliMRestFOrdRestValorPDiaCBox);
+        centroMCliMRestFOrdRestValorPDiaSSPanel1.add(quarentaMaisMCliMRestFOrdRestValorPDiaCBox);
+
+        sulMCliMRestFOrdRestValorPDiaSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFOrdRestValorPDiaSubPanel.add(voltarMCliMRestFOrdRestValorPDiaButton);
+        sulMCliMRestFOrdRestValorPDiaSubPanel.add(retornarMCliMRestFOrdRestValorPDiaButton);
+
+        dezMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        dezVinteMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        vinteTrintaMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        trintaQuarentaMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        quarentaMaisMCliMRestFOrdRestValorPDiaCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMRestFOrdRestValorPDiaButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        voltarMCliMRestFOrdRestValorPDiaButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
+        });
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS – HORÁRIO DE FUNCIONAMENTO//////////
+    private void construirPanelMCliMRestFRestHFunc(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestHFuncSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFRestHFuncSubPanel = new JPanel();
+        norteMCliMRestFRestHFuncSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFRestHFuncSubPanel = new JPanel();
+        JPanel sulMCliMRestFRestHFuncSubPanel = new JPanel();
+
+        JLabel mCliMRestsFRestsHFuncLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFRestHFuncLabel = new JLabel("HORÁRIOS DE FUNCIONAMENTO");
+
+        JLabel fHoraMCliMRestFRestHFuncLabel = new JLabel("HORA");
+        JLabel fDataMCliMRestFRestHFuncLabel = new JLabel("DATA");
+
+//Calendário
+        UtilDateModel modelMCliMRestFRestHFun = new UtilDateModel();
+
+        ResourceBundle b = ResourceBundle.getBundle("Text");
+
+        Properties p = convertResourceBundleToProperties(b);
+        JDatePanelImpl datePanelMCliMRestFRestHFun = new JDatePanelImpl(modelMCliMRestFRestHFun, p);
+        JDatePickerImpl datePickerMCliMRestFRestHFun = new JDatePickerImpl(datePanelMCliMRestFRestHFun, new DateLabelFormatter());
+
+//TODO ver melhor forma de apresentar para conseguir selecionar
+        String[] fHoraMCliMRestFRestHFun = {"", "11h", "11h30", "12h", "12h30", "13h", "13h30", "14h", "14h30", "15h", "15h30", "19h", "19h30", "20h", "20h30", "21h", "21h30", "22h", "22h30"};
+        JComboBox arrayfHoraFMCliMRestFRestHFuncJCBox = new JComboBox(fHoraMCliMRestFRestHFun);
+
+        JButton ptEnMCliMRestFRestHFuncButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFRestHFuncButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFRestHFuncButton = new JButton("VOLTAR");
+
+
+        mCliMRestFRestHFuncSuperPanel.add(norteMCliMRestFRestHFuncSubPanel, "North");
+        mCliMRestFRestHFuncSuperPanel.add(centroMCliMRestFRestHFuncSubPanel, "Center");
+        mCliMRestFRestHFuncSuperPanel.add(sulMCliMRestFRestHFuncSubPanel, "South");
+
+        JPanel norteMCliMRestFRestHFuncSSPanel = new JPanel();
+        norteMCliMRestFRestHFuncSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFRestHFuncSSPanel.add(mCliMRestsFRestsHFuncLabel);
+        norteMCliMRestFRestHFuncSubPanel.add(norteMCliMRestFRestHFuncSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFRestHFuncSubPanel.add(ptEnMCliMRestFRestHFuncButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFRestHFuncSSPanel = new JPanel();
+        centroMCliMRestFRestHFuncSSPanel.setLayout(new FlowLayout());
+        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel);
+
+        JPanel centroMCliMRestFRestHFuncSSPanel1 = new JPanel();
+        centroMCliMRestFRestHFuncSSPanel1.setLayout(new FlowLayout());
+        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel1);
+
+        JPanel centroMCliMRestFRestHFuncSSPanel2 = new JPanel();
+        centroMCliMRestFRestHFuncSSPanel2.setLayout(new FlowLayout());
+        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel2);
+
+        JPanel centroMCliMRestFRestHFuncSSPanel3 = new JPanel();
+        centroMCliMRestFRestHFuncSSPanel3.setLayout(new FlowLayout());
+        centroMCliMRestFRestHFuncSubPanel.add(centroMCliMRestFRestHFuncSSPanel3);
+
+        centroMCliMRestFRestHFuncSSPanel.add(mCliMRestFRestHFuncLabel);
+        centroMCliMRestFRestHFuncSSPanel1.add(fDataMCliMRestFRestHFuncLabel);
+        centroMCliMRestFRestHFuncSSPanel1.add(datePickerMCliMRestFRestHFun);
+        centroMCliMRestFRestHFuncSSPanel2.add(fHoraMCliMRestFRestHFuncLabel);
+        centroMCliMRestFRestHFuncSSPanel2.add(arrayfHoraFMCliMRestFRestHFuncJCBox);
+
+        sulMCliMRestFRestHFuncSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFRestHFuncSubPanel.add(voltarMCliMRestFRestHFuncButton);
+        sulMCliMRestFRestHFuncSubPanel.add(retornarMCliMRestFRestHFuncButton);
+
+        //todo faltar ver botões
+        retornarMCliMRestFRestHFuncButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestFRestHFuncButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS - LOTAÇÃO//////////
+    private void construirPanelMCliMRestFRestLot(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestLotSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFRestLotSubPanel = new JPanel();
+        norteMCliMRestFRestLotSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFRestLotSubPanel = new JPanel();
+        JPanel sulMCliMRestFRestLotSubPanel = new JPanel();
+
+        JLabel mCliMRestsFRestsLotLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFRestLotLabel = new JLabel("LOTAÇÃO");
+        JLabel dataMCliMRestFRestLotLabel = new JLabel("DATA");
+
+        //todo exemplo a verificar (HÁ FORMA MELHOR?)
+        String[] nomeColunasMCliMRestFRestLot = new String[]{
+                "RESTAURANTE”, “ZONA", "TOTAL", "DISPONÍVEIS"
         };
 
-        Object[][] dados = new Object[][]{
-                {"ZONA", "TOTAL", "DISPONÍVEIS"},
-                {"Esplanada", 20, 5},
-                {"Interior Ñ Fumadores", 20, 10},
-                {"Interior Fumadores", 5, 2},
+        Object[][] dadosMCliMRestFRestLot = new Object[][]{
+                {"RESTAURANTE”, “ZONA", "TOTAL", "DISPONÍVEIS"},
+                {"A", "Esplanada", 20, 5},
+                {"B", "Interior Ñ Fumadores", 20, 10},
+                {"C", "Interior Fumadores", 5, 2},
         };
+
         //criação da tabela
-        JTable tabelaMCliRest = new JTable(dados, nomeColunasMCliRest);
+        JTable tabelaMCliMRestFRestLot = new JTable(dadosMCliMRestFRestLot, nomeColunasMCliMRestFRestLot);
 
 
 //Calendário
-        UtilDateModel model3 = new UtilDateModel();
+        UtilDateModel modelMCliMRestFRestLot = new UtilDateModel();
 
         ResourceBundle b = ResourceBundle.getBundle("Text");
 
         Properties p = convertResourceBundleToProperties(b);
-        JDatePanelImpl datePanel2 = new JDatePanelImpl(model3, p);
-        JDatePickerImpl datePicker3 = new JDatePickerImpl(datePanel2, new DateLabelFormatter());
-
-        mCliRestSuperPanel.add(norteMCliRestSubPanel, "North");
-        mCliRestSuperPanel.add(centroMCliRestSubPanel, "Center");
-        mCliRestSuperPanel.add(sulMCliRestSubPanel, "South");
-
-        JPanel norteMCliRestSSPanel = new JPanel();
-        norteMCliRestSSPanel.setLayout(new FlowLayout());
-        norteMCliRestSSPanel.add(mCliRestLabel);
-        norteMCliRestSubPanel.add(norteMCliRestSSPanel, BorderLayout.CENTER);
-        norteMCliRestSubPanel.add(ptEnMCliRestButton, BorderLayout.EAST);
-
-        JPanel centroMCliRestSSPanel = new JPanel();
-        centroMCliRestSSPanel.setLayout(new GridLayout(1, 2));
-        centroMCliRestSubPanel.add(centroMCliRestSSPanel);
-
-        JPanel centroMCliRestSSPanel1 = new JPanel();
-        centroMCliRestSSPanel1.setLayout(new GridBagLayout());
-        centroMCliRestSubPanel.add(centroMCliRestSSPanel1);
-
-        JPanel centroMCliRestSSPanel2 = new JPanel();
-        centroMCliRestSSPanel2.setLayout(new GridBagLayout());
-        centroMCliRestSubPanel.add(centroMCliRestSSPanel2);
-
-        JPanel centroMCliRestSSPanel3 = new JPanel();
-        centroMCliRestSSPanel3.setLayout(new GridBagLayout());
-        centroMCliRestSubPanel.add(centroMCliRestSSPanel3);
-
-        JPanel centroMCliRestSSPanel4 = new JPanel();
-        centroMCliRestSSPanel4.setLayout(new BorderLayout());
-        centroMCliRestSubPanel.add(centroMCliRestSSPanel4, BorderLayout.CENTER);
+        JDatePanelImpl datePanelMCliMRestFRestLot = new JDatePanelImpl(modelMCliMRestFRestLot, p);
+        JDatePickerImpl datePickerMCliMRestFRestLot = new JDatePickerImpl(datePanelMCliMRestFRestLot, new DateLabelFormatter());
 
-        JPanel centroMCliRestSSPanel5 = new JPanel();
-        centroMCliRestSSPanel5.setLayout(new GridBagLayout());
-        centroMCliRestSubPanel.add(centroMCliRestSSPanel5);
+        //todo verificar porque não deu certo
+        JComboBox fLotCliMRestFRestLotJCBox = new JComboBox();
+        for (int i = 1; i <= 50; i++) {
+            fLotCliMRestFRestLotJCBox.addItem(i);
+        }
 
-        JPanel centroMCliRestSSPanel6 = new JPanel();
-        centroMCliRestSSPanel6.setLayout(new GridBagLayout());
-        centroMCliRestSubPanel.add(centroMCliRestSSPanel6);
+        JButton ptEnMCliMRestFRestLotButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFRestLotButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFRestLotButton = new JButton("VOLTAR");
 
-        JPanel centroMCliRestSSPanel7 = new JPanel();
-        centroMCliRestSSPanel7.setLayout(new GridBagLayout());
-        centroMCliRestSubPanel.add(centroMCliRestSSPanel7);
+        mCliMRestFRestLotSuperPanel.add(norteMCliMRestFRestLotSubPanel, "North");
+        mCliMRestFRestLotSuperPanel.add(centroMCliMRestFRestLotSubPanel, "Center");
+        mCliMRestFRestLotSuperPanel.add(sulMCliMRestFRestLotSubPanel, "South");
 
-        centroMCliRestSSPanel.add(fhoraFMCliRestLabel);
-        centroMCliRestSSPanel1.add(fDataMCliRestLabel);
-        centroMCliRestSSPanel1.add(datePicker3);
-        centroMCliRestSSPanel1.add(fHoraFMCliRestJCBox);
+        JPanel norteMCliMRestFRestLotSSPanel = new JPanel();
+        norteMCliMRestFRestLotSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFRestLotSSPanel.add(mCliMRestsFRestsLotLabel);
+        norteMCliMRestFRestLotSubPanel.add(norteMCliMRestFRestLotSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFRestLotSubPanel.add(ptEnMCliMRestFRestLotButton, BorderLayout.EAST);
 
-        centroMCliRestSSPanel2.add(fvaloresMedCPMCliRestLabel);
-        centroMCliRestSSPanel2.add(fvaloresMCMCliRestRButton);
-        centroMCliRestSSPanel2.add(fvaloresMPMCliRestRButton);
-        centroMCliRestSSPanel3.add(dez);
-        centroMCliRestSSPanel3.add(dezVinte);
-        centroMCliRestSSPanel3.add(vinteTrinta);
-        centroMCliRestSSPanel3.add(trintaQuarenta);
-        centroMCliRestSSPanel3.add(quarenta);
+        JPanel centroMCliMRestFRestLotSSPanel = new JPanel();
+        centroMCliMRestFRestLotSSPanel.setLayout(new GridLayout(4, 2));
+        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel);
 
-        centroMCliRestSSPanel4.add(fPontMCliRestLabel);
-        centroMCliRestSSPanel5.add(um);
-        centroMCliRestSSPanel5.add(dois);
-        centroMCliRestSSPanel5.add(tres);
-        centroMCliRestSSPanel5.add(quatro);
-        centroMCliRestSSPanel5.add(cinco);
+        JPanel centroMCliMRestFRestLotSSPanel1 = new JPanel();
+        centroMCliMRestFRestLotSSPanel1.setLayout(new GridBagLayout());
+        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel1);
 
-        centroMCliRestSSPanel6.add(fLotMCliRestLabel);
-        centroMCliRestSSPanel6.add(tabelaMCliRest);
+        JPanel centroMCliMRestFRestLotSSPanel2 = new JPanel();
+        centroMCliMRestFRestLotSSPanel2.setLayout(new GridBagLayout());
+        centroMCliMRestFRestLotSubPanel.add(centroMCliMRestFRestLotSSPanel2);
 
-        centroMCliRestSSPanel7.add(fCidMCliRestLabel);
-        centroMCliRestSSPanel7.add(fCidMCliRestJCBox);
+        centroMCliMRestFRestLotSSPanel.add(mCliMRestFRestLotLabel);
+        centroMCliMRestFRestLotSSPanel1.add(dataMCliMRestFRestLotLabel);
+        centroMCliMRestFRestLotSSPanel1.add(datePickerMCliMRestFRestLot);
+        centroMCliMRestFRestLotSSPanel2.add(tabelaMCliMRestFRestLot);
 
-        sulMCliRestSubPanel.setLayout(new FlowLayout());
-        sulMCliRestSubPanel.add(voltarMCliRestButton);
-        sulMCliRestSubPanel.add(okMCliRestButton);
+        sulMCliMRestFRestLotSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFRestLotSubPanel.add(voltarMCliMRestFRestLotButton);
+        sulMCliMRestFRestLotSubPanel.add(retornarMCliMRestFRestLotButton);
 
-
-        voltarMCliRestButton.addActionListener(a -> {
+        retornarMCliMRestFRestLotButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        voltarMCliMRestFRestLotButton.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
             cl.show(contentor, MENUCLIENTE_CARD);
             this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
 
         });
+    }
+
+    //////MENU RESTAURANTE – RESTAURANTES – MENU FILTROS - CIDADE//////////
+    private void construirPanelMCliMRestFRestCid(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliMRestFRestCidSuperPanel) {
+
+
+        /////SUBPAINEIS//////
+        JPanel norteMCliMRestFRestCidSubPanel = new JPanel();
+        norteMCliMRestFRestCidSubPanel.setLayout(new BorderLayout());
+        JPanel centroMCliMRestFRestCidSubPanel = new JPanel();
+        JPanel sulMCliMRestFRestCidSubPanel = new JPanel();
 
-        //todo ver os encaminhamentos
-        okMCliRestButton.addActionListener(e -> {
+        JLabel mCliMRestsFRestsCidLabel = new JLabel("MENU CLIENTE - PESQUISAR RESTAURANTES");
+        JLabel mCliMRestFRestCidLabel = new JLabel("CIDADE");
+
+        JCheckBox coimbraMCliMRestFOrdRestJCBox = new JCheckBox("Coimbra");
+        coimbraMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox portoMCliMRestFOrdRestJCBox = new JCheckBox("Porto");
+        portoMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox lisboaMCliMRestFOrdRestJCBox = new JCheckBox("Lisboa");
+        lisboaMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox guimaraesMCliMRestFOrdRestJCBox = new JCheckBox("Guimarães");
+        guimaraesMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox bragaMCliMRestFOrdRestJCBox = new JCheckBox("Braga");
+        bragaMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+        JCheckBox vilaDoCondeMCliMRestFOrdRestJCBox = new JCheckBox("Vila do Conde");
+        vilaDoCondeMCliMRestFOrdRestJCBox.setMnemonic(KeyEvent.VK_C);
+
+        JButton ptEnMCliMRestFRestCidButton = new JButton("PT/EN");
+        JButton voltarMCliMRestFRestCidButton = new JButton("MENU CLIENTE");
+        JButton retornarMCliMRestFRestCidButton = new JButton("VOLTAR");
+
+        mCliMRestFRestCidSuperPanel.add(norteMCliMRestFRestCidSubPanel, "North");
+        mCliMRestFRestCidSuperPanel.add(centroMCliMRestFRestCidSubPanel, "Center");
+        mCliMRestFRestCidSuperPanel.add(sulMCliMRestFRestCidSubPanel, "South");
+
+        JPanel norteMCliMRestFRestCidSSPanel = new JPanel();
+        norteMCliMRestFRestCidSSPanel.setLayout(new FlowLayout());
+        norteMCliMRestFRestCidSSPanel.add(mCliMRestsFRestsCidLabel);
+        norteMCliMRestFRestCidSubPanel.add(norteMCliMRestFRestCidSSPanel, BorderLayout.CENTER);
+        norteMCliMRestFRestCidSubPanel.add(ptEnMCliMRestFRestCidButton, BorderLayout.EAST);
+
+        JPanel centroMCliMRestFRestCidSSPanel = new JPanel();
+        centroMCliMRestFRestCidSSPanel.setLayout(new GridLayout(8, 2));
+        centroMCliMRestFRestCidSubPanel.add(centroMCliMRestFRestCidSSPanel);
+
+        centroMCliMRestFRestCidSSPanel.add(mCliMRestFRestCidLabel);
+        centroMCliMRestFRestCidSSPanel.add(coimbraMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(portoMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(lisboaMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(bragaMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(guimaraesMCliMRestFOrdRestJCBox);
+        centroMCliMRestFRestCidSSPanel.add(vilaDoCondeMCliMRestFOrdRestJCBox);
+
+        sulMCliMRestFRestCidSubPanel.setLayout(new FlowLayout());
+        sulMCliMRestFRestCidSubPanel.add(voltarMCliMRestFRestCidButton);
+        sulMCliMRestFRestCidSubPanel.add(retornarMCliMRestFRestCidButton);
+
+        coimbraMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        portoMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        lisboaMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        bragaMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        guimaraesMCliMRestFOrdRestJCBox.addActionListener(a -> {
             CardLayout cl = (CardLayout) contentor.getLayout();
-            cl.show(contentor, LOGIN_CARD);
-            this.setSize(500, 180);
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        vilaDoCondeMCliMRestFOrdRestJCBox.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+
+        retornarMCliMRestFRestCidButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MCLIMRESTFORDRESTS_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+        });
+        voltarMCliMRestFRestCidButton.addActionListener(a -> {
+            CardLayout cl = (CardLayout) contentor.getLayout();
+            cl.show(contentor, MENUCLIENTE_CARD);
+            this.setSize(LARGURA_PADRAO, ALTURA_PADRAO);
+
         });
     }
+
+
     //todo ver como criar o apagar e editar comentário na seleção da tabela e ver a questão do OK
     //////MENU CLIENTE – CONSULTAR COMENTÁRIOS//////////
 
-    private void construirPanelMCliComentarios(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliComSuperPanel) {
+    private void construirPanelMCliComentarios(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliComSuperPanel) {
 
 
         /////SUBPAINEIS//////
@@ -1839,7 +2443,8 @@
     }
 
     ////////////////////MENU CLIENTE - ACTUALIZAR DADOS /////////////////////////
-    private void construirPanelMCliAtDados(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliAtDadosSuperPanel) {
+    private void construirPanelMCliAtDados(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliAtDadosSuperPanel) {
 
         passwordValido = false;
         confirmarPasswordValido = false;
@@ -1878,7 +2483,7 @@
 
             @Override
             public void focusLost(FocusEvent e) {
-                if (passwordCliMCliField.getPassword().length<6) {
+                if (passwordCliMCliField.getPassword().length < 6) {
                     passwordValido = false;
                 }
 
@@ -1936,12 +2541,12 @@
         sulAtDadosMCliSubPanel.add(actualizarCliMCliButton);
 
         actualizarCliMCliButton.addActionListener(a -> {
-            if(!passwordValido){
-                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(),"Password Inválido: deve conter o mínimo de 6 caracteres!");
+            if (!passwordValido) {
+                JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(), "Password Inválido: deve conter o mínimo de 6 caracteres!");
                 passwordCliMCliField.requestFocus();
                 return;
             }
-            if(!confirmarPasswordValido) {
+            if (!confirmarPasswordValido) {
                 JOptionPane.showMessageDialog(((Component) a.getSource()).getParent(), "Password Inválido: deve ser igual password!");
                 confirmarPassawordCliMCliField.requestFocus();
                 return;
@@ -1964,7 +2569,8 @@
 // todo verificar os botões editar e apagar que estão em conflito com visualizar
     //////MENU CLIENTE – RESERVAS - ACTIVAS//////////
 
-    private void construirPanelMCliResAct(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliResActSuperPanel) {
+    private void construirPanelMCliResAct(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliResActSuperPanel) {
 
 
         /////SUBPAINEIS//////
@@ -2072,7 +2678,8 @@
     }
 
     //////MENU CLIENTE – FAZER RESERVAS//////////
-    private void construirPanelMCliFazerRes(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliFazerResSuperPanel) {
+    private void construirPanelMCliFazerRes(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliFazerResSuperPanel) {
 
 
         /////SUBPAINEIS//////
@@ -2163,7 +2770,8 @@
 
 
     //////MENU CLIENTE – FAZER RESERVA PRESENCIAL//////////
-    private void construirPanelMCliFazerResP(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliFazerResPSuperPanel) {
+    private void construirPanelMCliFazerResP(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliFazerResPSuperPanel) {
 
         /////SUBPAINEIS//////
         JPanel norteMCliFResPSubPanel = new JPanel();
@@ -2195,7 +2803,7 @@
         JButton retornarMCliFResPButton = new JButton("VOLTAR");
 
         //Adição do calendário
-        UtilDateModel model1 = new UtilDateModel();
+        //UtilDateModel model1 = new UtilDateModel();
         UtilDateModel model6 = new UtilDateModel();
 
         ResourceBundle b = ResourceBundle.getBundle("Text");
@@ -2273,7 +2881,8 @@
     }
 
     //////MENU CLIENTE – FAZER RESERVA TAKE-AWAY//////////
-    private void construirPanelMCliFazerResTA(Interface janela, Container contentor, JPanel loginSuperPanel, JPanel mCliFazerResTASuperPanel) {
+    private void construirPanelMCliFazerResTA(Interface janela, Container contentor, JPanel
+            loginSuperPanel, JPanel mCliFazerResTASuperPanel) {
 
 
         /////SUBPAINEIS//////
Index: src/Text.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>text.today=Today\r\ntext.month=Month;\r\ntext.year=Year;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- src/Text.properties	(revision 969c4f798b4cc1d9e4ee6c6a4b871ae9e1f3fbe9)
+++ src/Text.properties	(date 1609418478603)
@@ -1,3 +1,5 @@
 text.today=Today
 text.month=Month;
-text.year=Year;
\ No newline at end of file
+text.year=Year;
+
+label.titulo.menu.cliente=MENU CLIENTE
\ No newline at end of file
